{"version":3,"sources":["sections/auth/reset-password/ResetPasswordForm.js","pages/auth/ResetPassword.js"],"names":["ResetPasswordForm","onSent","onGetEmail","isMountedRef","useAuth","resetPassword","useIsMountedRef","ResetPasswordSchema","Yup","shape","email","required","formik","useFormik","initialValues","validationSchema","onSubmit","values","a","setErrors","setSubmitting","sendOTP","current","console","error","afterSubmit","message","errors","touched","isSubmitting","handleSubmit","getFieldProps","value","autoComplete","noValidate","Stack","spacing","Alert","severity","TextField","fullWidth","type","label","Boolean","helperText","LoadingButton","size","variant","loading","RootStyle","styled","display","minHeight","alignItems","justifyContent","padding","theme","ResetPassword","useState","setEmail","sent","setSent","Page","title","sx","height","LogoOnlyLayout","Container","Box","maxWidth","mx","textAlign","mb","Typography","gutterBottom","Button","component","RouterLink","to","PATH_AUTH","login","mt","paragraph","color"],"mappings":"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","file":"static/js/160.1363a172.chunk.js","sourcesContent":["import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// @mui\nimport { TextField, Alert, Stack } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\nimport { sendOTP } from 'src/api/Auth/Auth';\n\n// ----------------------------------------------------------------------\n\nResetPasswordForm.propTypes = {\n  onSent: PropTypes.func,\n  onGetEmail: PropTypes.func,\n};\n\nexport default function ResetPasswordForm({ onSent, onGetEmail }) {\n  const { resetPassword } = useAuth();\n  const isMountedRef = useIsMountedRef();\n\n  const ResetPasswordSchema = Yup.object().shape({\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n    },\n    validationSchema: ResetPasswordSchema,\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\n      try {\n        await sendOTP(values.email);\n        if (isMountedRef.current) {\n          onSent();\n          onGetEmail(formik.values.email);\n          setSubmitting(false);\n        }\n      } catch (error) {\n        console.error(error);\n        if (isMountedRef.current) {\n          setErrors({ afterSubmit: error.message });\n          setSubmitting(false);\n        }\n      }\n    },\n  });\n\n  const { errors, touched, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          {errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit}</Alert>}\n\n          <TextField\n            fullWidth\n            {...getFieldProps('email')}\n            type=\"email\"\n            label=\"Email address\"\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n\n          <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n            Reset Password\n          </LoadingButton>\n        </Stack>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Button, Container, Typography } from '@mui/material';\n// layouts\nimport LogoOnlyLayout from '../../layouts/LogoOnlyLayout';\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n// components\nimport Page from '../../components/Page';\n// sections\nimport { ResetPasswordForm } from '../../sections/auth/reset-password';\n// assets\nimport { SentIcon } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  minHeight: '100%',\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: theme.spacing(12, 0),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function ResetPassword() {\n  const [email, setEmail] = useState('');\n  const [sent, setSent] = useState(false);\n\n  return (\n    <Page title=\"Reset Password\" sx={{ height: 1 }}>\n      <RootStyle>\n        <LogoOnlyLayout />\n\n        <Container>\n          <Box sx={{ maxWidth: 480, mx: 'auto' }}>\n            {!sent ? (\n              <>\n                <Typography variant=\"h3\" paragraph>\n                  Forgot your password?\n                </Typography>\n                <Typography sx={{ color: 'text.secondary', mb: 5 }}>\n                  Please enter the email address associated with your account and We will email you a link to reset your\n                  password.\n                </Typography>\n\n                <ResetPasswordForm onSent={() => setSent(true)} onGetEmail={(value) => setEmail(value)} />\n\n                <Button fullWidth size=\"large\" component={RouterLink} to={PATH_AUTH.login} sx={{ mt: 1 }}>\n                  Back\n                </Button>\n              </>\n            ) : (\n              <Box sx={{ textAlign: 'center' }}>\n                <SentIcon sx={{ mb: 5, mx: 'auto', height: 160 }} />\n\n                <Typography variant=\"h3\" gutterBottom>\n                  Request sent successfully\n                </Typography>\n                <Typography>\n                  We have sent a confirmation email to &nbsp;\n                  <strong>{email}</strong>\n                  <br />\n                  Please check your email.\n                </Typography>\n\n                <Button size=\"large\" variant=\"contained\" component={RouterLink} to={PATH_AUTH.login} sx={{ mt: 5 }}>\n                  Back\n                </Button>\n              </Box>\n            )}\n          </Box>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}