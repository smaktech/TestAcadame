{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","pages/overview/Block.js","pages/overview/mui/Tabs.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","last","name","listDefault","map","link","LinkItem","listActiveLast","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","component","width","height","borderRadius","bgcolor","href","icon","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","Block","title","children","theme","alpha","palette","grey","p","minHeight","Label","style","justifyContent","flexWrap","mx","SIMPLE_TAB","value","label","disabled","SCROLLABLE_TAB","RootStyle","styled","paddingTop","spacing","paddingBottom","TabsComponent","useState","setValue","valueScrollable","setValueScrollable","handleChange","event","newValue","pt","pb","mode","PATH_PAGE","components","columns","xs","md","onChange","tab","index","String","panel","allowScrollButtonsMobile","scrollButtons"],"mappings":"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","file":"static/js/99.c408064c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { last } from 'lodash';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = last(links)?.name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Paper, CardHeader, Box, Typography } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBlock.propTypes = {\n  children: PropTypes.any.isRequired,\n  sx: PropTypes.object,\n  title: PropTypes.string,\n};\n\nexport function Block({ title, sx, children }) {\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        borderRadius: 1.5,\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\n      }}\n    >\n      {title && <CardHeader title={title} />}\n      <Box\n        sx={{\n          p: 5,\n          minHeight: 180,\n          ...sx,\n        }}\n      >\n        {children}\n      </Box>\n    </Paper>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLabel.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport function Label({ title }) {\n  return (\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\n      {title}\n    </Typography>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Tab, Tabs, Container } from '@mui/material';\nimport { TabContext, TabList, TabPanel, Masonry } from '@mui/lab';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport Page from '../../../components/Page';\nimport Iconify from '../../../components/Iconify';\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\n//\nimport { Block } from '../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { mx: '8px !important' },\n};\n\nconst SIMPLE_TAB = [\n  {\n    value: '1',\n    icon: <Iconify icon=\"eva:phone-call-fill\" width={24} height={24} />,\n    label: 'Item One',\n    disabled: false,\n  },\n  {\n    value: '2',\n    icon: <Iconify icon=\"eva:heart-fill\" width={24} height={24} />,\n    label: 'Item Two',\n    disabled: false,\n  },\n  {\n    value: '3',\n    icon: <Iconify icon=\"eva:headphones-fill\" width={24} height={24} />,\n    label: 'Item Three',\n    disabled: true,\n  },\n];\n\nconst SCROLLABLE_TAB = [\n  {\n    value: '1',\n    icon: <Iconify icon=\"eva:phone-call-fill\" width={24} height={24} />,\n    label: 'Item 1',\n  },\n  { value: '2', icon: <Iconify icon=\"eva:heart-fill\" width={24} height={24} />, label: 'Item 2' },\n  {\n    value: '3',\n    icon: <Iconify icon=\"eva:headphones-fill\" width={24} height={24} />,\n    label: 'Item 3',\n  },\n  {\n    value: '4',\n    icon: <Iconify icon=\"eva:headphones-fill\" width={24} height={24} />,\n    label: 'Item 4',\n  },\n  {\n    value: '5',\n    icon: <Iconify icon=\"eva:headphones-fill\" width={24} height={24} />,\n    label: 'Item 5',\n  },\n  {\n    value: '6',\n    icon: <Iconify icon=\"eva:headphones-fill\" width={24} height={24} />,\n    label: 'Item 6',\n  },\n  {\n    value: '7',\n    icon: <Iconify icon=\"eva:headphones-fill\" width={24} height={24} />,\n    label: 'Item 7',\n  },\n];\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function TabsComponent() {\n  const [value, setValue] = useState('1');\n  const [valueScrollable, setValueScrollable] = useState('1');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeScrollable = (event, newValue) => {\n    setValueScrollable(newValue);\n  };\n\n  return (\n    <Page title=\"Components: Tabs\">\n      <RootStyle>\n        <Box\n          sx={{\n            pt: 6,\n            pb: 1,\n            mb: 10,\n            bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n          }}\n        >\n          <Container>\n            <HeaderBreadcrumbs\n              heading=\"Tabs\"\n              links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Tabs' }]}\n              moreLink=\"https://mui.com/components/tabs\"\n            />\n          </Container>\n        </Box>\n\n        <Container>\n          <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n            <Block title=\"Text\" sx={style}>\n              <TabContext value={value}>\n                <TabList onChange={handleChange}>\n                  {SIMPLE_TAB.map((tab, index) => (\n                    <Tab key={tab.value} label={tab.label} value={String(index + 1)} />\n                  ))}\n                </TabList>\n                <Box\n                  sx={{\n                    p: 2,\n                    mt: 2,\n                    height: 80,\n                    width: '100%',\n                    borderRadius: 1,\n                    bgcolor: 'grey.50012',\n                  }}\n                >\n                  {SIMPLE_TAB.map((panel, index) => (\n                    <TabPanel key={panel.value} value={String(index + 1)}>\n                      {panel.label}\n                    </TabPanel>\n                  ))}\n                </Box>\n              </TabContext>\n            </Block>\n\n            <Block title=\"Icon\" sx={style}>\n              <Tabs value={value} onChange={handleChange}>\n                {SIMPLE_TAB.map((tab) => (\n                  <Tab key={tab.value} icon={tab.icon} value={tab.value} />\n                ))}\n              </Tabs>\n            </Block>\n\n            <Block title=\"Text & Icon\" sx={style}>\n              <TabContext value={value}>\n                <TabList onChange={handleChange}>\n                  {SIMPLE_TAB.map((tab) => (\n                    <Tab key={tab.value} icon={tab.icon} label={tab.label} value={tab.value} disabled={tab.disabled} />\n                  ))}\n                </TabList>\n              </TabContext>\n            </Block>\n\n            <Block title=\"Scrollable\" sx={style}>\n              <Box\n                sx={{\n                  flexGrow: 1,\n                  width: '100%',\n                  maxWidth: 320,\n                }}\n              >\n                <Tabs\n                  allowScrollButtonsMobile\n                  value={valueScrollable}\n                  variant=\"scrollable\"\n                  scrollButtons=\"auto\"\n                  onChange={handleChangeScrollable}\n                >\n                  {SCROLLABLE_TAB.map((tab) => (\n                    <Tab key={tab.value} label={tab.label} value={tab.value} />\n                  ))}\n                </Tabs>\n              </Box>\n            </Block>\n          </Masonry>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}