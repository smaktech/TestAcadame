{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","components/TextMaxLine.js","pages/overview/extra/TextMax.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","last","name","listDefault","map","link","LinkItem","listActiveLast","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","component","width","height","borderRadius","bgcolor","href","icon","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","TextMaxLine","forwardRef","ref","asLink","line","persistent","children","GetFontValue","style","WebkitLineClamp","WebkitBoxOrient","RootStyle","styled","theme","paddingTop","spacing","paddingBottom","TextMax","title","pt","pb","palette","mode","PATH_PAGE","components","columns"],"mappings":"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","file":"static/js/83.e2dce6f2.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { last } from 'lodash';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = last(links)?.name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// @mui\nimport { Typography, Link } from '@mui/material';\n// utils\nimport GetFontValue from '../utils/getFontValue';\n\n// ----------------------------------------------------------------------\n\nconst TextMaxLine = forwardRef(\n  ({ asLink, variant = 'body1', line = 2, persistent = false, children, sx, ...other }, ref) => {\n    const { lineHeight } = GetFontValue(variant);\n\n    const style = {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      display: '-webkit-box',\n      WebkitLineClamp: line,\n      WebkitBoxOrient: 'vertical',\n      ...(persistent && {\n        height: lineHeight * line,\n      }),\n      ...sx,\n    };\n\n    if (asLink) {\n      return (\n        <Link color=\"inherit\" ref={ref} variant={variant} sx={{ ...style }} {...other}>\n          {children}\n        </Link>\n      );\n    }\n\n    return (\n      <Typography ref={ref} variant={variant} sx={{ ...style }} {...other}>\n        {children}\n      </Typography>\n    );\n  }\n);\n\nTextMaxLine.propTypes = {\n  asLink: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  line: PropTypes.number,\n  persistent: PropTypes.bool,\n  sx: PropTypes.object,\n  variant: PropTypes.oneOf([\n    'body1',\n    'body2',\n    'button',\n    'caption',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'inherit',\n    'overline',\n    'subtitle1',\n    'subtitle2',\n  ]),\n};\n\nexport default TextMaxLine;\n","// @mui\nimport Masonry from '@mui/lab/Masonry';\nimport { styled } from '@mui/material/styles';\nimport { Box, Card, CardHeader, Container, CardContent } from '@mui/material';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport Page from '../../../components/Page';\nimport TextMaxLine from '../../../components/TextMaxLine';\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function TextMax() {\n  return (\n    <Page title=\"Components: TextMaxLine\">\n      <RootStyle>\n        <Box\n          sx={{\n            pt: 6,\n            pb: 1,\n            mb: 10,\n            bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n          }}\n        >\n          <Container>\n            <HeaderBreadcrumbs\n              heading=\"TextMaxLine\"\n              links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'TextMaxLine' }]}\n            />\n          </Container>\n        </Box>\n\n        <Container>\n          <Masonry columns={3} spacing={3}>\n            <Card>\n              <CardHeader title=\"1 Line\" />\n              <CardContent>\n                <TextMaxLine line={1}>\n                  Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna. Proin sapien ipsum,\n                  porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc et pellentesque egestas, lacus ante\n                  convallis tellus, vitae iaculis lacus elit id tortor.\n                </TextMaxLine>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader title=\"2 Line\" />\n              <CardContent>\n                <TextMaxLine>\n                  Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna. Proin sapien ipsum,\n                  porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc et pellentesque egestas, lacus ante\n                  convallis tellus, vitae iaculis lacus elit id tortor.\n                </TextMaxLine>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader title=\"3 Line\" />\n              <CardContent>\n                <TextMaxLine line={3}>\n                  Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna. Proin sapien ipsum,\n                  porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc et pellentesque egestas, lacus ante\n                  convallis tellus, vitae iaculis lacus elit id tortor.\n                </TextMaxLine>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader title=\"4 Line\" />\n              <CardContent>\n                <TextMaxLine line={4}>\n                  Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna. Proin sapien ipsum,\n                  porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc et pellentesque egestas, lacus ante\n                  convallis tellus, vitae iaculis lacus elit id tortor.\n                </TextMaxLine>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader title=\"As Link\" />\n              <CardContent>\n                <TextMaxLine asLink line={3} href=\"#\" color=\"primary\" sx={{ maxWidth: 300 }}>\n                  Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna. Proin sapien ipsum,\n                  porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc et pellentesque egestas, lacus ante\n                  convallis tellus, vitae iaculis lacus elit id tortor.\n                </TextMaxLine>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader title=\"Persistent\" />\n              <CardContent>\n                <TextMaxLine persistent line={3} href=\"#\" sx={{ bgcolor: 'background.neutral' }}>\n                  Donec posuere vulputate arcu.\n                </TextMaxLine>\n              </CardContent>\n            </Card>\n          </Masonry>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}