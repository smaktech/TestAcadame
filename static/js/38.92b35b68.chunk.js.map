{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","components/SearchNotFound.js","components/skeleton/SkeletonMap.js","components/skeleton/SkeletonPost.js","components/skeleton/SkeletonPosts.js","components/skeleton/SkeletonProduct.js","components/skeleton/SkeletonProductItem.js","components/skeleton/SkeletonKanbanColumn.js","components/skeleton/SkeletonMailSidebarItem.js","components/skeleton/SkeletonConversationItem.js","components/LightboxModal.js","components/EmojiPicker.js","utils/getFileFormat.js","sections/@dashboard/chat/ChatRoomAttachment.js","sections/@dashboard/chat/ChatRoomOneParticipant.js","sections/@dashboard/chat/ChatRoomPopup.js","sections/@dashboard/chat/ChatRoomGroupParticipant.js","sections/@dashboard/chat/ChatRoom.js","sections/@dashboard/chat/ChatMessageItem.js","sections/@dashboard/chat/ChatMessageList.js","sections/@dashboard/chat/ChatHeaderDetail.js","sections/@dashboard/chat/ChatMessageInput.js","sections/@dashboard/chat/ChatHeaderCompose.js","sections/@dashboard/chat/ChatWindow.js","sections/@dashboard/chat/ChatAccount.js","sections/@dashboard/chat/ChatSearchResults.js","sections/@dashboard/chat/ChatContactSearch.js","sections/@dashboard/chat/ChatConversationItem.js","sections/@dashboard/chat/ChatConversationList.js","sections/@dashboard/chat/ChatSidebar.js","pages/dashboard/Chat.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","last","name","listDefault","map","link","LinkItem","listActiveLast","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","component","width","height","borderRadius","bgcolor","href","icon","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","SearchNotFound","searchQuery","align","SkeletonMap","Stack","spacing","Array","_","index","Skeleton","SkeletonPost","Box","ml","SkeletonPosts","gap","gridTemplateColumns","xs","sm","md","mx","SkeletonProduct","Grid","container","item","lg","paddingTop","SkeletonProductItem","Card","p","direction","justifyContent","SkeletonKanbanColumn","Paper","SkeletonMailSidebarItem","px","py","SkeletonConversationItem","LightboxModalStyles","theme","useTheme","isRTL","ICON_COLOR","palette","grey","replace","getIcon","Icon","opacity","backgroundImage","backgroundColor","transition","transitions","create","content","styles","alpha","padding","marginLeft","outline","right","left","LightboxModal","images","photoIndex","setPhotoIndex","isOpen","useEffect","document","body","style","toolbarButtons","length","animationDuration","nextSrc","prevSrc","onMovePrevRequest","onMoveNextRequest","reactModalStyle","overlay","zIndex","RootStyle","styled","position","PickerStyle","bottom","boxShadow","customShadows","z20","Number","shape","border","background","paper","text","disabled","primary","borderColor","divider","typography","body2","fill","subtitle2","cssStyles","bgBlur","selected","secondary","EmojiPicker","emojiPicker","value","setValue","alignRight","useState","emojiPickerState","SetEmojiPicker","main","title","emoji","onSelect","native","onClickAway","size","onClick","event","preventDefault","FORMAT_IMG","FORMAT_VIDEO","FORMAT_WORD","FORMAT_EXCEL","FORMAT_POWERPOINT","FORMAT_PDF","FORMAT_PHOTOSHOP","FORMAT_ILLUSTRATOR","getFileType","fileUrl","split","pop","getFileName","substring","lastIndexOf","getFileFullName","src","alt","getFileThumb","thumb","format","includes","getFileFormat","flexDirection","paddingBottom","FileItemStyle","marginTop","FileThumbStyle","CollapseButtonStyle","Button","overline","ChatRoomAttachment","conversation","isCollapse","onCollapse","totalAttachment","uniq","flatten","messages","attachments","fullWidth","endIcon","Iconify","Divider","Scrollbar","Collapse","in","file","AttachmentItem","id","Typography","fDateTime","createdAt","RowStyle","margin","RowIconStyle","marginRight","RowTextStyle","wordWrap","ChatRoomOneParticipant","participants","participant","undefined","pt","pb","Avatar","avatar","textAlign","address","phone","email","ChatRoomPopup","onClose","open","DialogContent","paragraph","ChatRoomGroupParticipant","selectUserId","onShowPopupUserInfo","disableRipple","HEIGHT","List","disablePadding","Participant","onShowPopup","onClosePopup","status","ListItemButton","ListItemAvatar","BadgeStatus","ListItemText","primaryTypographyProps","secondaryTypographyProps","DRAWER_WIDTH","ToggleButtonStyle","props","IconButton","top","z8","borderRight","neutral","ChatRoom","openSidebar","setOpenSidebar","showInfo","setShowInfo","selectUser","setSelectUser","showAttachment","setShowAttachment","showParticipants","setShowParticipants","isDesktop","useResponsive","isGroup","handleOpenSidebar","handleCloseSidebar","renderContent","participantId","prev","Drawer","anchor","ModalProps","keepMounted","marginBottom","ContentStyle","InfoStyle","ChatMessageItem","message","onOpenLightbox","sender","find","senderId","senderDetails","type","isMe","isImage","contentType","firstName","formatDistanceToNowStrict","Date","addSuffix","Image","cursor","ChatMessageList","scrollRef","useRef","openLightbox","setOpenLightbox","selectedImage","setSelectedImage","current","scrollTop","scrollHeight","imagesLightbox","filter","handleOpenLightbox","url","findIndex","scrollableNodeProps","ref","mainSrc","onCloseRequest","minHeight","ChatHeaderDetail","GroupAvatar","OneAvatar","capitalCase","fToNow","lastActivity","AvatarGroup","max","Link","underline","paddingLeft","ChatMessageInput","conversationId","onSend","fileInputRef","setMessage","handleAttach","click","handleSend","messageId","uuidv4","Input","disableUnderline","onKeyUp","key","onChange","placeholder","startAdornment","InputAdornment","endAdornment","orientation","flexItem","AutocompleteStyle","minWidth","easing","easeInOut","duration","shorter","borderWidth","ChatHeaderCompose","contacts","recipients","onAddRecipients","query","setQuery","Autocomplete","multiple","disablePortal","popupIcon","noOptionsText","handleAddRecipients","onInputChange","options","getOptionLabel","recipient","renderOption","inputValue","matches","match","parts","parse","part","highlight","renderTags","getTagProps","Chip","label","renderInput","params","TextField","ChatWindow","dispatch","useDispatch","navigate","useNavigate","pathname","useLocation","conversationKey","useParams","useSelector","state","chat","activeConversationId","conversations","byId","unreadCount","conversationSelector","mode","displayParticipants","a","getParticipants","getConversation","console","error","PATH_DASHBOARD","new","getDetails","resetActiveConversation","markConversationAsRead","handleSendMessage","onSendMessage","Object","values","addRecipients","STATUS","ChatAccount","user","useAuth","anchorRef","setOpen","setStatus","MyAvatar","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","pr","pl","displayName","Tooltip","ListItem","ListItemIcon","m","Select","e","option","ChatSearchResults","results","onSelectContact","isFound","result","SearchStyle","OutlinedInput","ChatContactSearch","onFocus","ClickAwayListener","FormControl","AvatarWrapperStyle","ChatConversationItem","isSelected","isOpenSidebar","onSelectConversation","details","currentUserId","otherParticipants","displayNames","reduce","names","join","displayText","lastMessage","displayLastActivity","isUnread","isOnlineGroup","slice","className","fontSize","ChatConversationList","loading","allIds","otherParticipant","username","root","handleSelectConversation","contrastText","darker","ChatSidebar","setSearchQuery","searchResults","setSearchResults","isSearchFocused","setSearchFocused","displayResults","handleToggleSidebar","handleChangeSearch","axios","get","response","data","handleSearchSelect","transform","visibility","Chat","themeStretch","useSettings","getConversations","getContacts","Page","Container"],"mappings":"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","file":"static/js/38.92b35b68.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { last } from 'lodash';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = last(links)?.name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Paper, Typography } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nSearchNotFound.propTypes = {\n  searchQuery: PropTypes.string,\n};\n\nexport default function SearchNotFound({ searchQuery = '', ...other }) {\n  return (\n    <Paper {...other}>\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\n        Not found\n      </Typography>\n      <Typography variant=\"body2\" align=\"center\">\n        No results found for &nbsp;\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or using complete words.\n      </Typography>\n    </Paper>\n  );\n}\n","// @mui\nimport { Stack, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonMap() {\n  return (\n    <Stack spacing={8}>\n      {[...Array(5)].map((_, index) => (\n        <Skeleton\n          key={index}\n          variant=\"rectangular\"\n          sx={{ width: 1, height: 560, borderRadius: 2 }}\n        />\n      ))}\n    </Stack>\n  );\n}\n","// @mui\nimport { Box, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonPost() {\n  return (\n    <>\n      <Skeleton width=\"100%\" height={560} variant=\"rectangular\" sx={{ borderRadius: 2 }} />\n      <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\n        <Skeleton variant=\"circular\" width={64} height={64} />\n        <Box sx={{ flexGrow: 1, ml: 2 }}>\n          <Skeleton variant=\"text\" height={20} />\n          <Skeleton variant=\"text\" height={20} />\n          <Skeleton variant=\"text\" height={20} />\n        </Box>\n      </Box>\n    </>\n  );\n}\n","// @mui\nimport { Box, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonPosts() {\n  return (\n    <Box\n      sx={{\n        mt: 3,\n        display: 'grid',\n        gap: 3,\n        gridTemplateColumns: {\n          xs: 'repeat(1, 1fr)',\n          sm: 'repeat(2, 1fr)',\n          md: 'repeat(4, 1fr)',\n        },\n      }}\n    >\n      {[...Array(8)].map((_, index) => (\n        <Box key={index}>\n          <Skeleton variant=\"rectangular\" width=\"100%\" sx={{ height: 200, borderRadius: 2 }} />\n          <Box sx={{ display: 'flex', mt: 1.5 }}>\n            <Skeleton variant=\"circular\" sx={{ width: 40, height: 40 }} />\n            <Skeleton variant=\"text\" sx={{ mx: 1, flexGrow: 1 }} />\n          </Box>\n        </Box>\n      ))}\n    </Box>\n  );\n}\n","// @mui\nimport { Grid, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonProduct() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6} lg={7}>\n        <Skeleton variant=\"rectangular\" width=\"100%\" sx={{ paddingTop: '100%', borderRadius: 2 }} />\n      </Grid>\n      <Grid item xs={12} md={6} lg={5}>\n        <Skeleton variant=\"circular\" width={80} height={80} />\n        <Skeleton variant=\"text\" height={240} />\n        <Skeleton variant=\"text\" height={40} />\n        <Skeleton variant=\"text\" height={40} />\n        <Skeleton variant=\"text\" height={40} />\n      </Grid>\n    </Grid>\n  );\n}\n","// @mui\nimport { Card, Skeleton, Stack } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonProductItem() {\n  return (\n    <Card>\n      <Skeleton variant=\"rectangular\" sx={{ paddingTop: '100%' }} />\n      <Stack spacing={2} sx={{ p: 3 }}>\n        <Skeleton variant=\"text\" sx={{ width: 0.5 }} />\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Stack direction=\"row\">\n            <Skeleton variant=\"circular\" sx={{ width: 16, height: 16 }} />\n            <Skeleton variant=\"circular\" sx={{ width: 16, height: 16 }} />\n            <Skeleton variant=\"circular\" sx={{ width: 16, height: 16 }} />\n          </Stack>\n          <Skeleton variant=\"text\" sx={{ width: 40 }} />\n        </Stack>\n      </Stack>\n    </Card>\n  );\n}\n","// @mui\nimport { Stack, Skeleton, Box, Paper } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonKanbanColumn() {\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gap: 3,\n        gridTemplateColumns: 'repeat(4, 1fr)',\n      }}\n    >\n      {[...Array(3)].map((_, index) => (\n        <Paper variant=\"outlined\" key={index} sx={{ p: 2.5, width: 310 }}>\n          <Stack spacing={2}>\n            <Skeleton variant=\"rectangular\" sx={{ paddingTop: '75%', borderRadius: 1.5 }} />\n            {index === 0 && (\n              <Skeleton variant=\"rectangular\" sx={{ paddingTop: '25%', borderRadius: 1.5 }} />\n            )}\n            {index !== 2 && (\n              <Skeleton variant=\"rectangular\" sx={{ paddingTop: '25%', borderRadius: 1.5 }} />\n            )}\n          </Stack>\n        </Paper>\n      ))}\n    </Box>\n  );\n}\n","// @mui\nimport { Stack, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonMailSidebarItem() {\n  return (\n    <Stack spacing={1} direction=\"row\" alignItems=\"center\" sx={{ px: 3, py: 1 }}>\n      <Skeleton variant=\"circular\" width={32} height={32} />\n      <Skeleton variant=\"text\" sx={{ width: 0.25, height: 16 }} />\n    </Stack>\n  );\n}\n","// @mui\nimport { Stack, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonConversationItem() {\n  return (\n    <Stack spacing={1} direction=\"row\" alignItems=\"center\" sx={{ px: 3, py: 1.5 }}>\n      <Skeleton variant=\"circular\" width={48} height={48} />\n\n      <Stack spacing={0.5} sx={{ flexGrow: 1 }}>\n        <Skeleton variant=\"text\" sx={{ width: 0.5, height: 16 }} />\n        <Skeleton variant=\"text\" sx={{ width: 0.25, height: 12 }} />\n      </Stack>\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport Lightbox from 'react-image-lightbox';\n// @mui\nimport { useTheme, alpha } from '@mui/material/styles';\nimport { Typography, GlobalStyles } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nfunction LightboxModalStyles() {\n  const theme = useTheme();\n  const isRTL = theme.direction === 'rtl';\n\n  const ICON_SIZE = 32;\n  const ICON_COLOR = theme.palette.grey[600].replace('#', '');\n\n  const getIcon = (icon) =>\n    `url(https://api.iconify.design/carbon/${icon}.svg?color=%23${ICON_COLOR}&width=${ICON_SIZE}&height=${ICON_SIZE})`;\n\n  const Icon = (icon) => ({\n    opacity: 1,\n    alignItems: 'center',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    backgroundImage: `unset`,\n    backgroundColor: 'transparent',\n    transition: theme.transitions.create('opacity'),\n    '&:before': {\n      display: 'block',\n      width: ICON_SIZE,\n      height: ICON_SIZE,\n      content: getIcon(icon),\n    },\n    '&:hover': {\n      opacity: 0.72,\n    },\n  });\n\n  return (\n    <GlobalStyles\n      styles={{\n        '& .ReactModalPortal': {\n          '& .ril__outer': {\n            backgroundColor: alpha(theme.palette.grey[900], 0.96),\n          },\n\n          // Toolbar\n          '& .ril__toolbar': {\n            height: 'auto !important',\n            padding: theme.spacing(2, 3),\n            backgroundColor: 'transparent',\n          },\n          '& .ril__toolbarLeftSide': { display: 'none' },\n          '& .ril__toolbarRightSide': {\n            height: 'auto !important',\n            padding: 0,\n            flexGrow: 1,\n            display: 'flex',\n            alignItems: 'center',\n            '& li': {\n              display: 'flex',\n              alignItems: 'center',\n            },\n            '& li:first-of-type': {\n              flexGrow: 1,\n            },\n            '& li:not(:first-of-type)': {\n              width: 40,\n              height: 40,\n              justifyContent: 'center',\n              marginLeft: theme.spacing(2),\n            },\n          },\n\n          // Button\n          '& button:focus': { outline: 'none' },\n          '& .ril__toolbarRightSide button': {\n            width: '100%',\n            height: '100%',\n            '&.ril__zoomInButton': Icon('zoom-in'),\n            '&.ril__zoomOutButton': Icon('zoom-out'),\n            '&.ril__closeButton': Icon('close'),\n          },\n          '& .ril__navButtons': {\n            padding: theme.spacing(3),\n            '&.ril__navButtonPrev': {\n              right: 'auto',\n              left: theme.spacing(2),\n              ...Icon(isRTL ? 'arrow-right' : 'arrow-left'),\n            },\n            '&.ril__navButtonNext': {\n              left: 'auto',\n              right: theme.spacing(2),\n              ...Icon(isRTL ? 'arrow-left' : 'arrow-right'),\n            },\n          },\n        },\n      }}\n    />\n  );\n}\n\nLightboxModal.propTypes = {\n  images: PropTypes.array.isRequired,\n  photoIndex: PropTypes.number,\n  setPhotoIndex: PropTypes.func,\n  isOpen: PropTypes.bool,\n};\n\nexport default function LightboxModal({ images, photoIndex, setPhotoIndex, isOpen, ...other }) {\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n  }, [isOpen]);\n\n  const showIndex = <Typography variant=\"subtitle2\">{`${photoIndex + 1} / ${images.length}`}</Typography>;\n\n  const toolbarButtons = [showIndex];\n\n  const customStyles = {\n    overlay: {\n      zIndex: 9999,\n    },\n  };\n\n  return (\n    <>\n      <LightboxModalStyles />\n\n      {isOpen && (\n        <Lightbox\n          animationDuration={160}\n          nextSrc={images[(photoIndex + 1) % images.length]}\n          prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onMovePrevRequest={() => setPhotoIndex((photoIndex + images.length - 1) % images.length)}\n          onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % images.length)}\n          toolbarButtons={toolbarButtons}\n          reactModalStyle={customStyles}\n          {...other}\n        />\n      )}\n    </>\n  );\n}\n","import 'emoji-mart/css/emoji-mart.css';\nimport PropTypes from 'prop-types';\nimport { Picker } from 'emoji-mart';\nimport { useState } from 'react';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, IconButton, ClickAwayListener } from '@mui/material';\n// utils\nimport cssStyles from '../utils/cssStyles';\n//\nimport Iconify from './Iconify';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Box)({\n  position: 'relative',\n});\n\nconst PickerStyle = styled('div')(({ theme }) => ({\n  bottom: 40,\n  overflow: 'hidden',\n  position: 'absolute',\n  left: theme.spacing(-2),\n  boxShadow: theme.customShadows.z20,\n  borderRadius: Number(theme.shape.borderRadius) * 2,\n  '& .emoji-mart': {\n    border: 'none',\n    backgroundColor: theme.palette.background.paper,\n  },\n  '& .emoji-mart-anchor': {\n    color: theme.palette.text.disabled,\n    '&:hover, &:focus, &.emoji-mart-anchor-selected': {\n      color: theme.palette.text.primary,\n    },\n  },\n  '& .emoji-mart-bar': { borderColor: theme.palette.divider },\n  '& .emoji-mart-search input': {\n    backgroundColor: 'transparent',\n    color: theme.palette.text.primary,\n    borderColor: theme.palette.grey[500_32],\n    '&::placeholder': {\n      ...theme.typography.body2,\n      color: theme.palette.text.disabled,\n    },\n  },\n  '& .emoji-mart-search-icon svg': {\n    opacity: 1,\n    fill: theme.palette.text.disabled,\n  },\n  '& .emoji-mart-category-label span': {\n    ...theme.typography.subtitle2,\n    ...cssStyles().bgBlur({ color: theme.palette.background.paper }),\n    color: theme.palette.text.primary,\n  },\n  '& .emoji-mart-title-label': { color: theme.palette.text.primary },\n  '& .emoji-mart-category .emoji-mart-emoji:hover:before': {\n    backgroundColor: theme.palette.action.selected,\n  },\n  '& .emoji-mart-emoji': { outline: 'none' },\n  '& .emoji-mart-preview-name': {\n    color: theme.palette.text.primary,\n  },\n  '& .emoji-mart-preview-shortname, .emoji-mart-preview-emoticon': {\n    color: theme.palette.text.secondary,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nEmojiPicker.propTypes = {\n  disabled: PropTypes.bool,\n  value: PropTypes.string,\n  setValue: PropTypes.func,\n  alignRight: PropTypes.bool,\n};\n\nexport default function EmojiPicker({ disabled, value, setValue, alignRight = false, ...other }) {\n  const theme = useTheme();\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\n\n  let emojiPicker;\n  if (emojiPickerState) {\n    emojiPicker = (\n      <Picker\n        color={theme.palette.primary.main}\n        title=\"Pick your emoji…\"\n        emoji=\"point_up\"\n        onSelect={(emoji) => setValue(value + emoji?.native)}\n      />\n    );\n  }\n\n  const triggerPicker = (event) => {\n    event.preventDefault();\n    SetEmojiPicker(!emojiPickerState);\n  };\n\n  const handleClickAway = () => {\n    SetEmojiPicker(false);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <RootStyle {...other}>\n        <PickerStyle\n          sx={{\n            ...(alignRight && {\n              right: -2,\n              left: 'auto !important',\n            }),\n          }}\n        >\n          {emojiPicker}\n        </PickerStyle>\n        <IconButton disabled={disabled} size=\"small\" onClick={triggerPicker}>\n          <Iconify icon={'eva:smiling-face-fill'} width={20} height={20} />\n        </IconButton>\n      </RootStyle>\n    </ClickAwayListener>\n  );\n}\n","// components\nimport Image from '../components/Image';\nimport Iconify from '../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nconst FORMAT_IMG = ['jpg', 'jpeg', 'gif', 'bmp', 'png'];\nconst FORMAT_VIDEO = ['m4v', 'avi', 'mpg', 'mp4', 'webm'];\nconst FORMAT_WORD = ['doc', 'docx'];\nconst FORMAT_EXCEL = ['xls', 'xlsx'];\nconst FORMAT_POWERPOINT = ['ppt', 'pptx'];\nconst FORMAT_PDF = ['pdf'];\nconst FORMAT_PHOTOSHOP = ['psd'];\nconst FORMAT_ILLUSTRATOR = ['ai', 'esp'];\n\nexport function getFileType(fileUrl = '') {\n  return (fileUrl && fileUrl.split('.').pop()) || '';\n}\n\nexport function getFileName(fileUrl) {\n  return fileUrl.substring(fileUrl.lastIndexOf('/') + 1).replace(/\\.[^/.]+$/, '');\n}\n\nexport function getFileFullName(fileUrl) {\n  return fileUrl.split('/').pop();\n}\n\nexport function getFileFormat(fileUrl) {\n  let format;\n\n  switch (fileUrl.includes(getFileType(fileUrl))) {\n    case FORMAT_IMG.includes(getFileType(fileUrl)):\n      format = 'image';\n      break;\n    case FORMAT_VIDEO.includes(getFileType(fileUrl)):\n      format = 'video';\n      break;\n    case FORMAT_WORD.includes(getFileType(fileUrl)):\n      format = 'word';\n      break;\n    case FORMAT_EXCEL.includes(getFileType(fileUrl)):\n      format = 'excel';\n      break;\n    case FORMAT_POWERPOINT.includes(getFileType(fileUrl)):\n      format = 'powerpoint';\n      break;\n    case FORMAT_PDF.includes(getFileType(fileUrl)):\n      format = 'pdf';\n      break;\n    case FORMAT_PHOTOSHOP.includes(getFileType(fileUrl)):\n      format = 'photoshop';\n      break;\n    case FORMAT_ILLUSTRATOR.includes(getFileType(fileUrl)):\n      format = 'illustrator';\n      break;\n    default:\n      format = getFileType(fileUrl);\n  }\n\n  return format;\n}\n\nconst getIcon = (name) => (\n  <Image\n    src={`https://minimal-assets-api.vercel.app/assets/icons/file/${name}.svg`}\n    alt={name}\n    sx={{ width: 28, height: 28 }}\n  />\n);\n\nexport function getFileThumb(fileUrl) {\n  let thumb;\n  switch (getFileFormat(fileUrl)) {\n    case 'video':\n      thumb = getIcon('format_video');\n      break;\n    case 'word':\n      thumb = getIcon('format_word');\n      break;\n    case 'excel':\n      thumb = getIcon('format_excel');\n      break;\n    case 'powerpoint':\n      thumb = getIcon('format_powerpoint');\n      break;\n    case 'pdf':\n      thumb = getIcon('format_pdf');\n      break;\n    case 'photoshop':\n      thumb = getIcon('format_photoshop');\n      break;\n    case 'illustrator':\n      thumb = getIcon('format_ai');\n      break;\n    case 'image':\n      thumb = <Image src={fileUrl} alt={fileUrl} sx={{ height: 1 }} />;\n      break;\n    default:\n      thumb = <Iconify icon={'eva:file-fill'} sx={{ width: 28, height: 28 }} />;\n  }\n  return thumb;\n}\n","import PropTypes from 'prop-types';\nimport { uniq, flatten } from 'lodash';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Button, Divider, Collapse, Typography } from '@mui/material';\n// utils\nimport { fDateTime } from '../../../utils/formatTime';\nimport { getFileFullName, getFileThumb } from '../../../utils/getFileFormat';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  height: '100%',\n  display: 'flex',\n  overflow: 'hidden',\n  flexDirection: 'column',\n  paddingBottom: theme.spacing(2),\n}));\n\nconst FileItemStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginTop: theme.spacing(2),\n  padding: theme.spacing(0, 2.5),\n}));\n\nconst FileThumbStyle = styled('div')(({ theme }) => ({\n  width: 40,\n  height: 40,\n  flexShrink: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: theme.palette.text.secondary,\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.grey[500_16],\n}));\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  flexShrink: 0,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled,\n}));\n\nChatRoomAttachment.propTypes = {\n  conversation: PropTypes.object.isRequired,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func,\n};\n\n// ----------------------------------------------------------------------\n\nexport default function ChatRoomAttachment({ conversation, isCollapse, onCollapse }) {\n  const totalAttachment = uniq(flatten(conversation.messages.map((item) => item.attachments))).length;\n\n  return (\n    <RootStyle>\n      <CollapseButtonStyle\n        fullWidth\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={\n          <Iconify\n            icon={isCollapse ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n            width={16}\n            height={16}\n          />\n        }\n      >\n        attachment ({totalAttachment})\n      </CollapseButtonStyle>\n\n      {!isCollapse && <Divider />}\n\n      <Scrollbar>\n        <Collapse in={isCollapse}>\n          {conversation.messages.map((file) => (\n            <div key={file.id}>\n              {file.attachments.map((fileUrl) => (\n                <AttachmentItem key={fileUrl} file={file} fileUrl={fileUrl} />\n              ))}\n            </div>\n          ))}\n        </Collapse>\n      </Scrollbar>\n    </RootStyle>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nAttachmentItem.propTypes = {\n  file: PropTypes.object,\n  fileUrl: PropTypes.string,\n};\n\nfunction AttachmentItem({ file, fileUrl }) {\n  return (\n    <FileItemStyle key={fileUrl}>\n      <FileThumbStyle>{getFileThumb(fileUrl)}</FileThumbStyle>\n      <Box sx={{ ml: 1.5, maxWidth: 150 }}>\n        <Typography variant=\"body2\" noWrap>\n          {getFileFullName(fileUrl)}\n        </Typography>\n        <Typography noWrap variant=\"caption\" sx={{ color: 'text.secondary', display: 'block' }}>\n          {fDateTime(file.createdAt)}\n        </Typography>\n      </Box>\n    </FileItemStyle>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Avatar, Button, Divider, Collapse, Typography } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled,\n}));\n\nconst RowStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  margin: theme.spacing(1.5, 0),\n}));\n\nconst RowIconStyle = styled(Iconify)(({ theme }) => ({\n  width: 16,\n  height: 16,\n  marginTop: 4,\n  marginRight: theme.spacing(1),\n  color: theme.palette.text.secondary,\n}));\n\nconst RowTextStyle = styled(Typography)(({ theme }) => ({\n  flexGrow: 1,\n  maxWidth: 160,\n  wordWrap: 'break-word',\n  ...theme.typography.body2,\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoomOneParticipant.propTypes = {\n  participants: PropTypes.array.isRequired,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func,\n};\n\nexport default function ChatRoomOneParticipant({ participants, isCollapse, onCollapse }) {\n  const participant = [...participants][0];\n\n  if (participant === undefined) {\n    return null;\n  }\n\n  return (\n    <>\n      <Box\n        sx={{\n          pt: 4,\n          pb: 3,\n          display: 'flex',\n          alignItems: 'center',\n          flexDirection: 'column',\n        }}\n      >\n        <Avatar alt={participant.name} src={participant.avatar} sx={{ width: 96, height: 96 }} />\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\n          <Typography variant=\"subtitle1\">{participant.name}</Typography>\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            {participant.position}\n          </Typography>\n        </Box>\n      </Box>\n\n      <Divider />\n\n      <CollapseButtonStyle\n        fullWidth\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={\n          <Iconify\n            icon={isCollapse ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n            width={16}\n            height={16}\n          />\n        }\n      >\n        information\n      </CollapseButtonStyle>\n\n      <Collapse in={isCollapse}>\n        <Box sx={{ px: 2.5, pb: 1 }}>\n          <RowStyle>\n            <RowIconStyle icon={'eva:pin-fill'} />\n            <RowTextStyle>{participant.address}</RowTextStyle>\n          </RowStyle>\n          <RowStyle>\n            <RowIconStyle icon={'eva:phone-fill'} />\n            <RowTextStyle>{participant.phone}</RowTextStyle>\n          </RowStyle>\n          <RowStyle>\n            <RowIconStyle icon={'eva:email-fill'} />\n            <RowTextStyle>{participant.email}</RowTextStyle>\n          </RowStyle>\n        </Box>\n      </Collapse>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Avatar, Typography, DialogContent } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport { DialogAnimate } from '../../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst RowStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  marginTop: theme.spacing(1.5),\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoomPopup.propTypes = {\n  participant: PropTypes.object,\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n};\n\nexport default function ChatRoomPopup({ participant, isOpen, onClose }) {\n  const { name, avatar, position, address, phone, email } = participant;\n\n  return (\n    <DialogAnimate fullWidth maxWidth=\"xs\" open={isOpen} onClose={onClose}>\n      <DialogContent sx={{ pb: 5, textAlign: 'center' }}>\n        <Avatar\n          alt={name}\n          src={avatar}\n          sx={{\n            mt: 5,\n            mb: 2,\n            mx: 'auto',\n            width: 96,\n            height: 96,\n          }}\n        />\n        <Typography variant=\"h6\">{name}</Typography>\n        <Typography variant=\"body2\" paragraph sx={{ color: 'text.secondary' }}>\n          {position}\n        </Typography>\n\n        <RowStyle>\n          <Iconify icon={'eva:pin-fill'} sx={{ mr: 1, width: 16, height: 16, color: 'text.disabled' }} />\n          <Typography variant=\"body2\">{address}</Typography>\n        </RowStyle>\n        <RowStyle>\n          <Iconify icon={'eva:phone-fill'} sx={{ mr: 1, width: 16, height: 16, color: 'text.disabled' }} />\n          <Typography variant=\"body2\">{phone}</Typography>\n        </RowStyle>\n        <RowStyle>\n          <Iconify icon={'eva:email-fill'} sx={{ mr: 1, width: 16, height: 16, color: 'text.disabled' }} />\n          <Typography variant=\"body2\">{email}</Typography>\n        </RowStyle>\n      </DialogContent>\n    </DialogAnimate>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, List, Avatar, Button, Collapse, ListItemText, ListItemAvatar, ListItemButton } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\nimport BadgeStatus from '../../../components/BadgeStatus';\n//\nimport ChatRoomPopup from './ChatRoomPopup';\n\n// ----------------------------------------------------------------------\n\nconst HEIGHT = 64;\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled,\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoomGroupParticipant.propTypes = {\n  participants: PropTypes.array.isRequired,\n  selectUserId: PropTypes.string,\n  onShowPopupUserInfo: PropTypes.func,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func,\n};\n\nexport default function ChatRoomGroupParticipant({\n  participants,\n  selectUserId,\n  onShowPopupUserInfo,\n  isCollapse,\n  onCollapse,\n}) {\n  return (\n    <>\n      <CollapseButtonStyle\n        fullWidth\n        disableRipple\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={\n          <Iconify\n            icon={isCollapse ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n            width={16}\n            height={16}\n          />\n        }\n      >\n        In room ({participants.length})\n      </CollapseButtonStyle>\n\n      <Box sx={{ height: isCollapse ? HEIGHT * 4 : 0 }}>\n        <Scrollbar>\n          <Collapse in={isCollapse} sx={{ height: isCollapse ? HEIGHT * 4 : 0 }}>\n            <List disablePadding>\n              {participants.map((participant) => (\n                <Participant\n                  key={participant.id}\n                  participant={participant}\n                  isOpen={selectUserId === participant.id}\n                  onShowPopup={() => onShowPopupUserInfo(participant.id)}\n                  onClosePopup={() => onShowPopupUserInfo(null)}\n                />\n              ))}\n            </List>\n          </Collapse>\n        </Scrollbar>\n      </Box>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nParticipant.propTypes = {\n  participant: PropTypes.object.isRequired,\n  isOpen: PropTypes.bool,\n  onClosePopup: PropTypes.func,\n  onShowPopup: PropTypes.func,\n};\n\nfunction Participant({ participant, isOpen, onClosePopup, onShowPopup }) {\n  const { name, avatar, status, position } = participant;\n\n  return (\n    <>\n      <ListItemButton onClick={onShowPopup} sx={{ height: HEIGHT, px: 2.5 }}>\n        <ListItemAvatar>\n          <Box sx={{ position: 'relative', width: 40, height: 40 }}>\n            <Avatar alt={name} src={avatar} />\n            <BadgeStatus status={status} sx={{ right: 0, bottom: 0, position: 'absolute' }} />\n          </Box>\n        </ListItemAvatar>\n        <ListItemText\n          primary={name}\n          secondary={position}\n          primaryTypographyProps={{ variant: 'subtitle2', noWrap: true }}\n          secondaryTypographyProps={{ noWrap: true }}\n        />\n      </ListItemButton>\n      <ChatRoomPopup participant={participant} isOpen={isOpen} onClose={onClosePopup} />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Drawer, Divider, IconButton } from '@mui/material';\n// hooks\nimport useResponsive from '../../../hooks/useResponsive';\n// components\nimport Iconify from '../../../components/Iconify';\n//\nimport ChatRoomAttachment from './ChatRoomAttachment';\nimport ChatRoomOneParticipant from './ChatRoomOneParticipant';\nimport ChatRoomGroupParticipant from './ChatRoomGroupParticipant';\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 240;\n\nconst ToggleButtonStyle = styled((props) => <IconButton disableRipple {...props} />)(({ theme }) => ({\n  right: 0,\n  zIndex: 9,\n  width: 32,\n  height: 32,\n  position: 'absolute',\n  top: theme.spacing(1),\n  boxShadow: theme.customShadows.z8,\n  backgroundColor: theme.palette.background.paper,\n  border: `solid 1px ${theme.palette.divider}`,\n  borderRight: 0,\n  borderRadius: `12px 0 0 12px`,\n  transition: theme.transitions.create('all'),\n  '&:hover': {\n    backgroundColor: theme.palette.background.neutral,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoom.propTypes = {\n  conversation: PropTypes.object.isRequired,\n  participants: PropTypes.array.isRequired,\n};\n\nexport default function ChatRoom({ conversation, participants }) {\n  const theme = useTheme();\n\n  const [openSidebar, setOpenSidebar] = useState(true);\n  const [showInfo, setShowInfo] = useState(true);\n  const [selectUser, setSelectUser] = useState(null);\n  const [showAttachment, setShowAttachment] = useState(true);\n  const [showParticipants, setShowParticipants] = useState(true);\n\n  const isDesktop = useResponsive('up', 'lg');\n\n  const isGroup = participants.length > 1;\n\n  useEffect(() => {\n    if (!isDesktop) {\n      return handleCloseSidebar();\n    }\n    return handleOpenSidebar();\n  }, [isDesktop]);\n\n  const handleOpenSidebar = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleCloseSidebar = () => {\n    setOpenSidebar(false);\n  };\n\n  const handleToggleSidebar = () => {\n    setOpenSidebar((prev) => !prev);\n  };\n\n  const renderContent = (\n    <>\n      {isGroup ? (\n        <ChatRoomGroupParticipant\n          selectUserId={selectUser}\n          participants={participants}\n          isCollapse={showParticipants}\n          onShowPopupUserInfo={(participantId) => setSelectUser(participantId)}\n          onCollapse={() => setShowParticipants((prev) => !prev)}\n        />\n      ) : (\n        <div>\n          <ChatRoomOneParticipant\n            participants={participants}\n            isCollapse={showInfo}\n            onCollapse={() => setShowInfo((prev) => !prev)}\n          />\n        </div>\n      )}\n      <Divider />\n\n      <ChatRoomAttachment\n        conversation={conversation}\n        isCollapse={showAttachment}\n        onCollapse={() => setShowAttachment((prev) => !prev)}\n      />\n    </>\n  );\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <ToggleButtonStyle\n        onClick={handleToggleSidebar}\n        sx={{\n          ...(openSidebar && isDesktop && { right: DRAWER_WIDTH }),\n        }}\n      >\n        <Iconify width={16} height={16} icon={openSidebar ? 'eva:arrow-ios-forward-fill' : 'eva:arrow-ios-back-fill'} />\n      </ToggleButtonStyle>\n\n      {isDesktop ? (\n        <Drawer\n          open={openSidebar}\n          anchor=\"right\"\n          variant=\"persistent\"\n          sx={{\n            height: 1,\n            width: DRAWER_WIDTH,\n            transition: theme.transitions.create('width'),\n            ...(!openSidebar && { width: '0px' }),\n            '& .MuiDrawer-paper': {\n              position: 'static',\n              width: DRAWER_WIDTH,\n            },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      ) : (\n        <Drawer\n          anchor=\"right\"\n          ModalProps={{ keepMounted: true }}\n          open={openSidebar}\n          onClose={handleCloseSidebar}\n          sx={{\n            '& .MuiDrawer-paper': {\n              width: DRAWER_WIDTH,\n            },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Avatar, Box, Typography } from '@mui/material';\n// components\nimport Image from '../../../components/Image';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  marginBottom: theme.spacing(3),\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 320,\n  padding: theme.spacing(1.5),\n  marginTop: theme.spacing(0.5),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral,\n}));\n\nconst InfoStyle = styled(Typography)(({ theme }) => ({\n  display: 'flex',\n  marginBottom: theme.spacing(0.75),\n  color: theme.palette.text.secondary,\n}));\n\n// ----------------------------------------------------------------------\n\nChatMessageItem.propTypes = {\n  message: PropTypes.object.isRequired,\n  conversation: PropTypes.object.isRequired,\n  onOpenLightbox: PropTypes.func,\n};\n\nexport default function ChatMessageItem({ message, conversation, onOpenLightbox }) {\n  const sender = conversation.participants.find((participant) => participant.id === message.senderId);\n  const senderDetails =\n    message.senderId === '8864c717-587d-472a-929a-8e5f298024da-0'\n      ? { type: 'me' }\n      : { avatar: sender?.avatar, name: sender?.name };\n\n  const isMe = senderDetails.type === 'me';\n  const isImage = message.contentType === 'image';\n  const firstName = senderDetails.name && senderDetails.name.split(' ')[0];\n\n  return (\n    <RootStyle>\n      <Box\n        sx={{\n          display: 'flex',\n          ...(isMe && {\n            ml: 'auto',\n          }),\n        }}\n      >\n        {senderDetails.type !== 'me' && (\n          <Avatar alt={senderDetails.name} src={senderDetails.avatar} sx={{ width: 32, height: 32, mr: 2 }} />\n        )}\n\n        <div>\n          <InfoStyle\n            variant=\"caption\"\n            sx={{\n              ...(isMe && { justifyContent: 'flex-end' }),\n            }}\n          >\n            {!isMe && `${firstName},`}&nbsp;\n            {formatDistanceToNowStrict(new Date(message.createdAt), {\n              addSuffix: true,\n            })}\n          </InfoStyle>\n\n          <ContentStyle\n            sx={{\n              ...(isMe && { color: 'grey.800', bgcolor: 'primary.lighter' }),\n              ...(isImage && { p: 0 }),\n            }}\n          >\n            {isImage ? (\n              <Image\n                alt=\"attachment\"\n                src={message.body}\n                onClick={() => onOpenLightbox(message.body)}\n                sx={{ borderRadius: 1, cursor: 'pointer', '&:hover': { opacity: 0.8 } }}\n              />\n            ) : (\n              <Typography variant=\"body2\">{message.body}</Typography>\n            )}\n          </ContentStyle>\n        </div>\n      </Box>\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { findIndex } from 'lodash';\nimport { useEffect, useState, useRef } from 'react';\n//\nimport Scrollbar from '../../../components/Scrollbar';\nimport LightboxModal from '../../../components/LightboxModal';\nimport ChatMessageItem from './ChatMessageItem';\n\n// ----------------------------------------------------------------------\n\nChatMessageList.propTypes = {\n  conversation: PropTypes.object.isRequired,\n};\n\nexport default function ChatMessageList({ conversation }) {\n  const scrollRef = useRef(null);\n\n  const [openLightbox, setOpenLightbox] = useState(false);\n\n  const [selectedImage, setSelectedImage] = useState(0);\n\n  useEffect(() => {\n    const scrollMessagesToBottom = () => {\n      if (scrollRef.current) {\n        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n      }\n    };\n    scrollMessagesToBottom();\n  }, [conversation.messages]);\n\n  const imagesLightbox = conversation.messages\n    .filter((messages) => messages.contentType === 'image')\n    .map((messages) => messages.body);\n\n  const handleOpenLightbox = (url) => {\n    const selectedImage = findIndex(imagesLightbox, (index) => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return (\n    <>\n      <Scrollbar scrollableNodeProps={{ ref: scrollRef }} sx={{ p: 3, height: 1 }}>\n        {conversation.messages.map((message) => (\n          <ChatMessageItem\n            key={message.id}\n            message={message}\n            conversation={conversation}\n            onOpenLightbox={handleOpenLightbox}\n          />\n        ))}\n      </Scrollbar>\n\n      <LightboxModal\n        images={imagesLightbox}\n        mainSrc={imagesLightbox[selectedImage]}\n        photoIndex={selectedImage}\n        setPhotoIndex={setSelectedImage}\n        isOpen={openLightbox}\n        onCloseRequest={() => setOpenLightbox(false)}\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { capitalCase } from 'change-case';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Link, Avatar, Typography, AvatarGroup, IconButton } from '@mui/material';\n// utils\nimport { fToNow } from '../../../utils/formatTime';\n// components\nimport Iconify from '../../../components/Iconify';\nimport BadgeStatus from '../../../components/BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  flexShrink: 0,\n  minHeight: 92,\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 3),\n}));\n\n// ----------------------------------------------------------------------\n\nChatHeaderDetail.propTypes = {\n  participants: PropTypes.array.isRequired,\n};\n\nexport default function ChatHeaderDetail({ participants }) {\n  const isGroup = participants.length > 1;\n\n  return (\n    <RootStyle>\n      {isGroup ? <GroupAvatar participants={participants} /> : <OneAvatar participants={participants} />}\n\n      <Box sx={{ flexGrow: 1 }} />\n      <IconButton>\n        <Iconify icon=\"eva:phone-fill\" width={20} height={20} />\n      </IconButton>\n      <IconButton>\n        <Iconify icon=\"eva:video-fill\" width={20} height={20} />\n      </IconButton>\n      <IconButton>\n        <Iconify icon=\"eva:more-vertical-fill\" width={20} height={20} />\n      </IconButton>\n    </RootStyle>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nOneAvatar.propTypes = {\n  participants: PropTypes.array.isRequired,\n};\n\nfunction OneAvatar({ participants }) {\n  const participant = [...participants][0];\n\n  if (participant === undefined || !participant.status) {\n    return null;\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <Box sx={{ position: 'relative' }}>\n        <Avatar src={participant.avatar} alt={participant.name} />\n        <BadgeStatus status={participant.status} sx={{ position: 'absolute', right: 2, bottom: 2 }} />\n      </Box>\n      <Box sx={{ ml: 2 }}>\n        <Typography variant=\"subtitle2\">{participant.name}</Typography>\n\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          {participant.status !== 'offline' ? capitalCase(participant.status) : fToNow(participant.lastActivity || '')}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nGroupAvatar.propTypes = {\n  participants: PropTypes.array.isRequired,\n};\n\nfunction GroupAvatar({ participants }) {\n  return (\n    <div>\n      <AvatarGroup\n        max={3}\n        sx={{\n          mb: 0.5,\n          '& .MuiAvatar-root': { width: 32, height: 32 },\n        }}\n      >\n        {participants.map((participant) => (\n          <Avatar key={participant.id} alt={participant.name} src={participant.avatar} />\n        ))}\n      </AvatarGroup>\n      <Link variant=\"body2\" underline=\"none\" component=\"button\" color=\"text.secondary\" onClick={() => {}}>\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          {participants.length} persons\n          <Iconify icon=\"eva:arrow-ios-forward-fill\" />\n        </Box>\n      </Link>\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useRef, useState } from 'react';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Stack, Input, Divider, IconButton, InputAdornment } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport EmojiPicker from '../../../components/EmojiPicker';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  minHeight: 56,\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'center',\n  paddingLeft: theme.spacing(2),\n}));\n\n// ----------------------------------------------------------------------\n\nChatMessageInput.propTypes = {\n  disabled: PropTypes.bool,\n  conversationId: PropTypes.string,\n  onSend: PropTypes.func,\n};\n\nexport default function ChatMessageInput({ disabled, conversationId, onSend }) {\n  const fileInputRef = useRef(null);\n  const [message, setMessage] = useState('');\n\n  const handleAttach = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.key === 'Enter') {\n      handleSend();\n    }\n  };\n\n  const handleSend = () => {\n    if (!message) {\n      return '';\n    }\n    if (onSend && conversationId) {\n      onSend({\n        conversationId,\n        messageId: uuidv4(),\n        message,\n        contentType: 'text',\n        attachments: [],\n        createdAt: new Date(),\n        senderId: '8864c717-587d-472a-929a-8e5f298024da-0',\n      });\n    }\n    return setMessage('');\n  };\n\n  return (\n    <RootStyle>\n      <Input\n        disabled={disabled}\n        fullWidth\n        value={message}\n        disableUnderline\n        onKeyUp={handleKeyUp}\n        onChange={(event) => setMessage(event.target.value)}\n        placeholder=\"Type a message\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <EmojiPicker disabled={disabled} value={message} setValue={setMessage} />\n          </InputAdornment>\n        }\n        endAdornment={\n          <Stack direction=\"row\" spacing={1} sx={{ flexShrink: 0, mr: 1.5 }}>\n            <IconButton disabled={disabled} size=\"small\" onClick={handleAttach}>\n              <Iconify icon=\"ic:round-add-photo-alternate\" width={22} height={22} />\n            </IconButton>\n            <IconButton disabled={disabled} size=\"small\" onClick={handleAttach}>\n              <Iconify icon=\"eva:attach-2-fill\" width={22} height={22} />\n            </IconButton>\n            <IconButton disabled={disabled} size=\"small\">\n              <Iconify icon=\"eva:mic-fill\" width={22} height={22} />\n            </IconButton>\n          </Stack>\n        }\n      />\n\n      <Divider orientation=\"vertical\" flexItem />\n\n      <IconButton color=\"primary\" disabled={!message} onClick={handleSend} sx={{ mx: 1 }}>\n        <Iconify icon=\"ic:round-send\" width={22} height={22} />\n      </IconButton>\n\n      <input type=\"file\" ref={fileInputRef} style={{ display: 'none' }} />\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\n// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Avatar, TextField, Typography, Autocomplete, Chip } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport SearchNotFound from '../../../components/SearchNotFound';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(2, 3),\n}));\n\nconst AutocompleteStyle = styled('div')(({ theme }) => ({\n  '& .MuiAutocomplete-root': {\n    minWidth: 280,\n    marginLeft: theme.spacing(2),\n    '&.Mui-focused .MuiAutocomplete-inputRoot': {\n      boxShadow: theme.customShadows.z8,\n    },\n  },\n  '& .MuiAutocomplete-inputRoot': {\n    transition: theme.transitions.create('box-shadow', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.shorter,\n    }),\n    '& fieldset': {\n      borderWidth: `1px !important`,\n      borderColor: `${theme.palette.grey[500_32]} !important`,\n    },\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nChatHeaderCompose.propTypes = {\n  contacts: PropTypes.array,\n  recipients: PropTypes.array,\n  onAddRecipients: PropTypes.func,\n};\n\nexport default function ChatHeaderCompose({ contacts, recipients, onAddRecipients }) {\n  const [query, setQuery] = useState('');\n\n  const handleAddRecipients = (recipients) => {\n    setQuery('');\n    onAddRecipients(recipients);\n  };\n\n  return (\n    <RootStyle>\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n        To:\n      </Typography>\n\n      <AutocompleteStyle>\n        <Autocomplete\n          multiple\n          size=\"small\"\n          disablePortal\n          popupIcon={null}\n          noOptionsText={<SearchNotFound searchQuery={query} />}\n          onChange={(event, value) => handleAddRecipients(value)}\n          onInputChange={(event, value) => setQuery(value)}\n          options={contacts}\n          getOptionLabel={(recipient) => recipient.name}\n          renderOption={(props, recipient, { inputValue, selected }) => {\n            const { name, avatar } = recipient;\n            const matches = match(name, inputValue);\n            const parts = parse(name, matches);\n            return (\n              <li {...props}>\n                <Box\n                  sx={{\n                    width: 32,\n                    height: 32,\n                    overflow: 'hidden',\n                    borderRadius: '50%',\n                    position: 'relative',\n                  }}\n                >\n                  <Avatar alt={name} src={avatar} />\n                  <Box\n                    sx={{\n                      top: 0,\n                      opacity: 0,\n                      width: '100%',\n                      height: '100%',\n                      display: 'flex',\n                      position: 'absolute',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\n                      transition: (theme) =>\n                        theme.transitions.create('opacity', {\n                          easing: theme.transitions.easing.easeInOut,\n                          duration: theme.transitions.duration.shorter,\n                        }),\n                      ...(selected && {\n                        opacity: 1,\n                        color: 'primary.main',\n                      }),\n                    }}\n                  >\n                    <Iconify icon=\"eva:checkmark-fill\" width={20} height={20} />\n                  </Box>\n                </Box>\n                <Box sx={{ ml: 2 }} />\n                {parts.map((part, index) => (\n                  <Typography key={index} variant=\"subtitle2\" color={part.highlight ? 'primary' : 'textPrimary'}>\n                    {part.text}\n                  </Typography>\n                ))}\n              </li>\n            );\n          }}\n          renderTags={(recipients, getTagProps) =>\n            recipients.map((recipient, index) => {\n              const { id, name, avatar } = recipient;\n              return (\n                <Chip\n                  {...getTagProps({ index })}\n                  key={id}\n                  size=\"small\"\n                  label={name}\n                  color=\"info\"\n                  avatar={<Avatar alt={name} src={avatar} />}\n                />\n              );\n            })\n          }\n          renderInput={(params) => <TextField {...params} placeholder={recipients.length === 0 ? 'Recipients' : ''} />}\n        />\n      </AutocompleteStyle>\n    </RootStyle>\n  );\n}\n","import { useEffect } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\n// @mui\nimport { Box, Divider, Stack } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport {\n  addRecipients,\n  onSendMessage,\n  getConversation,\n  getParticipants,\n  markConversationAsRead,\n  resetActiveConversation,\n} from '../../../redux/slices/chat';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport ChatRoom from './ChatRoom';\nimport ChatMessageList from './ChatMessageList';\nimport ChatHeaderDetail from './ChatHeaderDetail';\nimport ChatMessageInput from './ChatMessageInput';\nimport ChatHeaderCompose from './ChatHeaderCompose';\n\n// ----------------------------------------------------------------------\n\nconst conversationSelector = (state) => {\n  const { conversations, activeConversationId } = state.chat;\n  const conversation = activeConversationId ? conversations.byId[activeConversationId] : null;\n  if (conversation) {\n    return conversation;\n  }\n  const initState = {\n    id: '',\n    messages: [],\n    participants: [],\n    unreadCount: 0,\n    type: '',\n  };\n  return initState;\n};\n\nexport default function ChatWindow() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const { conversationKey } = useParams();\n  const { contacts, recipients, participants, activeConversationId } = useSelector((state) => state.chat);\n  const conversation = useSelector((state) => conversationSelector(state));\n\n  const mode = conversationKey ? 'DETAIL' : 'COMPOSE';\n  const displayParticipants = participants.filter((item) => item.id !== '8864c717-587d-472a-929a-8e5f298024da-0');\n\n  useEffect(() => {\n    const getDetails = async () => {\n      dispatch(getParticipants(conversationKey));\n      try {\n        await dispatch(getConversation(conversationKey));\n      } catch (error) {\n        console.error(error);\n        navigate(PATH_DASHBOARD.chat.new);\n      }\n    };\n    if (conversationKey) {\n      getDetails();\n    } else if (activeConversationId) {\n      dispatch(resetActiveConversation());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conversationKey]);\n\n  useEffect(() => {\n    if (activeConversationId) {\n      dispatch(markConversationAsRead(activeConversationId));\n    }\n  }, [dispatch, activeConversationId]);\n\n  const handleAddRecipients = (recipients) => {\n    dispatch(addRecipients(recipients));\n  };\n\n  const handleSendMessage = async (value) => {\n    try {\n      dispatch(onSendMessage(value));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Stack sx={{ flexGrow: 1, minWidth: '1px' }}>\n      {mode === 'DETAIL' ? (\n        <ChatHeaderDetail participants={displayParticipants} />\n      ) : (\n        <ChatHeaderCompose\n          recipients={recipients}\n          contacts={Object.values(contacts.byId)}\n          onAddRecipients={handleAddRecipients}\n        />\n      )}\n\n      <Divider />\n\n      <Box sx={{ flexGrow: 1, display: 'flex', overflow: 'hidden' }}>\n        <Stack sx={{ flexGrow: 1 }}>\n          <ChatMessageList conversation={conversation} />\n\n          <Divider />\n\n          <ChatMessageInput\n            conversationId={activeConversationId}\n            onSend={handleSendMessage}\n            disabled={pathname === PATH_DASHBOARD.chat.new}\n          />\n        </Stack>\n\n        {mode === 'DETAIL' && <ChatRoom conversation={conversation} participants={displayParticipants} />}\n      </Box>\n    </Stack>\n  );\n}\n","import { useState, useRef } from 'react';\nimport { capitalCase } from 'change-case';\n// @mui\nimport {\n  Box,\n  List,\n  Select,\n  Divider,\n  Popover,\n  Tooltip,\n  ListItem,\n  Typography,\n  IconButton,\n  ListItemText,\n  ListItemIcon,\n  ListItemButton,\n} from '@mui/material';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\n// components\nimport Iconify from '../../../components/Iconify';\nimport MyAvatar from '../../../components/MyAvatar';\nimport BadgeStatus from '../../../components/BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst STATUS = ['online', 'invisible', 'away'];\n\nexport default function ChatAccount() {\n  const { user } = useAuth();\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const [status, setStatus] = useState('online');\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Box ref={anchorRef} sx={{ position: 'relative' }}>\n        <MyAvatar onClick={handleOpen} sx={{ cursor: 'pointer', width: 48, height: 48 }} />\n        <BadgeStatus status={status} sx={{ position: 'absolute', bottom: 2, right: 2 }} />\n      </Box>\n\n      <Popover\n        open={open}\n        onClose={handleClose}\n        anchorEl={anchorRef.current}\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'left' }}\n      >\n        <Box sx={{ py: 2, pr: 1, pl: 2.5, display: 'flex', alignItems: 'center' }}>\n          <MyAvatar />\n\n          <Box sx={{ ml: 2, mr: 3 }}>\n            <Typography noWrap variant=\"subtitle1\">\n              {user?.displayName}\n            </Typography>\n            <Typography noWrap variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              {user?.email}\n            </Typography>\n          </Box>\n\n          <Tooltip title=\"Log out\">\n            <IconButton>\n              <Iconify icon=\"ic:round-power-settings-new\" width={20} height={20} />\n            </IconButton>\n          </Tooltip>\n        </Box>\n\n        <Divider />\n\n        <List>\n          <ListItem sx={{ px: 2.5 }}>\n            <ListItemIcon>\n              <BadgeStatus size=\"large\" status={status} sx={{ m: 0.5 }} />\n            </ListItemIcon>\n            <ListItemText>\n              <Select\n                native\n                value={status}\n                onChange={(e) => setStatus(e.target.value)}\n                sx={{\n                  '& svg': { display: `none` },\n                  '& select': { p: 0, typography: 'body2' },\n                  '& fieldset': { display: 'none' },\n                }}\n              >\n                {STATUS.map((option) => (\n                  <option key={option} value={option}>\n                    {capitalCase(option)}\n                  </option>\n                ))}\n              </Select>\n            </ListItemText>\n          </ListItem>\n\n          <ListItemButton sx={{ px: 2.5 }}>\n            <ListItemIcon>\n              <Iconify icon=\"ic:round-account-box\" width={20} height={20} />\n            </ListItemIcon>\n            <ListItemText primary=\"Profile\" primaryTypographyProps={{ variant: 'body2' }} />\n          </ListItemButton>\n\n          <ListItemButton sx={{ px: 2.5 }}>\n            <ListItemIcon>\n              <Iconify icon=\"eva:settings-2-fill\" width={20} height={20} />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" primaryTypographyProps={{ variant: 'body2' }} />\n          </ListItemButton>\n        </List>\n      </Popover>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { List, Avatar, Typography, ListItemText, ListItemAvatar, ListItemButton } from '@mui/material';\n//\nimport SearchNotFound from '../../../components/SearchNotFound';\n\n// ----------------------------------------------------------------------\n\nChatSearchResults.propTypes = {\n  query: PropTypes.string,\n  results: PropTypes.array,\n  onSelectContact: PropTypes.func,\n};\n\nexport default function ChatSearchResults({ query, results, onSelectContact }) {\n  const isFound = results.length > 0;\n\n  return (\n    <>\n      <Typography paragraph variant=\"subtitle1\" sx={{ px: 3, color: 'text.secondary' }}>\n        Contacts\n      </Typography>\n\n      <List disablePadding>\n        {results.map((result) => (\n          <ListItemButton\n            key={result.id}\n            onClick={() => onSelectContact(result)}\n            sx={{\n              py: 1.5,\n              px: 3,\n            }}\n          >\n            <ListItemAvatar>\n              <Avatar alt={result.name} src={result.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={result.name}\n              primaryTypographyProps={{\n                noWrap: true,\n                variant: 'subtitle2',\n              }}\n            />\n          </ListItemButton>\n        ))}\n      </List>\n      {!isFound && (\n        <SearchNotFound\n          searchQuery={query}\n          sx={{\n            p: 3,\n            mx: 'auto',\n            width: `calc(100% - 48px)`,\n            bgcolor: 'background.neutral',\n          }}\n        />\n      )}\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { FormControl, OutlinedInput, InputAdornment, ClickAwayListener } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  marginTop: theme.spacing(2),\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  transition: theme.transitions.create('box-shadow', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&.Mui-focused': { boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nChatContactSearch.propTypes = {\n  query: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onClickAway: PropTypes.func,\n};\n\nexport default function ChatContactSearch({ query, onChange, onFocus, onClickAway, ...other }) {\n  return (\n    <ClickAwayListener onClickAway={onClickAway}>\n      <RootStyle {...other}>\n        <FormControl fullWidth size=\"small\">\n          <SearchStyle\n            value={query}\n            onFocus={onFocus}\n            onChange={onChange}\n            placeholder=\"Search contacts...\"\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </RootStyle>\n    </ClickAwayListener>\n  );\n}\n","import { last } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Avatar, ListItemText, ListItemAvatar, ListItemButton } from '@mui/material';\n//\nimport BadgeStatus from '../../../components/BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst AVATAR_SIZE = 48;\nconst AVATAR_SIZE_GROUP = 32;\n\nconst RootStyle = styled(ListItemButton)(({ theme }) => ({\n  padding: theme.spacing(1.5, 3),\n  transition: theme.transitions.create('all'),\n}));\n\nconst AvatarWrapperStyle = styled('div')({\n  position: 'relative',\n  width: AVATAR_SIZE,\n  height: AVATAR_SIZE,\n  '& .MuiAvatar-img': { borderRadius: '50%' },\n  '& .MuiAvatar-root': { width: '100%', height: '100%' },\n});\n\n// ----------------------------------------------------------------------\n\nconst getDetails = (conversation, currentUserId) => {\n  const otherParticipants = conversation.participants.filter((participant) => participant.id !== currentUserId);\n  const displayNames = otherParticipants.reduce((names, participant) => [...names, participant.name], []).join(', ');\n  let displayText = '';\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\n  if (lastMessage) {\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\n    displayText = `${sender}${message}`;\n  }\n  return { otherParticipants, displayNames, displayText };\n};\n\nChatConversationItem.propTypes = {\n  isSelected: PropTypes.bool,\n  conversation: PropTypes.object.isRequired,\n  isOpenSidebar: PropTypes.bool,\n  onSelectConversation: PropTypes.func,\n};\n\nexport default function ChatConversationItem({ isSelected, conversation, isOpenSidebar, onSelectConversation }) {\n  const details = getDetails(conversation, '8864c717-587d-472a-929a-8e5f298024da-0');\n\n  const displayLastActivity = last(conversation.messages).createdAt;\n  const isGroup = details.otherParticipants.length > 1;\n  const isUnread = conversation.unreadCount > 0;\n  const isOnlineGroup = isGroup && details.otherParticipants.map((item) => item.status).includes('online');\n\n  return (\n    <RootStyle\n      onClick={onSelectConversation}\n      sx={{\n        ...(isSelected && { bgcolor: 'action.selected' }),\n      }}\n    >\n      <ListItemAvatar>\n        <Box\n          sx={{\n            ...(isGroup && {\n              position: 'relative',\n              width: AVATAR_SIZE,\n              height: AVATAR_SIZE,\n              '& .avatarWrapper': {\n                position: 'absolute',\n                width: AVATAR_SIZE_GROUP,\n                height: AVATAR_SIZE_GROUP,\n                '&:nth-of-type(1)': {\n                  left: 0,\n                  zIndex: 9,\n                  bottom: 2,\n                  '& .MuiAvatar-root': {\n                    border: (theme) => `solid 2px ${theme.palette.background.paper}`,\n                  },\n                },\n                '&:nth-of-type(2)': { top: 2, right: 0 },\n              },\n            }),\n          }}\n        >\n          {details.otherParticipants.slice(0, 2).map((participant) => (\n            <AvatarWrapperStyle className=\"avatarWrapper\" key={participant.id}>\n              <Avatar alt={participant.name} src={participant.avatar} />\n              {!isGroup && (\n                <BadgeStatus status={participant.status} sx={{ right: 2, bottom: 2, position: 'absolute' }} />\n              )}\n            </AvatarWrapperStyle>\n          ))}\n\n          {isOnlineGroup && <BadgeStatus status=\"online\" sx={{ right: 2, bottom: 2, position: 'absolute' }} />}\n        </Box>\n      </ListItemAvatar>\n\n      {isOpenSidebar && (\n        <>\n          <ListItemText\n            primary={details.displayNames}\n            primaryTypographyProps={{\n              noWrap: true,\n              variant: 'subtitle2',\n            }}\n            secondary={details.displayText}\n            secondaryTypographyProps={{\n              noWrap: true,\n              variant: isUnread ? 'subtitle2' : 'body2',\n              color: isUnread ? 'textPrimary' : 'textSecondary',\n            }}\n          />\n\n          <Box\n            sx={{\n              ml: 2,\n              height: 44,\n              display: 'flex',\n              alignItems: 'flex-end',\n              flexDirection: 'column',\n            }}\n          >\n            <Box\n              sx={{\n                mb: 1.25,\n                fontSize: 12,\n                lineHeight: '22px',\n                whiteSpace: 'nowrap',\n                color: 'text.disabled',\n              }}\n            >\n              {formatDistanceToNowStrict(new Date(displayLastActivity), {\n                addSuffix: false,\n              })}\n            </Box>\n            {isUnread && <BadgeStatus status=\"unread\" size=\"small\" />}\n          </Box>\n        </>\n      )}\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n// @mui\nimport { List } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// components\nimport { SkeletonConversationItem } from '../../../components/skeleton';\n//\nimport ChatConversationItem from './ChatConversationItem';\n\n// ----------------------------------------------------------------------\n\nChatConversationList.propTypes = {\n  conversations: PropTypes.object,\n  isOpenSidebar: PropTypes.bool,\n  activeConversationId: PropTypes.string,\n  sx: PropTypes.object,\n};\n\nexport default function ChatConversationList({ conversations, isOpenSidebar, activeConversationId, sx, ...other }) {\n  const navigate = useNavigate();\n\n  const handleSelectConversation = (conversationId) => {\n    let conversationKey = '';\n    const conversation = conversations.byId[conversationId];\n    if (conversation.type === 'GROUP') {\n      conversationKey = conversation.id;\n    } else {\n      const otherParticipant = conversation.participants.find(\n        (participant) => participant.id !== '8864c717-587d-472a-929a-8e5f298024da-0'\n      );\n      if (otherParticipant?.username) {\n        conversationKey = otherParticipant?.username;\n      }\n    }\n    navigate(`${PATH_DASHBOARD.chat.root}/${conversationKey}`);\n  };\n\n  const loading = !conversations.allIds.length;\n\n  return (\n    <List disablePadding sx={sx} {...other}>\n      {(loading ? [...Array(12)] : conversations.allIds).map((conversationId, index) =>\n        conversationId ? (\n          <ChatConversationItem\n            key={conversationId}\n            isOpenSidebar={isOpenSidebar}\n            conversation={conversations.byId[conversationId]}\n            isSelected={activeConversationId === conversationId}\n            onSelectConversation={() => handleSelectConversation(conversationId)}\n          />\n        ) : (\n          <SkeletonConversationItem key={index} />\n        )\n      )}\n    </List>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Stack, Drawer, IconButton } from '@mui/material';\n// redux\nimport { useSelector } from '../../../redux/store';\n// hooks\nimport useResponsive from '../../../hooks/useResponsive';\n// utils\nimport axios from '../../../utils/axios';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\n//\nimport ChatAccount from './ChatAccount';\nimport ChatSearchResults from './ChatSearchResults';\nimport ChatContactSearch from './ChatContactSearch';\nimport ChatConversationList from './ChatConversationList';\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 320;\nconst COLLAPSE_WIDTH = 96;\n\nconst ToggleButtonStyle = styled((props) => <IconButton disableRipple {...props} />)(({ theme }) => ({\n  left: 0,\n  zIndex: 9,\n  width: 32,\n  height: 32,\n  position: 'absolute',\n  top: theme.spacing(13),\n  borderRadius: `0 12px 12px 0`,\n  color: theme.palette.primary.contrastText,\n  backgroundColor: theme.palette.primary.main,\n  boxShadow: theme.customShadows.primary,\n  '&:hover': {\n    backgroundColor: theme.palette.primary.darker,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function ChatSidebar() {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n\n  const [openSidebar, setOpenSidebar] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearchFocused, setSearchFocused] = useState(false);\n  const { conversations, activeConversationId } = useSelector((state) => state.chat);\n\n  const isDesktop = useResponsive('up', 'md');\n\n  const displayResults = searchQuery && isSearchFocused;\n\n  const isCollapse = isDesktop && !openSidebar;\n\n  useEffect(() => {\n    if (!isDesktop) {\n      return handleCloseSidebar();\n    }\n    return handleOpenSidebar();\n  }, [isDesktop, pathname]);\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (!openSidebar) {\n      return setSearchFocused(false);\n    }\n  }, [openSidebar]);\n\n  const handleOpenSidebar = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleCloseSidebar = () => {\n    setOpenSidebar(false);\n  };\n\n  const handleToggleSidebar = () => {\n    setOpenSidebar((prev) => !prev);\n  };\n\n  const handleClickAwaySearch = () => {\n    setSearchFocused(false);\n    setSearchQuery('');\n  };\n\n  const handleChangeSearch = async (event) => {\n    try {\n      const { value } = event.target;\n      setSearchQuery(value);\n      if (value) {\n        const response = await axios.get('/api/chat/search', {\n          params: { query: value },\n        });\n        setSearchResults(response.data.results);\n      } else {\n        setSearchResults([]);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSearchFocus = () => {\n    setSearchFocused(true);\n  };\n\n  const handleSearchSelect = (username) => {\n    setSearchFocused(false);\n    setSearchQuery('');\n    navigate(`${PATH_DASHBOARD.chat.root}/${username}`);\n  };\n\n  const handleSelectContact = (result) => {\n    if (handleSearchSelect) {\n      handleSearchSelect(result.username);\n    }\n  };\n\n  const renderContent = (\n    <>\n      <Box sx={{ py: 2, px: 3 }}>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n          {!isCollapse && (\n            <>\n              <ChatAccount />\n              <Box sx={{ flexGrow: 1 }} />\n            </>\n          )}\n\n          <IconButton onClick={handleToggleSidebar}>\n            <Iconify\n              width={20}\n              height={20}\n              icon={openSidebar ? 'eva:arrow-ios-back-fill' : 'eva:arrow-ios-forward-fill'}\n            />\n          </IconButton>\n\n          {!isCollapse && (\n            <IconButton onClick={() => navigate(PATH_DASHBOARD.chat.new)}>\n              <Iconify icon={'eva:edit-fill'} width={20} height={20} />\n            </IconButton>\n          )}\n        </Stack>\n\n        {!isCollapse && (\n          <ChatContactSearch\n            query={searchQuery}\n            onFocus={handleSearchFocus}\n            onChange={handleChangeSearch}\n            onClickAway={handleClickAwaySearch}\n          />\n        )}\n      </Box>\n\n      <Scrollbar>\n        {!displayResults ? (\n          <ChatConversationList\n            conversations={conversations}\n            isOpenSidebar={openSidebar}\n            activeConversationId={activeConversationId}\n            sx={{ ...(isSearchFocused && { display: 'none' }) }}\n          />\n        ) : (\n          <ChatSearchResults query={searchQuery} results={searchResults} onSelectContact={handleSelectContact} />\n        )}\n      </Scrollbar>\n    </>\n  );\n\n  return (\n    <>\n      {!isDesktop && (\n        <ToggleButtonStyle onClick={handleToggleSidebar}>\n          <Iconify width={16} height={16} icon={'eva:people-fill'} />\n        </ToggleButtonStyle>\n      )}\n\n      {isDesktop ? (\n        <Drawer\n          open={openSidebar}\n          variant=\"persistent\"\n          sx={{\n            width: DRAWER_WIDTH,\n            transition: theme.transitions.create('width'),\n            '& .MuiDrawer-paper': {\n              position: 'static',\n              width: DRAWER_WIDTH,\n            },\n            ...(isCollapse && {\n              width: COLLAPSE_WIDTH,\n              '& .MuiDrawer-paper': {\n                width: COLLAPSE_WIDTH,\n                position: 'static',\n                transform: 'none !important',\n                visibility: 'visible !important',\n              },\n            }),\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      ) : (\n        <Drawer\n          ModalProps={{ keepMounted: true }}\n          open={openSidebar}\n          onClose={handleCloseSidebar}\n          sx={{\n            '& .MuiDrawer-paper': { width: DRAWER_WIDTH },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </>\n  );\n}\n","import { useEffect } from 'react';\n// @mui\nimport { Card, Container } from '@mui/material';\n// redux\nimport { useDispatch } from '../../redux/store';\nimport { getConversations, getContacts } from '../../redux/slices/chat';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { ChatSidebar, ChatWindow } from '../../sections/@dashboard/chat';\n\n// ----------------------------------------------------------------------\n\nexport default function Chat() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getConversations());\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"Chat\">\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        <HeaderBreadcrumbs\n          heading=\"Chat\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Chat' }]}\n        />\n        <Card sx={{ height: '72vh', display: 'flex' }}>\n          <ChatSidebar />\n          <ChatWindow />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}