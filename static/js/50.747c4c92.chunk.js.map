{"version":3,"sources":["../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/lab/TreeView/TreeViewContext.js","../node_modules/@mui/lab/TreeView/descendants.js","../node_modules/@mui/lab/TreeItem/treeItemClasses.js","../node_modules/@mui/lab/TreeItem/TreeItemContent.js","../node_modules/@mui/lab/TreeItem/useTreeItem.js","../node_modules/@mui/lab/TreeItem/TreeItem.js","../node_modules/@mui/lab/TreeView/treeViewClasses.js","../node_modules/@mui/lab/TreeView/TreeView.js"],"names":["createSvgIcon","_jsx","d","BreadcrumbCollapsedButton","styled","ButtonBase","skipSx","theme","_extends","display","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","color","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","width","height","BreadcrumbCollapsed","props","ownerState","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","breadcrumbsClasses","generateUtilityClasses","_excluded","BreadcrumbsRoot","Typography","name","overridesResolver","styles","li","root","BreadcrumbsOl","ol","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","className","reduce","acc","current","index","length","concat","push","Breadcrumbs","React","inProps","ref","useThemeProps","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","toArray","filter","child","map","clsx","slice","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter","getCardHeaderUtilityClass","cardHeaderClasses","CardHeaderRoot","title","subheader","CardHeaderAvatar","avatar","flex","CardHeaderAction","action","alignSelf","marginTop","marginBottom","CardHeaderContent","content","CardHeader","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","type","variant","_jsxs","as","TreeViewContext","DescendantContext","noop","useDescendant","descendant","forceUpdate","registerDescendant","unregisterDescendant","descendants","parentId","array","comp","i","findIndex","item","element","previousDescendants","value","usePrevious","someDescendantsHaveChanged","some","newDescendant","position","useEnhancedEffect","DescendantProvider","id","set","_ref","oldItems","newItems","start","end","middle","Math","floor","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","binaryFindElement","newItem","splice","forEach","Provider","getTreeItemUtilityClass","treeItemClasses","TreeItemContent","displayIcon","expansionIcon","iconProp","icon","label","nodeId","onMouseDown","isExpanded","isExpandable","isFocused","isDisabled","isSelected","multiSelect","selectNode","selectRange","toggleExpansion","expandable","focused","disabled","selected","handleExpansion","event","multiple","shiftKey","ctrlKey","metaKey","handleSelection","preventSelection","preventDefault","useTreeItem","iconContainer","TreeItemRoot","outline","StyledTreeItemContent","cursor","WebkitTapHighlightColor","hover","opacity","disabledOpacity","alpha","primary","main","selectedOpacity","hoverOpacity","focusOpacity","flexShrink","justifyContent","fontSize","minWidth","paddingLeft","typography","body1","TreeItemGroup","Collapse","group","TreeItem","collapseIcon","ContentComponent","ContentProps","endIcon","expandIcon","disabledProp","idProp","TransitionComponent","TransitionProps","icons","contextIcons","disabledItemsFocusable","mapFirstChar","unMapFirstChar","registerNode","unregisterNode","treeId","ariaSelected","treeitemElement","setTreeitemElement","contentRef","handleRef","useForkRef","Boolean","Array","isArray","defaultCollapseIcon","defaultExpandIcon","defaultParentIcon","defaultEndIcon","idAttribute","textContent","substring","toLowerCase","role","tabIndex","onFocus","target","currentTarget","ownerDocument","getElementById","preventScroll","unfocusable","unmountOnExit","in","getTreeViewUtilityClass","TreeViewRoot","findNextFirstChar","firstChars","startIndex","char","noopSelection","defaultDefaultExpanded","defaultDefaultSelected","TreeView","defaultExpanded","defaultSelected","disableSelection","expandedProp","onBlur","onKeyDown","onNodeFocus","onNodeSelect","onNodeToggle","selectedProp","isRtl","useTheme","direction","useId","treeRef","focusedNodeId","setFocusedNodeId","nodeMap","firstCharMap","useControlled","controlled","default","state","setExpandedState","setSelectedState","indexOf","node","getChildrenIds","Object","keys","key","sort","a","b","getNavigableChildrenIds","childrenIds","getNextNode","siblings","nextSibling","getPreviousNode","nodeIndex","currentNode","pop","getLastNode","lastNode","getFirstNode","getNodesInRange","nodeA","nodeB","nodeAId","nodeBId","aFamily","bFamily","aAncestor","bAncestor","aAncestorIsCommon","bAncestorIsCommon","continueA","continueB","commonAncestor","ancestorFamily","aSide","bSide","findOrderInTremauxTree","first","last","nodes","focusNextNode","newExpanded","lastSelectedNode","lastSelectionWasRange","currentRangeSelection","handleRangeArrowSelect","base","next","handleRangeSelect","range","newSelected","handleMultipleSelect","handleSingleSelect","stacked","newMap","oldFocusedNodeId","activeElement","firstChar","handleNextArrow","handlePreviousArrow","parent","activeDescendant","flag","altKey","string","ctrlPressed","stopPropagation","selectNextNode","selectPreviousNode","focusPreviousNode","rangeSelectToFirst","focusFirstNode","rangeSelectToLast","focusLastNode","diff","expandAllSiblings","selectAllNodes","match","lowercaseChar","firstCharIds","visible","shouldBeSkipped","focusByFirstCharacter","firstSelected"],"mappings":"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","file":"static/js/50.747c4c92.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase, {\n  skipSx: true\n})(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst TreeViewContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  TreeViewContext.displayName = 'TreeViewContext';\n}\n\nexport default TreeViewContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"element\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\n/** Credit: https://github.com/reach/reach-ui/blob/86a046f54d53b6420e392b3fa56dd991d9d4e458/packages/descendants/README.md\n *  Modified slightly to suit our purposes.\n */\n// To replace with .findIndex() once we stop IE11 support.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction binaryFindElement(array, element) {\n  let start = 0;\n  let end = array.length - 1;\n\n  while (start <= end) {\n    const middle = Math.floor((start + end) / 2);\n\n    if (array[middle].element === element) {\n      return middle;\n    } // eslint-disable-next-line no-bitwise\n\n\n    if (array[middle].element.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_PRECEDING) {\n      end = middle - 1;\n    } else {\n      start = middle + 1;\n    }\n  }\n\n  return start;\n}\n\nconst DescendantContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  DescendantContext.displayName = 'DescendantContext';\n}\n\nfunction usePrevious(value) {\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\nconst noop = () => {};\n/**\n * This hook registers our descendant by passing it into an array. We can then\n * search that array by to find its index when registering it in the component.\n * We use this for focus management, keyboard navigation, and typeahead\n * functionality for some components.\n *\n * The hook accepts the element node\n *\n * Our main goals with this are:\n *   1) maximum composability,\n *   2) minimal API friction\n *   3) SSR compatibility*\n *   4) concurrent safe\n *   5) index always up-to-date with the tree despite changes\n *   6) works with memoization of any component in the tree (hopefully)\n *\n * * As for SSR, the good news is that we don't actually need the index on the\n * server for most use-cases, as we are only using it to determine the order of\n * composed descendants for keyboard navigation.\n */\n\n\nexport function useDescendant(descendant) {\n  const [, forceUpdate] = React.useState();\n  const {\n    registerDescendant = noop,\n    unregisterDescendant = noop,\n    descendants = [],\n    parentId = null\n  } = React.useContext(DescendantContext); // This will initially return -1 because we haven't registered the descendant\n  // on the first render. After we register, this will then return the correct\n  // index on the following render and we will re-register descendants\n  // so that everything is up-to-date before the user interacts with a\n  // collection.\n\n  const index = findIndex(descendants, item => item.element === descendant.element);\n  const previousDescendants = usePrevious(descendants); // We also need to re-register descendants any time ANY of the other\n  // descendants have changed. My brain was melting when I wrote this and it\n  // feels a little off, but checking in render and using the result in the\n  // effect's dependency array works well enough.\n\n  const someDescendantsHaveChanged = descendants.some((newDescendant, position) => {\n    return previousDescendants && previousDescendants[position] && previousDescendants[position].element !== newDescendant.element;\n  }); // Prevent any flashing\n\n  useEnhancedEffect(() => {\n    if (descendant.element) {\n      registerDescendant(_extends({}, descendant, {\n        index\n      }));\n      return () => {\n        unregisterDescendant(descendant.element);\n      };\n    }\n\n    forceUpdate({});\n    return undefined;\n  }, [registerDescendant, unregisterDescendant, index, someDescendantsHaveChanged, descendant]);\n  return {\n    parentId,\n    index\n  };\n}\nexport function DescendantProvider(props) {\n  const {\n    children,\n    id\n  } = props;\n  const [items, set] = React.useState([]);\n  const registerDescendant = React.useCallback(_ref => {\n    let {\n      element\n    } = _ref,\n        other = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n    set(oldItems => {\n      let newItems;\n\n      if (oldItems.length === 0) {\n        // If there are no items, register at index 0 and bail.\n        return [_extends({}, other, {\n          element,\n          index: 0\n        })];\n      }\n\n      const index = binaryFindElement(oldItems, element);\n\n      if (oldItems[index] && oldItems[index].element === element) {\n        // If the element is already registered, just use the same array\n        newItems = oldItems;\n      } else {\n        // When registering a descendant, we need to make sure we insert in\n        // into the array in the same order that it appears in the DOM. So as\n        // new descendants are added or maybe some are removed, we always know\n        // that the array is up-to-date and correct.\n        //\n        // So here we look at our registered descendants and see if the new\n        // element we are adding appears earlier than an existing descendant's\n        // DOM node via `node.compareDocumentPosition`. If it does, we insert\n        // the new element at this index. Because `registerDescendant` will be\n        // called in an effect every time the descendants state value changes,\n        // we should be sure that this index is accurate when descendent\n        // elements come or go from our component.\n        const newItem = _extends({}, other, {\n          element,\n          index\n        }); // If an index is not found we will push the element to the end.\n\n\n        newItems = oldItems.slice();\n        newItems.splice(index, 0, newItem);\n      }\n\n      newItems.forEach((item, position) => {\n        item.index = position;\n      });\n      return newItems;\n    });\n  }, []);\n  const unregisterDescendant = React.useCallback(element => {\n    set(oldItems => oldItems.filter(item => element !== item.element));\n  }, []);\n  const value = React.useMemo(() => ({\n    descendants: items,\n    registerDescendant,\n    unregisterDescendant,\n    parentId: id\n  }), [items, registerDescendant, unregisterDescendant, id]);\n  return /*#__PURE__*/_jsx(DescendantContext.Provider, {\n    value: value,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? DescendantProvider.propTypes = {\n  children: PropTypes.node,\n  id: PropTypes.string\n} : void 0;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTreeItemUtilityClass(slot) {\n  return generateUtilityClass('MuiTreeItem', slot);\n}\nconst treeItemClasses = generateUtilityClasses('MuiTreeItem', ['root', 'group', 'content', 'expanded', 'selected', 'focused', 'disabled', 'iconContainer', 'label']);\nexport default treeItemClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"className\", \"displayIcon\", \"expansionIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onMouseDown\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport useTreeItem from './useTreeItem';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TreeItemContent = /*#__PURE__*/React.forwardRef(function TreeItemContent(props, ref) {\n  const {\n    classes,\n    className,\n    displayIcon,\n    expansionIcon,\n    icon: iconProp,\n    label,\n    nodeId,\n    onClick,\n    onMouseDown\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    disabled,\n    expanded,\n    selected,\n    focused,\n    handleExpansion,\n    handleSelection,\n    preventSelection\n  } = useTreeItem(nodeId);\n  const icon = iconProp || expansionIcon || displayIcon;\n\n  const handleMouseDown = event => {\n    preventSelection(event);\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  const handleClick = event => {\n    handleExpansion(event);\n    handleSelection(event);\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n\n    /* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions -- Key event is handled by the TreeView */\n    _jsxs(\"div\", _extends({\n      className: clsx(className, classes.root, expanded && classes.expanded, selected && classes.selected, focused && classes.focused, disabled && classes.disabled),\n      onClick: handleClick,\n      onMouseDown: handleMouseDown,\n      ref: ref\n    }, other, {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: classes.iconContainer,\n        children: icon\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: classes.label,\n        children: label\n      })]\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItemContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * className applied to the root element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display next to the tree node's label. Either a parent or end icon.\n   */\n  displayIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label. Either an expansion or collapse icon.\n   */\n  expansionIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func\n} : void 0;\nexport default TreeItemContent;","import * as React from 'react';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport default function useTreeItem(nodeId) {\n  const {\n    focus,\n    isExpanded,\n    isExpandable,\n    isFocused,\n    isDisabled,\n    isSelected,\n    multiSelect,\n    selectNode,\n    selectRange,\n    toggleExpansion\n  } = React.useContext(TreeViewContext);\n  const expandable = isExpandable ? isExpandable(nodeId) : false;\n  const expanded = isExpanded ? isExpanded(nodeId) : false;\n  const focused = isFocused ? isFocused(nodeId) : false;\n  const disabled = isDisabled ? isDisabled(nodeId) : false;\n  const selected = isSelected ? isSelected(nodeId) : false;\n\n  const handleExpansion = event => {\n    if (!disabled) {\n      if (!focused) {\n        focus(event, nodeId);\n      }\n\n      const multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n      if (expandable && !(multiple && isExpanded(nodeId))) {\n        toggleExpansion(event, nodeId);\n      }\n    }\n  };\n\n  const handleSelection = event => {\n    if (!disabled) {\n      if (!focused) {\n        focus(event, nodeId);\n      }\n\n      const multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey);\n\n      if (multiple) {\n        if (event.shiftKey) {\n          selectRange(event, {\n            end: nodeId\n          });\n        } else {\n          selectNode(event, nodeId, true);\n        }\n      } else {\n        selectNode(event, nodeId);\n      }\n    }\n  };\n\n  const preventSelection = event => {\n    if (event.shiftKey || event.ctrlKey || event.metaKey || disabled) {\n      // Prevent text selection\n      event.preventDefault();\n    }\n  };\n\n  return {\n    disabled,\n    expanded,\n    selected,\n    focused,\n    handleExpansion,\n    handleSelection,\n    preventSelection\n  };\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"collapseIcon\", \"ContentComponent\", \"ContentProps\", \"endIcon\", \"expandIcon\", \"disabled\", \"icon\", \"id\", \"label\", \"nodeId\", \"onClick\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport Collapse from '@mui/material/Collapse';\nimport { alpha, styled, useThemeProps } from '@mui/material/styles';\nimport { ownerDocument, useForkRef, unsupportedProp } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nimport { DescendantProvider, useDescendant } from '../TreeView/descendants';\nimport TreeItemContent from './TreeItemContent';\nimport treeItemClasses, { getTreeItemUtilityClass } from './treeItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    content: ['content'],\n    expanded: ['expanded'],\n    selected: ['selected'],\n    focused: ['focused'],\n    disabled: ['disabled'],\n    iconContainer: ['iconContainer'],\n    label: ['label'],\n    group: ['group']\n  };\n  return composeClasses(slots, getTreeItemUtilityClass, classes);\n};\n\nconst TreeItemRoot = styled('li', {\n  name: 'MuiTreeItem',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  outline: 0\n});\nconst StyledTreeItemContent = styled(TreeItemContent, {\n  name: 'MuiTreeItem',\n  slot: 'Content',\n  overridesResolver: (props, styles) => {\n    return [styles.content, styles.iconContainer && {\n      [`& .${treeItemClasses.iconContainer}`]: styles.iconContainer\n    }, styles.label && {\n      [`& .${treeItemClasses.label}`]: styles.label\n    }];\n  }\n})(({\n  theme\n}) => ({\n  padding: '0 8px',\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  WebkitTapHighlightColor: 'transparent',\n  '&:hover': {\n    backgroundColor: theme.palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${treeItemClasses.disabled}`]: {\n    opacity: theme.palette.action.disabledOpacity,\n    backgroundColor: 'transparent'\n  },\n  [`&.${treeItemClasses.focused}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`&.${treeItemClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n    [`&.${treeItemClasses.focused}`]: {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`& .${treeItemClasses.iconContainer}`]: {\n    marginRight: 4,\n    width: 15,\n    display: 'flex',\n    flexShrink: 0,\n    justifyContent: 'center',\n    '& svg': {\n      fontSize: 18\n    }\n  },\n  [`& .${treeItemClasses.label}`]: _extends({\n    width: '100%',\n    // fixes overflow - see https://github.com/mui-org/material-ui/issues/27372\n    minWidth: 0,\n    paddingLeft: 4,\n    position: 'relative'\n  }, theme.typography.body1)\n}));\nconst TreeItemGroup = styled(Collapse, {\n  name: 'MuiTreeItem',\n  slot: 'Group',\n  overridesResolver: (props, styles) => styles.group\n})({\n  margin: 0,\n  padding: 0,\n  marginLeft: 17\n});\nconst TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTreeItem'\n  });\n\n  const {\n    children,\n    className,\n    collapseIcon,\n    ContentComponent = TreeItemContent,\n    ContentProps,\n    endIcon,\n    expandIcon,\n    disabled: disabledProp,\n    icon,\n    id: idProp,\n    label,\n    nodeId,\n    onClick,\n    onMouseDown,\n    TransitionComponent = Collapse,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    icons: contextIcons = {},\n    focus,\n    isExpanded,\n    isFocused,\n    isSelected,\n    isDisabled,\n    multiSelect,\n    disabledItemsFocusable,\n    mapFirstChar,\n    unMapFirstChar,\n    registerNode,\n    unregisterNode,\n    treeId\n  } = React.useContext(TreeViewContext);\n  let id = null;\n\n  if (idProp != null) {\n    id = idProp;\n  } else if (treeId && nodeId) {\n    id = `${treeId}-${nodeId}`;\n  }\n\n  const [treeitemElement, setTreeitemElement] = React.useState(null);\n  const contentRef = React.useRef(null);\n  const handleRef = useForkRef(setTreeitemElement, ref);\n  const descendant = React.useMemo(() => ({\n    element: treeitemElement,\n    id: nodeId\n  }), [nodeId, treeitemElement]);\n  const {\n    index,\n    parentId\n  } = useDescendant(descendant);\n  const expandable = Boolean(Array.isArray(children) ? children.length : children);\n  const expanded = isExpanded ? isExpanded(nodeId) : false;\n  const focused = isFocused ? isFocused(nodeId) : false;\n  const selected = isSelected ? isSelected(nodeId) : false;\n  const disabled = isDisabled ? isDisabled(nodeId) : false;\n\n  const ownerState = _extends({}, props, {\n    expanded,\n    focused,\n    selected,\n    disabled\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let displayIcon;\n  let expansionIcon;\n\n  if (expandable) {\n    if (!expanded) {\n      expansionIcon = expandIcon || contextIcons.defaultExpandIcon;\n    } else {\n      expansionIcon = collapseIcon || contextIcons.defaultCollapseIcon;\n    }\n  }\n\n  if (expandable) {\n    displayIcon = contextIcons.defaultParentIcon;\n  } else {\n    displayIcon = endIcon || contextIcons.defaultEndIcon;\n  }\n\n  React.useEffect(() => {\n    // On the first render a node's index will be -1. We want to wait for the real index.\n    if (registerNode && unregisterNode && index !== -1) {\n      registerNode({\n        id: nodeId,\n        idAttribute: id,\n        index,\n        parentId,\n        expandable,\n        disabled: disabledProp\n      });\n      return () => {\n        unregisterNode(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [registerNode, unregisterNode, parentId, index, nodeId, expandable, disabledProp, id]);\n  React.useEffect(() => {\n    if (mapFirstChar && unMapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n      return () => {\n        unMapFirstChar(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [mapFirstChar, unMapFirstChar, nodeId, label]);\n  let ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    /* single-selection trees unset aria-selected on un-selected items.\n     *\n     * If the tree does not support multiple selection, aria-selected\n     * is set to true for the selected node and it is not present on any other node in the tree.\n     * Source: https://www.w3.org/TR/wai-aria-practices/#TreeView\n     */\n    ariaSelected = true;\n  }\n\n  function handleFocus(event) {\n    // DOM focus stays on the tree which manages focus with aria-activedescendant\n    if (event.target === event.currentTarget) {\n      ownerDocument(event.target).getElementById(treeId).focus({\n        preventScroll: true\n      });\n    }\n\n    const unfocusable = !disabledItemsFocusable && disabled;\n\n    if (!focused && event.currentTarget === event.target && !unfocusable) {\n      focus(event, nodeId);\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(TreeItemRoot, _extends({\n    className: clsx(classes.root, className),\n    role: \"treeitem\",\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    \"aria-disabled\": disabled || null,\n    ref: handleRef,\n    id: id,\n    tabIndex: -1\n  }, other, {\n    ownerState: ownerState,\n    onFocus: handleFocus,\n    children: [/*#__PURE__*/_jsx(StyledTreeItemContent, _extends({\n      as: ContentComponent,\n      ref: contentRef,\n      classes: {\n        root: classes.content,\n        expanded: classes.expanded,\n        selected: classes.selected,\n        focused: classes.focused,\n        disabled: classes.disabled,\n        iconContainer: classes.iconContainer,\n        label: classes.label\n      },\n      label: label,\n      nodeId: nodeId,\n      onClick: onClick,\n      onMouseDown: onMouseDown,\n      icon: icon,\n      expansionIcon: expansionIcon,\n      displayIcon: displayIcon,\n      ownerState: ownerState\n    }, ContentProps)), children && /*#__PURE__*/_jsx(DescendantProvider, {\n      id: nodeId,\n      children: /*#__PURE__*/_jsx(TreeItemGroup, _extends({\n        as: TransitionComponent,\n        unmountOnExit: true,\n        className: classes.group,\n        in: expanded,\n        component: \"ul\",\n        role: \"group\"\n      }, TransitionProps, {\n        children: children\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\n   * The component used for the content node.\n   * @default TreeItemContent\n   */\n  ContentComponent: elementTypeAcceptingRef,\n\n  /**\n   * Props applied to ContentComponent\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the node is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * This prop isn't supported.\n   * Use the `onNodeFocus` callback on the tree if you need to monitor a node's focus.\n   */\n  onFocus: unsupportedProp,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Collapse\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default TreeItem;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTreeViewUtilityClass(slot) {\n  return generateUtilityClass('MuiTreeView', slot);\n}\nconst treeViewClasses = generateUtilityClasses('MuiTreeView', ['root']);\nexport default treeViewClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"defaultSelected\", \"disabledItemsFocusable\", \"disableSelection\", \"expanded\", \"id\", \"multiSelect\", \"onBlur\", \"onFocus\", \"onKeyDown\", \"onNodeFocus\", \"onNodeSelect\", \"onNodeToggle\", \"selected\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { styled, useTheme, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useControlled, useForkRef, ownerDocument, unstable_useId as useId } from '@mui/material/utils';\nimport TreeViewContext from './TreeViewContext';\nimport { DescendantProvider } from './descendants';\nimport { getTreeViewUtilityClass } from './treeViewClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTreeViewUtilityClass, classes);\n};\n\nconst TreeViewRoot = styled('ul', {\n  name: 'MuiTreeView',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 0,\n  margin: 0,\n  listStyle: 'none',\n  outline: 0\n});\n\nfunction isPrintableCharacter(string) {\n  return string && string.length === 1 && string.match(/\\S/);\n}\n\nfunction findNextFirstChar(firstChars, startIndex, char) {\n  for (let i = startIndex; i < firstChars.length; i += 1) {\n    if (char === firstChars[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction noopSelection() {\n  return false;\n}\n\nconst defaultDefaultExpanded = [];\nconst defaultDefaultSelected = [];\nconst TreeView = /*#__PURE__*/React.forwardRef(function TreeView(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTreeView'\n  });\n\n  const {\n    children,\n    className,\n    defaultCollapseIcon,\n    defaultEndIcon,\n    defaultExpanded = defaultDefaultExpanded,\n    defaultExpandIcon,\n    defaultParentIcon,\n    defaultSelected = defaultDefaultSelected,\n    disabledItemsFocusable = false,\n    disableSelection = false,\n    expanded: expandedProp,\n    id: idProp,\n    multiSelect = false,\n    onBlur,\n    onFocus,\n    onKeyDown,\n    onNodeFocus,\n    onNodeSelect,\n    onNodeToggle,\n    selected: selectedProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n\n  const ownerState = _extends({}, props, {\n    defaultExpanded,\n    defaultSelected,\n    disabledItemsFocusable,\n    disableSelection,\n    multiSelect\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const treeId = useId(idProp);\n  const treeRef = React.useRef(null);\n  const handleRef = useForkRef(treeRef, ref);\n  const [focusedNodeId, setFocusedNodeId] = React.useState(null);\n  const nodeMap = React.useRef({});\n  const firstCharMap = React.useRef({});\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'TreeView',\n    state: 'expanded'\n  });\n  const [selected, setSelectedState] = useControlled({\n    controlled: selectedProp,\n    default: defaultSelected,\n    name: 'TreeView',\n    state: 'selected'\n  });\n  /*\n   * Status Helpers\n   */\n\n  const isExpanded = React.useCallback(id => Array.isArray(expanded) ? expanded.indexOf(id) !== -1 : false, [expanded]);\n  const isExpandable = React.useCallback(id => nodeMap.current[id] && nodeMap.current[id].expandable, []);\n  const isSelected = React.useCallback(id => Array.isArray(selected) ? selected.indexOf(id) !== -1 : selected === id, [selected]);\n  const isDisabled = React.useCallback(id => {\n    let node = nodeMap.current[id]; // This can be called before the node has been added to the node map.\n\n    if (!node) {\n      return false;\n    }\n\n    if (node.disabled) {\n      return true;\n    }\n\n    while (node.parentId != null) {\n      node = nodeMap.current[node.parentId];\n\n      if (node.disabled) {\n        return true;\n      }\n    }\n\n    return false;\n  }, []);\n\n  const isFocused = id => focusedNodeId === id;\n  /*\n   * Child Helpers\n   */\n  // Using Object.keys -> .map to mimic Object.values we should replace with Object.values() once we stop IE11 support.\n\n\n  const getChildrenIds = id => Object.keys(nodeMap.current).map(key => {\n    return nodeMap.current[key];\n  }).filter(node => node.parentId === id).sort((a, b) => a.index - b.index).map(child => child.id);\n\n  const getNavigableChildrenIds = id => {\n    let childrenIds = getChildrenIds(id);\n\n    if (!disabledItemsFocusable) {\n      childrenIds = childrenIds.filter(node => !isDisabled(node));\n    }\n\n    return childrenIds;\n  };\n  /*\n   * Node Helpers\n   */\n\n\n  const getNextNode = id => {\n    // If expanded get first child\n    if (isExpanded(id) && getNavigableChildrenIds(id).length > 0) {\n      return getNavigableChildrenIds(id)[0];\n    }\n\n    let node = nodeMap.current[id];\n\n    while (node != null) {\n      // Try to get next sibling\n      const siblings = getNavigableChildrenIds(node.parentId);\n      const nextSibling = siblings[siblings.indexOf(node.id) + 1];\n\n      if (nextSibling) {\n        return nextSibling;\n      } // If the sibling does not exist, go up a level to the parent and try again.\n\n\n      node = nodeMap.current[node.parentId];\n    }\n\n    return null;\n  };\n\n  const getPreviousNode = id => {\n    const node = nodeMap.current[id];\n    const siblings = getNavigableChildrenIds(node.parentId);\n    const nodeIndex = siblings.indexOf(id);\n\n    if (nodeIndex === 0) {\n      return node.parentId;\n    }\n\n    let currentNode = siblings[nodeIndex - 1];\n\n    while (isExpanded(currentNode) && getNavigableChildrenIds(currentNode).length > 0) {\n      currentNode = getNavigableChildrenIds(currentNode).pop();\n    }\n\n    return currentNode;\n  };\n\n  const getLastNode = () => {\n    let lastNode = getNavigableChildrenIds(null).pop();\n\n    while (isExpanded(lastNode)) {\n      lastNode = getNavigableChildrenIds(lastNode).pop();\n    }\n\n    return lastNode;\n  };\n\n  const getFirstNode = () => getNavigableChildrenIds(null)[0];\n\n  const getParent = id => nodeMap.current[id].parentId;\n  /**\n   * This is used to determine the start and end of a selection range so\n   * we can get the nodes between the two border nodes.\n   *\n   * It finds the nodes' common ancestor using\n   * a naive implementation of a lowest common ancestor algorithm\n   * (https://en.wikipedia.org/wiki/Lowest_common_ancestor).\n   * Then compares the ancestor's 2 children that are ancestors of nodeA and NodeB\n   * so we can compare their indexes to work out which node comes first in a depth first search.\n   * (https://en.wikipedia.org/wiki/Depth-first_search)\n   *\n   * Another way to put it is which node is shallower in a trémaux tree\n   * https://en.wikipedia.org/wiki/Tr%C3%A9maux_tree\n   */\n\n\n  const findOrderInTremauxTree = (nodeAId, nodeBId) => {\n    if (nodeAId === nodeBId) {\n      return [nodeAId, nodeBId];\n    }\n\n    const nodeA = nodeMap.current[nodeAId];\n    const nodeB = nodeMap.current[nodeBId];\n\n    if (nodeA.parentId === nodeB.id || nodeB.parentId === nodeA.id) {\n      return nodeB.parentId === nodeA.id ? [nodeA.id, nodeB.id] : [nodeB.id, nodeA.id];\n    }\n\n    const aFamily = [nodeA.id];\n    const bFamily = [nodeB.id];\n    let aAncestor = nodeA.parentId;\n    let bAncestor = nodeB.parentId;\n    let aAncestorIsCommon = bFamily.indexOf(aAncestor) !== -1;\n    let bAncestorIsCommon = aFamily.indexOf(bAncestor) !== -1;\n    let continueA = true;\n    let continueB = true;\n\n    while (!bAncestorIsCommon && !aAncestorIsCommon) {\n      if (continueA) {\n        aFamily.push(aAncestor);\n        aAncestorIsCommon = bFamily.indexOf(aAncestor) !== -1;\n        continueA = aAncestor !== null;\n\n        if (!aAncestorIsCommon && continueA) {\n          aAncestor = nodeMap.current[aAncestor].parentId;\n        }\n      }\n\n      if (continueB && !aAncestorIsCommon) {\n        bFamily.push(bAncestor);\n        bAncestorIsCommon = aFamily.indexOf(bAncestor) !== -1;\n        continueB = bAncestor !== null;\n\n        if (!bAncestorIsCommon && continueB) {\n          bAncestor = nodeMap.current[bAncestor].parentId;\n        }\n      }\n    }\n\n    const commonAncestor = aAncestorIsCommon ? aAncestor : bAncestor;\n    const ancestorFamily = getChildrenIds(commonAncestor);\n    const aSide = aFamily[aFamily.indexOf(commonAncestor) - 1];\n    const bSide = bFamily[bFamily.indexOf(commonAncestor) - 1];\n    return ancestorFamily.indexOf(aSide) < ancestorFamily.indexOf(bSide) ? [nodeAId, nodeBId] : [nodeBId, nodeAId];\n  };\n\n  const getNodesInRange = (nodeA, nodeB) => {\n    const [first, last] = findOrderInTremauxTree(nodeA, nodeB);\n    const nodes = [first];\n    let current = first;\n\n    while (current !== last) {\n      current = getNextNode(current);\n      nodes.push(current);\n    }\n\n    return nodes;\n  };\n  /*\n   * Focus Helpers\n   */\n\n\n  const focus = (event, id) => {\n    if (id) {\n      setFocusedNodeId(id);\n\n      if (onNodeFocus) {\n        onNodeFocus(event, id);\n      }\n    }\n  };\n\n  const focusNextNode = (event, id) => focus(event, getNextNode(id));\n\n  const focusPreviousNode = (event, id) => focus(event, getPreviousNode(id));\n\n  const focusFirstNode = event => focus(event, getFirstNode());\n\n  const focusLastNode = event => focus(event, getLastNode());\n\n  const focusByFirstCharacter = (event, id, char) => {\n    let start;\n    let index;\n    const lowercaseChar = char.toLowerCase();\n    const firstCharIds = [];\n    const firstChars = []; // This really only works since the ids are strings\n\n    Object.keys(firstCharMap.current).forEach(nodeId => {\n      const firstChar = firstCharMap.current[nodeId];\n      const map = nodeMap.current[nodeId];\n      const visible = map.parentId ? isExpanded(map.parentId) : true;\n      const shouldBeSkipped = disabledItemsFocusable ? false : isDisabled(nodeId);\n\n      if (visible && !shouldBeSkipped) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n\n    if (start >= firstCharIds.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n\n    index = findNextFirstChar(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = findNextFirstChar(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n\n    if (index > -1) {\n      focus(event, firstCharIds[index]);\n    }\n  };\n  /*\n   * Expansion Helpers\n   */\n\n\n  const toggleExpansion = (event, value = focusedNodeId) => {\n    let newExpanded;\n\n    if (expanded.indexOf(value) !== -1) {\n      newExpanded = expanded.filter(id => id !== value);\n    } else {\n      newExpanded = [value].concat(expanded);\n    }\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n\n    setExpandedState(newExpanded);\n  };\n\n  const expandAllSiblings = (event, id) => {\n    const map = nodeMap.current[id];\n    const siblings = getChildrenIds(map.parentId);\n    const diff = siblings.filter(child => isExpandable(child) && !isExpanded(child));\n    const newExpanded = expanded.concat(diff);\n\n    if (diff.length > 0) {\n      setExpandedState(newExpanded);\n\n      if (onNodeToggle) {\n        onNodeToggle(event, newExpanded);\n      }\n    }\n  };\n  /*\n   * Selection Helpers\n   */\n\n\n  const lastSelectedNode = React.useRef(null);\n  const lastSelectionWasRange = React.useRef(false);\n  const currentRangeSelection = React.useRef([]);\n\n  const handleRangeArrowSelect = (event, nodes) => {\n    let base = selected.slice();\n    const {\n      start,\n      next,\n      current\n    } = nodes;\n\n    if (!next || !current) {\n      return;\n    }\n\n    if (currentRangeSelection.current.indexOf(current) === -1) {\n      currentRangeSelection.current = [];\n    }\n\n    if (lastSelectionWasRange.current) {\n      if (currentRangeSelection.current.indexOf(next) !== -1) {\n        base = base.filter(id => id === start || id !== current);\n        currentRangeSelection.current = currentRangeSelection.current.filter(id => id === start || id !== current);\n      } else {\n        base.push(next);\n        currentRangeSelection.current.push(next);\n      }\n    } else {\n      base.push(next);\n      currentRangeSelection.current.push(current, next);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, base);\n    }\n\n    setSelectedState(base);\n  };\n\n  const handleRangeSelect = (event, nodes) => {\n    let base = selected.slice();\n    const {\n      start,\n      end\n    } = nodes; // If last selection was a range selection ignore nodes that were selected.\n\n    if (lastSelectionWasRange.current) {\n      base = base.filter(id => currentRangeSelection.current.indexOf(id) === -1);\n    }\n\n    let range = getNodesInRange(start, end);\n    range = range.filter(node => !isDisabled(node));\n    currentRangeSelection.current = range;\n    let newSelected = base.concat(range);\n    newSelected = newSelected.filter((id, i) => newSelected.indexOf(id) === i);\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  const handleMultipleSelect = (event, value) => {\n    let newSelected;\n\n    if (selected.indexOf(value) !== -1) {\n      newSelected = selected.filter(id => id !== value);\n    } else {\n      newSelected = [value].concat(selected);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  const handleSingleSelect = (event, value) => {\n    const newSelected = multiSelect ? [value] : value;\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  const selectNode = (event, id, multiple = false) => {\n    if (id) {\n      if (multiple) {\n        handleMultipleSelect(event, id);\n      } else {\n        handleSingleSelect(event, id);\n      }\n\n      lastSelectedNode.current = id;\n      lastSelectionWasRange.current = false;\n      currentRangeSelection.current = [];\n      return true;\n    }\n\n    return false;\n  };\n\n  const selectRange = (event, nodes, stacked = false) => {\n    const {\n      start = lastSelectedNode.current,\n      end,\n      current\n    } = nodes;\n\n    if (stacked) {\n      handleRangeArrowSelect(event, {\n        start,\n        next: end,\n        current\n      });\n    } else if (start != null && end != null) {\n      handleRangeSelect(event, {\n        start,\n        end\n      });\n    }\n\n    lastSelectionWasRange.current = true;\n  };\n\n  const rangeSelectToFirst = (event, id) => {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    const start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    selectRange(event, {\n      start,\n      end: getFirstNode()\n    });\n  };\n\n  const rangeSelectToLast = (event, id) => {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    const start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    selectRange(event, {\n      start,\n      end: getLastNode()\n    });\n  };\n\n  const selectNextNode = (event, id) => {\n    if (!isDisabled(getNextNode(id))) {\n      selectRange(event, {\n        end: getNextNode(id),\n        current: id\n      }, true);\n    }\n  };\n\n  const selectPreviousNode = (event, id) => {\n    if (!isDisabled(getPreviousNode(id))) {\n      selectRange(event, {\n        end: getPreviousNode(id),\n        current: id\n      }, true);\n    }\n  };\n\n  const selectAllNodes = event => {\n    selectRange(event, {\n      start: getFirstNode(),\n      end: getLastNode()\n    });\n  };\n  /*\n   * Mapping Helpers\n   */\n\n\n  const registerNode = React.useCallback(node => {\n    const {\n      id,\n      index,\n      parentId,\n      expandable,\n      idAttribute,\n      disabled\n    } = node;\n    nodeMap.current[id] = {\n      id,\n      index,\n      parentId,\n      expandable,\n      idAttribute,\n      disabled\n    };\n  }, []);\n  const unregisterNode = React.useCallback(id => {\n    const newMap = _extends({}, nodeMap.current);\n\n    delete newMap[id];\n    nodeMap.current = newMap;\n    setFocusedNodeId(oldFocusedNodeId => {\n      if (oldFocusedNodeId === id && treeRef.current === ownerDocument(treeRef.current).activeElement) {\n        return getChildrenIds(null)[0];\n      }\n\n      return oldFocusedNodeId;\n    });\n  }, []);\n  const mapFirstChar = React.useCallback((id, firstChar) => {\n    firstCharMap.current[id] = firstChar;\n  }, []);\n  const unMapFirstChar = React.useCallback(id => {\n    const newMap = _extends({}, firstCharMap.current);\n\n    delete newMap[id];\n    firstCharMap.current = newMap;\n  }, []);\n  /**\n   * Event handlers and Navigation\n   */\n\n  const handleNextArrow = event => {\n    if (isExpandable(focusedNodeId)) {\n      if (isExpanded(focusedNodeId)) {\n        focusNextNode(event, focusedNodeId);\n      } else if (!isDisabled(focusedNodeId)) {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  const handlePreviousArrow = event => {\n    if (isExpanded(focusedNodeId) && !isDisabled(focusedNodeId)) {\n      toggleExpansion(event, focusedNodeId);\n      return true;\n    }\n\n    const parent = getParent(focusedNodeId);\n\n    if (parent) {\n      focus(event, parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  const handleKeyDown = event => {\n    let flag = false;\n    const key = event.key; // If the tree is empty there will be no focused node\n\n    if (event.altKey || event.currentTarget !== event.target || !focusedNodeId) {\n      return;\n    }\n\n    const ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (!disableSelection && !isDisabled(focusedNodeId)) {\n          if (multiSelect && event.shiftKey) {\n            selectRange(event, {\n              end: focusedNodeId\n            });\n            flag = true;\n          } else if (multiSelect) {\n            flag = selectNode(event, focusedNodeId, true);\n          } else {\n            flag = selectNode(event, focusedNodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (!isDisabled(focusedNodeId)) {\n          if (isExpandable(focusedNodeId)) {\n            toggleExpansion(event);\n            flag = true;\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey && !disableSelection) {\n          selectNextNode(event, focusedNodeId);\n        }\n\n        focusNextNode(event, focusedNodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey && !disableSelection) {\n          selectPreviousNode(event, focusedNodeId);\n        }\n\n        focusPreviousNode(event, focusedNodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (isRtl) {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (isRtl) {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey && !disableSelection && !isDisabled(focusedNodeId)) {\n          rangeSelectToFirst(event, focusedNodeId);\n        }\n\n        focusFirstNode(event);\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey && !disableSelection && !isDisabled(focusedNodeId)) {\n          rangeSelectToLast(event, focusedNodeId);\n        }\n\n        focusLastNode(event);\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, focusedNodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a' && !disableSelection) {\n          selectAllNodes(event);\n          flag = true;\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(event, focusedNodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleFocus = event => {\n    // if the event bubbled (which is React specific) we don't want to steal focus\n    if (event.target === event.currentTarget) {\n      const firstSelected = Array.isArray(selected) ? selected[0] : selected;\n      focus(event, firstSelected || getNavigableChildrenIds(null)[0]);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocusedNodeId(null);\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const activeDescendant = nodeMap.current[focusedNodeId] ? nodeMap.current[focusedNodeId].idAttribute : null;\n  return /*#__PURE__*/_jsx(TreeViewContext.Provider, {\n    value: {\n      icons: {\n        defaultCollapseIcon,\n        defaultExpandIcon,\n        defaultParentIcon,\n        defaultEndIcon\n      },\n      focus,\n      toggleExpansion,\n      isExpanded,\n      isExpandable,\n      isFocused,\n      isSelected,\n      isDisabled,\n      selectNode: disableSelection ? noopSelection : selectNode,\n      selectRange: disableSelection ? noopSelection : selectRange,\n      multiSelect,\n      disabledItemsFocusable,\n      mapFirstChar,\n      unMapFirstChar,\n      registerNode,\n      unregisterNode,\n      treeId\n    },\n    children: /*#__PURE__*/_jsx(DescendantProvider, {\n      children: /*#__PURE__*/_jsx(TreeViewRoot, _extends({\n        role: \"tree\",\n        id: treeId,\n        \"aria-activedescendant\": activeDescendant,\n        \"aria-multiselectable\": multiSelect,\n        className: clsx(classes.root, className),\n        ref: handleRef,\n        tabIndex: 0,\n        onKeyDown: handleKeyDown,\n        onFocus: handleFocus,\n        onBlur: handleBlur,\n        ownerState: ownerState\n      }, other, {\n        children: children\n      }))\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeView.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default icon used to collapse the node.\n   */\n  defaultCollapseIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a end node. This is applied to all\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultEndIcon: PropTypes.node,\n\n  /**\n   * Expanded node ids. (Uncontrolled)\n   * @default []\n   */\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * The default icon used to expand the node.\n   */\n  defaultExpandIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a parent node. This is applied to all\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultParentIcon: PropTypes.node,\n\n  /**\n   * Selected node ids. (Uncontrolled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   * @default []\n   */\n  defaultSelected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true` selection is disabled.\n   * @default false\n   */\n  disableSelection: PropTypes.bool,\n\n  /**\n   * Expanded node ids. (Controlled)\n   */\n  expanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If true `ctrl` and `shift` will trigger multiselect.\n   * @default false\n   */\n  multiSelect: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are focused.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback **Warning**: This is a generic event not a focus event.\n   * @param {string} value of the focused node.\n   */\n  onNodeFocus: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are selected/unselected.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback\n   * @param {string[] | string} nodeIds Ids of the selected nodes. When `multiSelect` is true\n   * this is an array of strings; when false (default) a string.\n   */\n  onNodeSelect: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are expanded/collapsed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {array} nodeIds The ids of the expanded nodes.\n   */\n  onNodeToggle: PropTypes.func,\n\n  /**\n   * Selected node ids. (Controlled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  selected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TreeView;"],"sourceRoot":""}