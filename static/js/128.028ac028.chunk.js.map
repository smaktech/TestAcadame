{"version":3,"sources":["components/map/MapControlPopup.js","components/map/MapControlScale.js","components/map/MapControlMarker.js","components/map/MapControlGeolocate.js","components/map/MapControlFullscreen.js","components/map/MapControlNavigation.js","sections/map/dynamic-styling/ControlPanel.js","sections/map/dynamic-styling/index.js"],"names":["PopupStyle","styled","Popup","theme","isRTL","direction","maxWidth","padding","spacing","boxShadow","customShadows","z20","borderRadius","shape","backgroundColor","palette","grey","width","height","fontSize","opacity","color","common","white","right","left","outline","marginBottom","borderBottomColor","marginLeft","borderLeftColor","marginTop","borderTopColor","marginRight","borderRightColor","MapControlPopup","children","onClose","other","tipSize","anchor","closeButton","closeOnClick","RootStyle","zIndex","position","bottom","z8","border","lineHeight","backgroundImage","MapControlScale","sx","unit","IconStyle","stroke","cursor","fill","error","main","transform","MapControlMarker","onClick","viewBox","d","GeolocateControlStyle","GeolocateControl","overflow","top","MapControlGeolocate","positionOptions","enableHighAccuracy","trackUserLocation","FullscreenControlStyle","FullscreenControl","MapControlFullscreen","NavigationControlStyle","NavigationControl","borderTop","divider","MapControlNavigation","defaultMapStyle","fromJS","MAP_STYLE","CATEGORIES","LAYER_SELECTOR","background","water","parks","buildings","roads","labels","COLOR_CLASS","line","symbol","cssStyles","bgBlur","minWidth","ColorBoxStyle","display","alignItems","justifyContent","WebkitAppearance","ControlPanel","onChange","useTheme","useState","visibility","setVisibility","primary","dark","warning","darker","setColor","useEffect","updateMapStyle","layers","get","filter","layer","id","every","name","test","map","type","category","find","setIn","set","Box","py","value","disabled","e","event","state","target","onColorChange","Typography","variant","flexGrow","textTransform","Switch","size","checked","onVisibilityChange","memo","MapDynamicStyling","mapStyle","setMapStyle","latitude","longitude","zoom","bearing","pitch","viewport","setViewport","onViewportChange"],"mappings":"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","file":"static/js/128.028ac028.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Popup } from 'react-map-gl';\n// @mui\nimport { styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst PopupStyle = styled(Popup)(({ theme }) => {\n  const isRTL = theme.direction === 'rtl';\n\n  return {\n    '& .mapboxgl-popup-content': {\n      maxWidth: 180,\n      padding: theme.spacing(1),\n      boxShadow: theme.customShadows.z20,\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[800],\n    },\n    '& .mapboxgl-popup-close-button': {\n      width: 24,\n      height: 24,\n      fontSize: 16,\n      opacity: 0.48,\n      color: theme.palette.common.white,\n      right: isRTL && '0',\n      left: isRTL && 'auto',\n      '&:hover': {\n        opacity: 1,\n      },\n      '&:focus': {\n        outline: 'none',\n      },\n    },\n    '&.mapboxgl-popup-anchor-top .mapboxgl-popup-tip': {\n      marginBottom: -1,\n      borderBottomColor: theme.palette.grey[800],\n    },\n    '&.mapboxgl-popup-anchor-right .mapboxgl-popup-tip': {\n      marginLeft: -1,\n      borderLeftColor: theme.palette.grey[800],\n    },\n    '&.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip': {\n      marginTop: -1,\n      borderTopColor: theme.palette.grey[800],\n    },\n    '&.mapboxgl-popup-anchor-left .mapboxgl-popup-tip': {\n      marginRight: -1,\n      borderRightColor: theme.palette.grey[800],\n    },\n  };\n});\n\n// ----------------------------------------------------------------------\n\nMapControlPopup.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n};\n\nexport default function MapControlPopup({ children, onClose, ...other }) {\n  return (\n    <PopupStyle tipSize={8} anchor=\"bottom\" onClose={onClose} closeButton closeOnClick={false} {...other}>\n      {children}\n    </PopupStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { ScaleControl } from 'react-map-gl';\n// @mui\nimport { styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  zIndex: 99,\n  position: 'absolute',\n  left: theme.spacing(1.5),\n  bottom: theme.spacing(3.5),\n  boxShadow: theme.customShadows.z8,\n  '& .mapboxgl-ctrl': {\n    border: 'none',\n    borderRadius: 4,\n    lineHeight: '14px',\n    color: theme.palette.common.white,\n    backgroundImage: `linear-gradient(to right, #8a2387, #e94057, #f27121)`,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nMapControlScale.propTypes = {\n  sx: PropTypes.object,\n};\n\nexport default function MapControlScale({ sx, ...other }) {\n  return (\n    <RootStyle sx={sx}>\n      <ScaleControl maxWidth={100} unit=\"imperial\" {...other} />\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Marker } from 'react-map-gl';\n// @mui\nimport { styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\nconst SIZE = 20;\n\nconst IconStyle = styled('svg')(({ theme }) => ({\n  height: SIZE,\n  stroke: 'none',\n  cursor: 'pointer',\n  fill: theme.palette.error.main,\n  transform: `translate(${-SIZE / 2}px,${-SIZE}px)`,\n}));\n\n// ----------------------------------------------------------------------\n\nMapControlMarker.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default function MapControlMarker({ onClick, ...other }) {\n  return (\n    <Marker {...other}>\n      <IconStyle viewBox=\"0 0 24 24\" onClick={onClick}>\n        <path d={ICON} />\n      </IconStyle>\n    </Marker>\n  );\n}\n","import { GeolocateControl } from 'react-map-gl';\n// @mui\nimport { styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst GeolocateControlStyle = styled(GeolocateControl)(({ theme }) => ({\n  zIndex: 99,\n  borderRadius: 8,\n  overflow: 'hidden',\n  top: theme.spacing(6),\n  left: theme.spacing(1.5),\n  boxShadow: theme.customShadows.z8,\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function MapControlGeolocate({ ...other }) {\n  return <GeolocateControlStyle positionOptions={{ enableHighAccuracy: true }} trackUserLocation {...other} />;\n}\n","import { FullscreenControl } from 'react-map-gl';\n// @mui\nimport { styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst FullscreenControlStyle = styled(FullscreenControl)(({ theme }) => ({\n  zIndex: 99,\n  borderRadius: 8,\n  overflow: 'hidden',\n  top: theme.spacing(1.5),\n  left: theme.spacing(1.5),\n  boxShadow: theme.customShadows.z8,\n  '& span.mapboxgl-ctrl-icon': {\n    transform: ' scale(0.75)',\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function MapControlFullscreen({ ...other }) {\n  return <FullscreenControlStyle {...other} />;\n}\n","import { NavigationControl } from 'react-map-gl';\n// @mui\nimport { styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst NavigationControlStyle = styled(NavigationControl)(({ theme }) => ({\n  zIndex: 99,\n  borderRadius: 8,\n  overflow: 'hidden',\n  bottom: theme.spacing(6),\n  left: theme.spacing(1.5),\n  boxShadow: theme.customShadows.z8,\n  '& button+button': {\n    borderTop: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function MapControlNavigation({ ...other }) {\n  return <NavigationControlStyle {...other} />;\n}\n","import { fromJS } from 'immutable';\nimport PropTypes from 'prop-types';\nimport { memo, useEffect, useState } from 'react';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Switch, Typography } from '@mui/material';\n// _mock_\nimport MAP_STYLE from '../../../_mock/map/map-style-basic-v8.json';\n// utils\nimport cssStyles from '../../../utils/cssStyles';\n\n// ----------------------------------------------------------------------\n\nconst defaultMapStyle = fromJS(MAP_STYLE);\n\nconst CATEGORIES = ['labels', 'roads', 'buildings', 'parks', 'water', 'background'];\n\nconst LAYER_SELECTOR = {\n  background: /background/,\n  water: /water/,\n  parks: /park/,\n  buildings: /building/,\n  roads: /bridge|road|tunnel/,\n  labels: /label|place|poi/,\n};\n\nconst COLOR_CLASS = {\n  line: 'line-color',\n  fill: 'fill-color',\n  background: 'background-color',\n  symbol: 'text-color',\n};\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  ...cssStyles().bgBlur({ color: theme.palette.grey[900] }),\n  zIndex: 9,\n  minWidth: 200,\n  position: 'absolute',\n  top: theme.spacing(1),\n  right: theme.spacing(1),\n  padding: theme.spacing(2),\n  borderRadius: theme.shape.borderRadius,\n}));\n\nconst ColorBoxStyle = styled('div')(({ theme }) => ({\n  width: 20,\n  height: 20,\n  display: 'flex',\n  borderRadius: '50%',\n  alignItems: 'center',\n  justifyContent: 'center',\n  marginRight: theme.spacing(1),\n  border: `solid 1px ${theme.palette.grey[500]}`,\n  '& input': {\n    width: 12,\n    height: 12,\n    border: 'none',\n    outline: 'none',\n    cursor: 'pointer',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    '&::-webkit-color-swatch-wrapper': { padding: 0 },\n    '&::-moz-color-swatch': { border: 'none', borderRadius: '50%' },\n    '&::-webkit-color-swatch': { border: 'none', borderRadius: '50%' },\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nControlPanel.propTypes = {\n  onChange: PropTypes.func,\n};\n\nfunction ControlPanel({ onChange }) {\n  const theme = useTheme();\n  const [visibility, setVisibility] = useState({\n    water: true,\n    parks: true,\n    roads: true,\n    labels: true,\n    buildings: true,\n    background: true,\n  });\n  const [color, setColor] = useState({\n    water: theme.palette.grey[900],\n    labels: theme.palette.grey[800],\n    parks: theme.palette.primary.dark,\n    buildings: theme.palette.grey[900],\n    background: theme.palette.grey[700],\n    roads: theme.palette.warning.darker,\n  });\n\n  useEffect(() => {\n    updateMapStyle({ color, visibility });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [color, visibility]);\n\n  const onColorChange = (event, name) => {\n    const state = {\n      ...color,\n      [name]: event.target.value,\n    };\n    setColor(state);\n    updateMapStyle({\n      color: state,\n      visibility,\n    });\n  };\n\n  const onVisibilityChange = (event, name) => {\n    const state = {\n      ...visibility,\n      [name]: event.target.checked,\n    };\n    setVisibility(state);\n    updateMapStyle({\n      color,\n      visibility: state,\n    });\n  };\n\n  const updateMapStyle = ({ color, visibility }) => {\n    const layers = defaultMapStyle\n      .get('layers')\n      .filter((layer) => {\n        const id = layer.get('id');\n        return CATEGORIES.every((name) => visibility[name] || !LAYER_SELECTOR[name].test(id));\n      })\n      .map((layer) => {\n        const id = layer.get('id');\n        const type = layer.get('type');\n        const category = CATEGORIES.find((name) => LAYER_SELECTOR[name].test(id));\n        if (category && COLOR_CLASS[type]) {\n          return layer.setIn(['paint', COLOR_CLASS[type]], color[category]);\n        }\n        return layer;\n      });\n    onChange(defaultMapStyle.set('layers', layers));\n  };\n\n  return (\n    <RootStyle>\n      {CATEGORIES.map((name) => (\n        <Box key={name} sx={{ py: 1, display: 'flex', alignItems: 'center' }}>\n          <ColorBoxStyle sx={{ ...(!visibility[name] && { opacity: 0.48 }) }}>\n            <input\n              type=\"color\"\n              value={color[name]}\n              disabled={!visibility[name]}\n              onChange={(e) => onColorChange(e, name)}\n            />\n          </ColorBoxStyle>\n          <Typography\n            variant=\"body2\"\n            sx={{\n              flexGrow: 1,\n              textTransform: 'capitalize',\n              color: !visibility[name] ? 'text.disabled' : 'common.white',\n            }}\n          >\n            {name}\n          </Typography>\n          <Switch size=\"small\" checked={visibility[name]} onChange={(e) => onVisibilityChange(e, name)} />\n        </Box>\n      ))}\n    </RootStyle>\n  );\n}\n\nexport default memo(ControlPanel);\n","import MapGL from 'react-map-gl';\nimport { useState } from 'react';\n// components\nimport {\n  MapControlScale,\n  MapControlGeolocate,\n  MapControlNavigation,\n  MapControlFullscreen,\n} from '../../../components/map';\n//\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\nexport default function MapDynamicStyling({ ...other }) {\n  const [mapStyle, setMapStyle] = useState('');\n  const [viewport, setViewport] = useState({\n    latitude: 37.805,\n    longitude: -122.447,\n    zoom: 15.5,\n    bearing: 0,\n    pitch: 0,\n  });\n\n  return (\n    <>\n      <MapGL {...viewport} mapStyle={mapStyle} onViewportChange={setViewport} {...other}>\n        <MapControlScale />\n        <MapControlNavigation />\n        <MapControlFullscreen />\n        <MapControlGeolocate />\n      </MapGL>\n\n      <ControlPanel onChange={setMapStyle} />\n    </>\n  );\n}\n"],"sourceRoot":""}