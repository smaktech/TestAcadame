{"version":3,"sources":["../../src/index.ts","sections/auth/register/RegisterForm.js","pages/auth/Register.js"],"names":["capitalCaseTransform","input","toLowerCase","capitalCase","options","delimiter","transform","RegisterForm","register","useAuth","isMountedRef","useIsMountedRef","useSnackbar","enqueueSnackbar","closeSnackbar","useState","showPassword","setShowPassword","RegisterSchema","Yup","shape","firstName","min","max","required","lastName","email","password","formik","useFormik","initialValues","validationSchema","onSubmit","values","a","setErrors","setSubmitting","variant","action","key","size","onClick","Iconify","icon","current","console","error","afterSubmit","message","errors","touched","handleSubmit","isSubmitting","getFieldProps","value","autoComplete","noValidate","Stack","spacing","Alert","severity","direction","xs","sm","TextField","fullWidth","label","Boolean","helperText","type","InputProps","endAdornment","InputAdornment","position","IconButton","edge","prev","LoadingButton","loading","RootStyle","styled","theme","breakpoints","up","display","HeaderStyle","top","zIndex","lineHeight","width","alignItems","padding","justifyContent","SectionStyle","Card","maxWidth","flexDirection","margin","ContentStyle","minHeight","Register","method","smUp","useResponsive","mdUp","Page","title","Logo","Typography","sx","mt","md","Link","component","RouterLink","to","PATH_AUTH","login","px","mb","Image","alt","src","Container","Box","flexGrow","gutterBottom","color","Tooltip","disabledEffect","height","AuthFirebaseSocial","align","underline","href","textAlign"],"mappings":"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","file":"static/js/131.44b1202a.chunk.js","sourcesContent":["import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function capitalCaseTransform(input: string) {\n  return upperCaseFirst(input.toLowerCase());\n}\n\nexport function capitalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: capitalCaseTransform,\n    ...options,\n  });\n}\n","import * as Yup from 'yup';\nimport { useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useFormik, Form, FormikProvider } from 'formik';\n// @mui\nimport { Stack, TextField, IconButton, InputAdornment, Alert } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\n// components\nimport Iconify from '../../../components/Iconify';\nimport { IconButtonAnimate } from '../../../components/animate';\n\n// ----------------------------------------------------------------------\n\nexport default function RegisterForm() {\n  const { register } = useAuth();\n  const isMountedRef = useIsMountedRef();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const RegisterSchema = Yup.object().shape({\n    firstName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('First name required'),\n    lastName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Last name required'),\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\n      try {\n        await register(values.email, values.password, values.firstName, values.lastName);\n        enqueueSnackbar('Register success', {\n          variant: 'success',\n          action: (key) => (\n            <IconButtonAnimate size=\"small\" onClick={() => closeSnackbar(key)}>\n              <Iconify icon={'eva:close-fill'} />\n            </IconButtonAnimate>\n          ),\n        });\n        if (isMountedRef.current) {\n          setSubmitting(false);\n        }\n      } catch (error) {\n        console.error(error);\n        if (isMountedRef.current) {\n          setErrors({ afterSubmit: error.message });\n          setSubmitting(false);\n        }\n      }\n    },\n  });\n\n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          {errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit}</Alert>}\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n            <TextField\n              fullWidth\n              label=\"First name\"\n              {...getFieldProps('firstName')}\n              error={Boolean(touched.firstName && errors.firstName)}\n              helperText={touched.firstName && errors.firstName}\n            />\n\n            <TextField\n              fullWidth\n              label=\"Last name\"\n              {...getFieldProps('lastName')}\n              error={Boolean(touched.lastName && errors.lastName)}\n              helperText={touched.lastName && errors.lastName}\n            />\n          </Stack>\n\n          <TextField\n            fullWidth\n            autoComplete=\"username\"\n            type=\"email\"\n            label=\"Email address\"\n            {...getFieldProps('email')}\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"current-password\"\n            type={showPassword ? 'text' : 'password'}\n            label=\"Password\"\n            {...getFieldProps('password')}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\n                    <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            error={Boolean(touched.password && errors.password)}\n            helperText={touched.password && errors.password}\n          />\n\n          <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n            Register\n          </LoadingButton>\n        </Stack>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import { capitalCase } from 'change-case';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Card, Link, Container, Typography, Tooltip } from '@mui/material';\n// hooks\nimport useAuth from '../../hooks/useAuth';\nimport useResponsive from '../../hooks/useResponsive';\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n// components\nimport Page from '../../components/Page';\nimport Logo from '../../components/Logo';\nimport Image from '../../components/Image';\n// sections\nimport { RegisterForm } from '../../sections/auth/register';\nimport AuthFirebaseSocials from '../../sections/auth/AuthFirebaseSocial';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  [theme.breakpoints.up('md')]: {\n    display: 'flex',\n  },\n}));\n\nconst HeaderStyle = styled('header')(({ theme }) => ({\n  top: 0,\n  zIndex: 9,\n  lineHeight: 0,\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  position: 'absolute',\n  padding: theme.spacing(3),\n  justifyContent: 'space-between',\n  [theme.breakpoints.up('md')]: {\n    alignItems: 'flex-start',\n    padding: theme.spacing(7, 5, 0, 7),\n  },\n}));\n\nconst SectionStyle = styled(Card)(({ theme }) => ({\n  width: '100%',\n  maxWidth: 464,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  margin: theme.spacing(2, 0, 2, 2),\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 480,\n  margin: 'auto',\n  display: 'flex',\n  minHeight: '100vh',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(12, 0),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function Register() {\n  const { method } = useAuth();\n\n  const smUp = useResponsive('up', 'sm');\n  const mdUp = useResponsive('up', 'md');\n\n  return (\n    <Page title=\"Register\">\n      <RootStyle>\n        <HeaderStyle>\n          <Logo />\n          {smUp && (\n            <Typography variant=\"body2\" sx={{ mt: { md: -2 } }}>\n              Already have an account?{' '}\n              <Link variant=\"subtitle2\" component={RouterLink} to={PATH_AUTH.login}>\n                Login\n              </Link>\n            </Typography>\n          )}\n        </HeaderStyle>\n\n        {mdUp && (\n          <SectionStyle>\n            <Typography variant=\"h3\" sx={{ px: 5, mt: 10, mb: 5 }}>\n              Manage the job more effectively with Minimal\n            </Typography>\n            <Image\n              alt=\"register\"\n              src=\"https://minimal-assets-api.vercel.app/assets/illustrations/illustration_register.png\"\n            />\n          </SectionStyle>\n        )}\n\n        <Container>\n          <ContentStyle>\n            <Box sx={{ mb: 5, display: 'flex', alignItems: 'center' }}>\n              <Box sx={{ flexGrow: 1 }}>\n                <Typography variant=\"h4\" gutterBottom>\n                  Get started absolutely free.\n                </Typography>\n                <Typography sx={{ color: 'text.secondary' }}>Free forever. No credit card needed.</Typography>\n              </Box>\n              <Tooltip title={capitalCase(method)}>\n                <>\n                  <Image\n                    disabledEffect\n                    src={`https://minimal-assets-api.vercel.app/assets/icons/auth/ic_${method}.png`}\n                    sx={{ width: 32, height: 32 }}\n                  />\n                </>\n              </Tooltip>\n            </Box>\n\n            {method === 'firebase' && <AuthFirebaseSocials />}\n            <RegisterForm />\n\n            <Typography variant=\"body2\" align=\"center\" sx={{ color: 'text.secondary', mt: 3 }}>\n              By registering, I agree to Minimal&nbsp;\n              <Link underline=\"always\" color=\"text.primary\" href=\"#\">\n                Terms of Service\n              </Link>\n              and\n              <Link underline=\"always\" color=\"text.primary\" href=\"#\">\n                Privacy Policy\n              </Link>\n              .\n            </Typography>\n\n            {!smUp && (\n              <Typography variant=\"body2\" sx={{ mt: 3, textAlign: 'center' }}>\n                Already have an account?{' '}\n                <Link variant=\"subtitle2\" to={PATH_AUTH.login} component={RouterLink}>\n                  Login\n                </Link>\n              </Typography>\n            )}\n          </ContentStyle>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}