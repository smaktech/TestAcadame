{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","pages/overview/Block.js","pages/overview/mui/Snackbar.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","last","name","listDefault","map","link","LinkItem","listActiveLast","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","component","width","height","borderRadius","bgcolor","href","icon","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","Block","title","children","theme","alpha","palette","grey","p","minHeight","Label","style","justifyContent","flexWrap","mx","RootStyle","styled","paddingTop","spacing","paddingBottom","SnackbarComponent","useSnackbar","enqueueSnackbar","closeSnackbar","onSnackbarClose","textTransform","key","size","onClick","onSnackbarAction","anchor","anchorOrigin","alert","pt","pb","mode","PATH_PAGE","components","columns","xs","md","vertical","horizontal"],"mappings":"8RAae,SAASA,EAAT,GAA+D,IAAD,EAAvCC,EAAuC,EAAvCA,MAAuC,IAAhCC,kBAAgC,SAATC,EAAS,iBACrEC,EAAW,UAAGC,eAAKJ,UAAR,aAAG,EAAaK,KAE3BC,EAAcN,EAAMO,KAAI,SAACC,GAAD,OAAU,cAACC,EAAD,CAA0BD,KAAMA,GAAjBA,EAAKH,SAEtDK,EAAiBV,EAAMO,KAAI,SAACC,GAAD,OAC/B,8BACGA,EAAKH,OAASF,EACb,cAACM,EAAD,CAAUD,KAAMA,IAEhB,cAAC,IAAD,CACEG,QAAQ,QACRC,GAAI,CACFC,SAAU,IACVC,SAAU,SACVC,WAAY,SACZC,MAAO,gBACPC,aAAc,YAPlB,SAUGd,KAdGK,EAAKH,SAoBjB,OACE,cAAC,IAAD,yBACEa,UAAW,cAAC,IAAD,CAAKC,UAAU,OAAOP,GAAI,CAAEQ,MAAO,EAAGC,OAAQ,EAAGC,aAAc,MAAOC,QAAS,oBACtFrB,GAFN,aAIGD,EAAaK,EAAcI,KAelC,SAASD,EAAT,GAA6B,IAATD,EAAQ,EAARA,KACVgB,EAAqBhB,EAArBgB,KAAMnB,EAAeG,EAAfH,KAAMoB,EAASjB,EAATiB,KACpB,OACE,eAAC,IAAD,CAEEd,QAAQ,QACRQ,UAAWO,IACXC,GAAIH,GAAQ,IACZZ,GAAI,CACFgB,WAAY,EACZC,QAAS,OACTC,WAAY,SACZd,MAAO,eACP,UAAW,CAAEa,QAAS,YAV1B,UAaGJ,GAAQ,cAAC,IAAD,CAAKb,GAAI,CAAEmB,GAAI,EAAG,QAAS,CAAEX,MAAO,GAAIC,OAAQ,KAAhD,SAAyDI,IACjEpB,IAbIA,K,4LC9CI,SAAS2B,EAAT,GAA2F,IAA9DhC,EAA6D,EAA7DA,MAAOiC,EAAsD,EAAtDA,OAAQC,EAA8C,EAA9CA,QAA8C,IAArCC,gBAAqC,MAApB,GAAoB,EAAhBvB,EAAgB,EAAhBA,GAAOV,EAAS,iBACvG,OACE,eAAC,IAAD,CAAKU,GAAE,aAAIwB,GAAI,GAAMxB,GAArB,UACE,eAAC,IAAD,CAAKA,GAAI,CAAEiB,QAAS,OAAQC,WAAY,UAAxC,UACE,eAAC,IAAD,CAAKlB,GAAI,CAAEyB,SAAU,GAArB,UACE,cAAC,IAAD,CAAY1B,QAAQ,KAAK2B,cAAY,EAArC,SACGJ,IAEH,cAAC,IAAD,aAAalC,MAAOA,GAAWE,OAGhC+B,GAAU,cAAC,IAAD,CAAKrB,GAAI,CAAE2B,WAAY,GAAvB,SAA6BN,OAG1C,cAAC,IAAD,CAAKrB,GAAI,CAAE4B,GAAI,GAAf,SACGC,mBAASN,GACR,cAAC,IAAD,CAAMX,KAAMW,EAAUO,OAAO,SAASC,IAAI,WAAWhC,QAAQ,QAA7D,SACGwB,IAGHA,EAAS5B,KAAI,SAACiB,GAAD,OACX,cAAC,IAAD,CACEoB,QAAM,EAENpB,KAAMA,EACNb,QAAQ,QACR+B,OAAO,SACPC,IAAI,WACJ/B,GAAI,CAAEiB,QAAS,SAPjB,SASGL,GAPIA,a,sKC3BZ,SAASqB,EAAT,GAAyC,IAAxBC,EAAuB,EAAvBA,MAAOlC,EAAgB,EAAhBA,GAAImC,EAAY,EAAZA,SACjC,OACE,eAAC,IAAD,CACEpC,QAAQ,WACRC,GAAI,CACFU,aAAc,IACdC,QAAS,SAACyB,GAAD,OAAWC,YAAMD,EAAME,QAAQC,KAAK,KAAM,OAJvD,UAOGL,GAAS,cAAC,IAAD,CAAYA,MAAOA,IAC7B,cAAC,IAAD,CACElC,GAAE,aACAwC,EAAG,EACHC,UAAW,KACRzC,GAJP,SAOGmC,OAYF,SAASO,EAAT,GAA2B,IAAVR,EAAS,EAATA,MACtB,OACE,cAAC,IAAD,CAAYnC,QAAQ,WAAWQ,UAAU,IAAImB,cAAY,EAAC1B,GAAI,CAAEI,MAAO,kBAAvE,SACG8B,M,kCC7CP,iLAgBMS,EAAQ,CACZ1B,QAAS,OACTC,WAAY,SACZ0B,eAAgB,SAChBC,SAAU,OACV,QAAS,CAAEC,GAAI,mBAGXC,EAAYC,YAAO,MAAPA,EAAc,gBAAGZ,EAAH,EAAGA,MAAH,MAAgB,CAC9Ca,WAAYb,EAAMc,QAAQ,IAC1BC,cAAef,EAAMc,QAAQ,QAKhB,SAASE,IACtB,MAA2CC,cAAnCC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,cAEnBC,EAAkB,SAACpD,GACvBkD,EACE,gCACE,cAAC,IAAD,CAAYvD,QAAQ,YAAYC,GAAI,CAAEyD,cAAe,cAArD,SACGrD,IAEH,eAAC,IAAD,CAAYL,QAAQ,QAAQC,GAAI,CAAEI,MAAO,kBAAzC,wBACcA,QAGhB,CACEL,QAASK,EACTiB,OAAQ,SAACqC,GAAD,OACN,cAAC,IAAD,CAAYC,KAAK,QAAQvD,MAAM,UAAUwD,QAAS,kBAAML,EAAcG,IAAtE,SACE,cAAC,IAAD,CAAS7C,KAAM,iBAAkBL,MAAO,GAAIC,OAAQ,WAOxDoD,EAAmB,SAACzD,EAAO0D,GAC/BR,EAAgB,cAAD,OAAelD,GAAS,CACrCL,QAASK,EACT2D,aAAcD,EACdzC,OAAQ,SAACqC,GAAD,OACN,qCACE,cAAC,IAAD,CACEC,KAAK,QACLvD,MAAiB,YAAVA,EAAsBA,EAAQ,UACrCwD,QAAS,WACPI,MAAM,iCAAD,OAAkCN,KAJ3C,mBASA,cAAC,IAAD,CAAQC,KAAK,QAAQvD,MAAM,UAAUwD,QAAS,kBAAML,EAAcG,IAAlE,4BAQR,OACE,cAAC,IAAD,CAAMxB,MAAM,uBAAZ,SACE,eAACa,EAAD,WACE,cAAC,IAAD,CACE/C,GAAI,CACFiE,GAAI,EACJC,GAAI,EACJ1C,GAAI,GACJb,QAAS,SAACyB,GAAD,MAAmC,UAAvBA,EAAME,QAAQ6B,KAAmB,WAAa,aALvE,SAQE,cAAC,IAAD,UACE,cAAC,IAAD,CACE7C,QAAQ,WACRlC,MAAO,CAAC,CAAEK,KAAM,aAAcmB,KAAMwD,IAAUC,YAAc,CAAE5E,KAAM,aACpE8B,SAAU,CAAC,uCAAwC,iDAKzD,cAAC,IAAD,UACE,eAAC,IAAD,CAAS+C,QAAS,CAAEC,GAAI,EAAGC,GAAI,GAAKtB,QAAS,EAA7C,UACE,eAAC,IAAD,CAAOhB,MAAM,SAASlC,GAAI2C,EAA1B,UACE,cAAC,IAAD,CAAQ5C,QAAQ,YAAYK,MAAM,UAAUwD,QAAS,kBAAMN,EAAgB,uBAA3E,qBAGA,cAAC,IAAD,CACEvD,QAAQ,YACRK,MAAM,OACNwD,QAAS,kBAAMN,EAAgB,kBAAmB,CAAEvD,QAAS,UAH/D,kBAOA,cAAC,IAAD,CACEA,QAAQ,YACRK,MAAM,UACNwD,QAAS,kBACPN,EAAgB,qBAAsB,CACpCvD,QAAS,aALf,qBAWA,cAAC,IAAD,CACEA,QAAQ,YACRK,MAAM,UACNwD,QAAS,kBACPN,EAAgB,qBAAsB,CACpCvD,QAAS,aALf,qBAWA,cAAC,IAAD,CACEA,QAAQ,YACRK,MAAM,QACNwD,QAAS,kBAAMN,EAAgB,mBAAoB,CAAEvD,QAAS,WAHhE,sBASF,eAAC,IAAD,CAAOmC,MAAM,aAAalC,GAAI2C,EAA9B,UACE,cAAC,IAAD,CAAQ5C,QAAQ,YAAYK,MAAM,UAAUwD,QAAS,kBAAMJ,EAAgB,YAA3E,qBAGA,cAAC,IAAD,CAAQzD,QAAQ,YAAYK,MAAM,OAAOwD,QAAS,kBAAMJ,EAAgB,SAAxE,kBAGA,cAAC,IAAD,CAAQzD,QAAQ,YAAYK,MAAM,UAAUwD,QAAS,kBAAMJ,EAAgB,YAA3E,qBAGA,cAAC,IAAD,CAAQzD,QAAQ,YAAYK,MAAM,UAAUwD,QAAS,kBAAMJ,EAAgB,YAA3E,qBAGA,cAAC,IAAD,CAAQzD,QAAQ,YAAYK,MAAM,QAAQwD,QAAS,kBAAMJ,EAAgB,UAAzE,sBAKF,eAAC,IAAD,CAAOtB,MAAM,cAAclC,GAAI2C,EAA/B,UACE,cAAC,IAAD,CAAQ5C,QAAQ,YAAYK,MAAM,UAAUwD,QAAS,kBAAMC,EAAiB,YAA5E,qBAGA,cAAC,IAAD,CAAQ9D,QAAQ,YAAYK,MAAM,OAAOwD,QAAS,kBAAMC,EAAiB,SAAzE,kBAGA,cAAC,IAAD,CAAQ9D,QAAQ,YAAYK,MAAM,UAAUwD,QAAS,kBAAMC,EAAiB,YAA5E,qBAGA,cAAC,IAAD,CAAQ9D,QAAQ,YAAYK,MAAM,UAAUwD,QAAS,kBAAMC,EAAiB,YAA5E,qBAGA,cAAC,IAAD,CAAQ9D,QAAQ,YAAYK,MAAM,QAAQwD,QAAS,kBAAMC,EAAiB,UAA1E,sBAKF,eAAC,IAAD,CAAO3B,MAAM,eAAelC,GAAI2C,EAAhC,UACE,cAAC,IAAD,CACE5C,QAAQ,OACRK,MAAM,UACNwD,QAAS,kBACPC,EAAiB,UAAW,CAC1BY,SAAU,MACVC,WAAY,UANlB,sBAYA,cAAC,IAAD,CACE3E,QAAQ,OACRK,MAAM,UACNwD,QAAS,kBACPC,EAAiB,UAAW,CAC1BY,SAAU,MACVC,WAAY,YANlB,wBAYA,cAAC,IAAD,CAAQ3E,QAAQ,OAAOK,MAAM,UAAUwD,QAAS,kBAAMC,EAAiB,YAAvE,uBAGA,cAAC,IAAD,CACE9D,QAAQ,OACRK,MAAM,UACNwD,QAAS,kBACPC,EAAiB,UAAW,CAC1BY,SAAU,SACVC,WAAY,UANlB,yBAYA,cAAC,IAAD,CACE3E,QAAQ,OACRK,MAAM,UACNwD,QAAS,kBACPC,EAAiB,UAAW,CAC1BY,SAAU,SACVC,WAAY,YANlB,2BAYA,cAAC,IAAD,CACE3E,QAAQ,OACRK,MAAM,UACNwD,QAAS,kBACPC,EAAiB,UAAW,CAC1BY,SAAU,SACVC,WAAY,WANlB","file":"static/js/97.dde697ca.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { last } from 'lodash';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = last(links)?.name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Paper, CardHeader, Box, Typography } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBlock.propTypes = {\n  children: PropTypes.any.isRequired,\n  sx: PropTypes.object,\n  title: PropTypes.string,\n};\n\nexport function Block({ title, sx, children }) {\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        borderRadius: 1.5,\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\n      }}\n    >\n      {title && <CardHeader title={title} />}\n      <Box\n        sx={{\n          p: 5,\n          minHeight: 180,\n          ...sx,\n        }}\n      >\n        {children}\n      </Box>\n    </Paper>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLabel.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport function Label({ title }) {\n  return (\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\n      {title}\n    </Typography>\n  );\n}\n","import { useSnackbar } from 'notistack';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Button, Container, Typography, IconButton } from '@mui/material';\nimport { Masonry } from '@mui/lab';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport Page from '../../../components/Page';\nimport Iconify from '../../../components/Iconify';\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\n//\nimport { Block } from '../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { mx: '8px !important' },\n};\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function SnackbarComponent() {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const onSnackbarClose = (color) => {\n    enqueueSnackbar(\n      <div>\n        <Typography variant=\"subtitle2\" sx={{ textTransform: 'capitalize' }}>\n          {color}\n        </Typography>\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          This is an {color}\n        </Typography>\n      </div>,\n      {\n        variant: color,\n        action: (key) => (\n          <IconButton size=\"small\" color=\"inherit\" onClick={() => closeSnackbar(key)}>\n            <Iconify icon={'eva:close-fill'} width={24} height={24} />\n          </IconButton>\n        ),\n      }\n    );\n  };\n\n  const onSnackbarAction = (color, anchor) => {\n    enqueueSnackbar(`This is an ${color}`, {\n      variant: color,\n      anchorOrigin: anchor,\n      action: (key) => (\n        <>\n          <Button\n            size=\"small\"\n            color={color !== 'default' ? color : 'primary'}\n            onClick={() => {\n              alert(`I belong to snackbar with key ${key}`);\n            }}\n          >\n            Alert\n          </Button>\n          <Button size=\"small\" color=\"inherit\" onClick={() => closeSnackbar(key)}>\n            Dismiss\n          </Button>\n        </>\n      ),\n    });\n  };\n\n  return (\n    <Page title=\"Components: Snackbar\">\n      <RootStyle>\n        <Box\n          sx={{\n            pt: 6,\n            pb: 1,\n            mb: 10,\n            bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n          }}\n        >\n          <Container>\n            <HeaderBreadcrumbs\n              heading=\"Snackbar\"\n              links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Snackbar' }]}\n              moreLink={['https://mui.com/components/snackbars', 'https://www.iamhosseindhv.com/notistack']}\n            />\n          </Container>\n        </Box>\n\n        <Container>\n          <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n            <Block title=\"Simple\" sx={style}>\n              <Button variant=\"contained\" color=\"inherit\" onClick={() => enqueueSnackbar('This is an default')}>\n                Default\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"info\"\n                onClick={() => enqueueSnackbar('This is an info', { variant: 'info' })}\n              >\n                Info\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                onClick={() =>\n                  enqueueSnackbar('This is an success', {\n                    variant: 'success',\n                  })\n                }\n              >\n                Success\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"warning\"\n                onClick={() =>\n                  enqueueSnackbar('This is an warning', {\n                    variant: 'warning',\n                  })\n                }\n              >\n                Warning\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"error\"\n                onClick={() => enqueueSnackbar('This is an error', { variant: 'error' })}\n              >\n                Error\n              </Button>\n            </Block>\n\n            <Block title=\"With Close\" sx={style}>\n              <Button variant=\"contained\" color=\"inherit\" onClick={() => onSnackbarClose('default')}>\n                Default\n              </Button>\n              <Button variant=\"contained\" color=\"info\" onClick={() => onSnackbarClose('info')}>\n                Info\n              </Button>\n              <Button variant=\"contained\" color=\"success\" onClick={() => onSnackbarClose('success')}>\n                Success\n              </Button>\n              <Button variant=\"contained\" color=\"warning\" onClick={() => onSnackbarClose('warning')}>\n                Warning\n              </Button>\n              <Button variant=\"contained\" color=\"error\" onClick={() => onSnackbarClose('error')}>\n                Error\n              </Button>\n            </Block>\n\n            <Block title=\"With Action\" sx={style}>\n              <Button variant=\"contained\" color=\"inherit\" onClick={() => onSnackbarAction('default')}>\n                Default\n              </Button>\n              <Button variant=\"contained\" color=\"info\" onClick={() => onSnackbarAction('info')}>\n                Info\n              </Button>\n              <Button variant=\"contained\" color=\"success\" onClick={() => onSnackbarAction('success')}>\n                Success\n              </Button>\n              <Button variant=\"contained\" color=\"warning\" onClick={() => onSnackbarAction('warning')}>\n                Warning\n              </Button>\n              <Button variant=\"contained\" color=\"error\" onClick={() => onSnackbarAction('error')}>\n                Error\n              </Button>\n            </Block>\n\n            <Block title=\"anchorOrigin\" sx={style}>\n              <Button\n                variant=\"text\"\n                color=\"inherit\"\n                onClick={() =>\n                  onSnackbarAction('default', {\n                    vertical: 'top',\n                    horizontal: 'left',\n                  })\n                }\n              >\n                Top Left\n              </Button>\n              <Button\n                variant=\"text\"\n                color=\"inherit\"\n                onClick={() =>\n                  onSnackbarAction('default', {\n                    vertical: 'top',\n                    horizontal: 'center',\n                  })\n                }\n              >\n                Top Center\n              </Button>\n              <Button variant=\"text\" color=\"inherit\" onClick={() => onSnackbarAction('default')}>\n                Top Right\n              </Button>\n              <Button\n                variant=\"text\"\n                color=\"inherit\"\n                onClick={() =>\n                  onSnackbarAction('default', {\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                  })\n                }\n              >\n                Bottom Left\n              </Button>\n              <Button\n                variant=\"text\"\n                color=\"inherit\"\n                onClick={() =>\n                  onSnackbarAction('default', {\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                  })\n                }\n              >\n                Bottom Center\n              </Button>\n              <Button\n                variant=\"text\"\n                color=\"inherit\"\n                onClick={() =>\n                  onSnackbarAction('default', {\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                  })\n                }\n              >\n                Bottom Right\n              </Button>\n            </Block>\n          </Masonry>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}