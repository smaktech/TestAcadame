{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","pages/overview/Block.js","pages/overview/mui/Lists.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","last","name","listDefault","map","link","LinkItem","listActiveLast","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","component","width","height","borderRadius","bgcolor","href","icon","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","Block","title","children","theme","alpha","palette","grey","p","minHeight","Label","RootStyle","styled","paddingTop","spacing","paddingBottom","ListWrapperStyle","Paper","border","divider","ListItemLink","props","ListsComponent","useState","open","setOpen","selectedIndex","setSelectedIndex","checked","setChecked","toggle","setToggle","handleListItemClick","event","index","handleCheck","value","currentIndex","indexOf","newChecked","push","splice","handleToggle","pt","pb","mode","PATH_PAGE","components","columns","xs","md","primary","subheader","id","onClick","in","timeout","unmountOnExit","disablePadding","secondary","selected","labelId","role","undefined","dense","edge","tabIndex","disableRipple","inputProps","onChange"],"mappings":"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","file":"static/js/92.80506f95.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { last } from 'lodash';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = last(links)?.name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Paper, CardHeader, Box, Typography } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBlock.propTypes = {\n  children: PropTypes.any.isRequired,\n  sx: PropTypes.object,\n  title: PropTypes.string,\n};\n\nexport function Block({ title, sx, children }) {\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        borderRadius: 1.5,\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\n      }}\n    >\n      {title && <CardHeader title={title} />}\n      <Box\n        sx={{\n          p: 5,\n          minHeight: 180,\n          ...sx,\n        }}\n      >\n        {children}\n      </Box>\n    </Paper>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLabel.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport function Label({ title }) {\n  return (\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\n      {title}\n    </Typography>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport {\n  Box,\n  List,\n  Paper,\n  Avatar,\n  Switch,\n  Divider,\n  Collapse,\n  Checkbox,\n  Container,\n  IconButton,\n  ListItemText,\n  ListItemIcon,\n  ListSubheader,\n  ListItemButton,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n} from '@mui/material';\nimport { Masonry } from '@mui/lab';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport Page from '../../../components/Page';\nimport Iconify from '../../../components/Iconify';\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\n//\nimport { Block } from '../Block';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15),\n}));\n\nconst ListWrapperStyle = styled(Paper)(({ theme }) => ({\n  width: '100%',\n  border: `solid 1px ${theme.palette.divider}`,\n}));\n\n// ----------------------------------------------------------------------\n\nfunction ListItemLink(props) {\n  return <ListItemButton component=\"a\" {...props} />;\n}\n\nexport default function ListsComponent() {\n  const [open, setOpen] = useState(true);\n  const [selectedIndex, setSelectedIndex] = useState(1);\n  const [checked, setChecked] = useState([0]);\n  const [toggle, setToggle] = useState(['wifi']);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  const handleCheck = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n\n  const handleToggle = (value) => () => {\n    const currentIndex = toggle.indexOf(value);\n    const newChecked = [...toggle];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setToggle(newChecked);\n  };\n\n  return (\n    <Page title=\"Components: Lists\">\n      <RootStyle>\n        <Box\n          sx={{\n            pt: 6,\n            pb: 1,\n            mb: 10,\n            bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n          }}\n        >\n          <Container>\n            <HeaderBreadcrumbs\n              heading=\"Lists\"\n              links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Lists' }]}\n              moreLink=\"https://mui.com/components/lists\"\n            />\n          </Container>\n        </Box>\n\n        <Container>\n          <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n            <Block title=\"Simple\">\n              <ListWrapperStyle>\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\n                  <ListItemButton>\n                    <ListItemIcon>\n                      <Iconify icon=\"ic:baseline-inbox\" width={24} height={24} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Inbox\" />\n                  </ListItemButton>\n                  <ListItemButton>\n                    <ListItemIcon>\n                      <Iconify icon=\"ic:round-drafts\" width={24} height={24} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Drafts\" />\n                  </ListItemButton>\n                </List>\n\n                <Divider />\n\n                <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n                  <ListItemButton>\n                    <ListItemText primary=\"Trash\" />\n                  </ListItemButton>\n                  <ListItemLink href=\"#simple-list\">\n                    <ListItemText primary=\"Spam\" />\n                  </ListItemLink>\n                </List>\n              </ListWrapperStyle>\n            </Block>\n\n            <Block title=\"Nested\">\n              <ListWrapperStyle>\n                <List\n                  component=\"nav\"\n                  aria-labelledby=\"nested-list-subheader\"\n                  subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                      Nested List Items\n                    </ListSubheader>\n                  }\n                >\n                  <ListItemButton>\n                    <ListItemIcon>\n                      <Iconify icon=\"ic:round-send\" width={24} height={24} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Sent mail\" />\n                  </ListItemButton>\n                  <ListItemButton>\n                    <ListItemIcon>\n                      <Iconify icon=\"ic:round-drafts\" width={24} height={24} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Drafts\" />\n                  </ListItemButton>\n                  <ListItemButton onClick={handleClick}>\n                    <ListItemIcon>\n                      <Iconify icon=\"ic:baseline-inbox\" width={24} height={24} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Inbox\" />\n                    {open ? (\n                      <Iconify icon=\"ic:round-expand-less\" width={24} height={24} />\n                    ) : (\n                      <Iconify icon=\"ic:round-expand-more\" width={24} height={24} />\n                    )}\n                  </ListItemButton>\n                  <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                      <ListItemButton>\n                        <ListItemIcon>\n                          <Iconify icon=\"ic:round-star-border\" width={24} height={24} />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Starred\" />\n                      </ListItemButton>\n                    </List>\n                  </Collapse>\n                </List>\n              </ListWrapperStyle>\n            </Block>\n\n            <Block title=\"Folder\">\n              <ListWrapperStyle>\n                <List>\n                  <ListItemButton>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <Iconify icon=\"ic:baseline-image\" width={24} height={24} />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Photos\" secondary=\"Jan 9, 2014\" />\n                  </ListItemButton>\n                  <ListItemButton>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <Iconify icon=\"ic:baseline-work\" width={24} height={24} />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Work\" secondary=\"Jan 7, 2014\" />\n                  </ListItemButton>\n                  <ListItemButton>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <Iconify icon=\"ic:round-beach-access\" width={24} height={24} />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Vacation\" secondary=\"July 20, 2014\" />\n                  </ListItemButton>\n                </List>\n              </ListWrapperStyle>\n            </Block>\n\n            <Block title=\"Selected\">\n              <ListWrapperStyle>\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\n                  <ListItemButton selected={selectedIndex === 0} onClick={(event) => handleListItemClick(event, 0)}>\n                    <ListItemIcon>\n                      <Iconify icon=\"ic:baseline-inbox\" width={24} height={24} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Inbox\" />\n                  </ListItemButton>\n                  <ListItemButton selected={selectedIndex === 1} onClick={(event) => handleListItemClick(event, 1)}>\n                    <ListItemIcon>\n                      <Iconify icon=\"ic:round-drafts\" width={24} height={24} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Drafts\" />\n                  </ListItemButton>\n                </List>\n\n                <Divider />\n\n                <List component=\"nav\" aria-label=\"secondary mailbox folder\">\n                  <ListItemButton selected={selectedIndex === 2} onClick={(event) => handleListItemClick(event, 2)}>\n                    <ListItemText primary=\"Trash\" />\n                  </ListItemButton>\n                  <ListItemButton selected={selectedIndex === 3} onClick={(event) => handleListItemClick(event, 3)}>\n                    <ListItemText primary=\"Spam\" />\n                  </ListItemButton>\n                </List>\n              </ListWrapperStyle>\n            </Block>\n\n            <Block title=\"Controls\">\n              <ListWrapperStyle>\n                <List>\n                  {[0, 1, 2, 3].map((value) => {\n                    const labelId = `checkbox-list-label-${value}`;\n                    return (\n                      <ListItemButton key={value} role={undefined} dense onClick={handleCheck(value)}>\n                        <ListItemIcon>\n                          <Checkbox\n                            edge=\"start\"\n                            checked={checked.indexOf(value) !== -1}\n                            tabIndex={-1}\n                            disableRipple\n                            inputProps={{ 'aria-labelledby': labelId }}\n                          />\n                        </ListItemIcon>\n                        <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\n                        <ListItemSecondaryAction>\n                          <IconButton edge=\"end\">\n                            <Iconify icon=\"ic:round-mode-comment\" width={24} height={24} />\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItemButton>\n                    );\n                  })}\n                </List>\n              </ListWrapperStyle>\n            </Block>\n\n            <Block title=\"Switch\">\n              <ListWrapperStyle>\n                <List subheader={<ListSubheader>Settings</ListSubheader>}>\n                  <ListItemButton>\n                    <ListItemIcon>\n                      <Iconify icon=\"ic:baseline-wifi\" width={24} height={24} />\n                    </ListItemIcon>\n                    <ListItemText id=\"switch-list-label-wifi\" primary=\"Wi-Fi\" />\n                    <ListItemSecondaryAction>\n                      <Switch\n                        edge=\"end\"\n                        onChange={handleToggle('wifi')}\n                        checked={toggle.indexOf('wifi') !== -1}\n                        inputProps={{\n                          'aria-labelledby': 'switch-list-label-wifi',\n                        }}\n                      />\n                    </ListItemSecondaryAction>\n                  </ListItemButton>\n                  <ListItemButton>\n                    <ListItemIcon>\n                      <Iconify icon=\"ic:baseline-bluetooth\" width={24} height={24} />\n                    </ListItemIcon>\n                    <ListItemText id=\"switch-list-label-bluetooth\" primary=\"Bluetooth\" />\n                    <ListItemSecondaryAction>\n                      <Switch\n                        edge=\"end\"\n                        onChange={handleToggle('bluetooth')}\n                        checked={toggle.indexOf('bluetooth') !== -1}\n                        inputProps={{\n                          'aria-labelledby': 'switch-list-label-bluetooth',\n                        }}\n                      />\n                    </ListItemSecondaryAction>\n                  </ListItemButton>\n                </List>\n              </ListWrapperStyle>\n            </Block>\n          </Masonry>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}