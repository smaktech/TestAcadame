{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","utils/formatNumber.js","pages/overview/mui/data-grid/DataGridBasic.js","pages/overview/mui/data-grid/DataGridCustom.js","pages/overview/mui/data-grid/index.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","last","name","listDefault","map","link","LinkItem","listActiveLast","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","component","width","height","borderRadius","bgcolor","href","icon","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","fCurrency","number","numeral","format","Number","isInteger","fPercent","fNumber","fShortenNumber","replace","fData","columns","field","headerName","editable","type","align","headerAlign","description","flex","valueGetter","params","getValue","id","sortable","disableColumnMenu","renderCell","IconButton","Iconify","DataGridBasic","rows","_dataGrid","checkboxSelection","disableSelectionOnClick","hide","filterable","getAvatar","Avatar","createAvatar","getEmail","Typography","textDecoration","getRating","Rating","size","value","precision","readOnly","valueOptions","getStatus","isLight","useTheme","palette","mode","Label","textTransform","mx","RenderStatus","getAdmin","Stack","textAlign","direction","px","LinearProgress","selectedID","row","onClick","console","log","RatingInputValue","item","applyValue","Box","p","placeholder","onChange","event","newValue","DataGridCustom","useState","selectionModel","setSelectionModel","length","ratingColumn","find","column","ratingColIndex","findIndex","col","ratingFilterOperators","getGridNumericColumnOperators","operator","InputComponent","filterOperators","selected","filter","includes","pagination","onSelectionModelChange","newSelectionModel","components","Toolbar","GridToolbar","RootStyle","styled","theme","paddingTop","spacing","paddingBottom","DataGridComponent","Page","title","pt","pb","Container","PATH_PAGE","Card","CardHeader"],"mappings":"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","file":"static/js/111.ea9ca920.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { last } from 'lodash';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = last(links)?.name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\n}\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","// @mui\nimport { DataGrid } from '@mui/x-data-grid';\nimport { IconButton } from '@mui/material';\n// _mock_\nimport { _dataGrid } from '../../../../_mock';\n// components\nimport Iconify from '../../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nconst columns = [\n  {\n    field: 'id',\n    headerName: 'ID',\n    width: 120,\n  },\n  {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 160,\n    editable: true,\n  },\n  {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 160,\n    editable: true,\n  },\n  {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 120,\n    editable: true,\n    align: 'center',\n    headerAlign: 'center',\n  },\n  {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    flex: 1,\n    valueGetter: (params) =>\n      `${params.getValue(params.id, 'firstName') || ''} ${params.getValue(params.id, 'lastName') || ''}`,\n  },\n  {\n    field: 'action',\n    headerName: ' ',\n    width: 80,\n    align: 'right',\n    sortable: false,\n    disableColumnMenu: true,\n    renderCell: () => (\n      <IconButton>\n        <Iconify icon={'eva:more-vertical-fill'} sx={{ width: 20, height: 20 }} />\n      </IconButton>\n    ),\n  },\n];\n\nexport default function DataGridBasic() {\n  return <DataGrid columns={columns} rows={_dataGrid} checkboxSelection disableSelectionOnClick />;\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport { Stack, Typography, Box, Rating, LinearProgress, IconButton } from '@mui/material';\nimport { DataGrid, GridToolbar, getGridNumericColumnOperators } from '@mui/x-data-grid';\n// utils\nimport createAvatar from '../../../../utils/createAvatar';\nimport { fPercent } from '../../../../utils/formatNumber';\n// _mock_\nimport { _dataGrid } from '../../../../_mock';\n// components\nimport Label from '../../../../components/Label';\nimport Avatar from '../../../../components/Avatar';\nimport Iconify from '../../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nfunction RenderStatus(getStatus) {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n  return (\n    <Label\n      variant={isLight ? 'ghost' : 'filled'}\n      color={(getStatus === 'busy' && 'error') || (getStatus === 'away' && 'warning') || 'success'}\n      sx={{ textTransform: 'capitalize', mx: 'auto' }}\n    >\n      {getStatus}\n    </Label>\n  );\n}\n\nconst columns = [\n  // OPTIONS\n  // https://material-ui.com/api/data-grid/grid-col-def/#main-content\n  // - hide: false (default)\n  // - editable: false (default)\n  // - filterable: true (default)\n  // - sortable: true (default)\n  // - disableColumnMenu: false (default)\n\n  // FIELD TYPES\n  // --------------------\n  // 'string' (default)\n  // 'number'\n  // 'date'\n  // 'dateTime'\n  // 'boolean'\n  // 'singleSelect'\n\n  {\n    field: 'id',\n    hide: true,\n  },\n  {\n    field: 'avatar',\n    headerName: 'Avatar',\n    width: 64,\n    sortable: false,\n    filterable: false,\n    disableColumnMenu: true,\n    align: 'center',\n    renderCell: (params) => {\n      const getAvatar = params.getValue(params.id, 'name');\n      return (\n        <Avatar color={createAvatar(getAvatar).color} sx={{ width: 36, height: 36 }}>\n          {createAvatar(getAvatar).name}\n        </Avatar>\n      );\n    },\n  },\n  {\n    field: 'name',\n    headerName: 'Name',\n    flex: 1,\n    editable: true,\n  },\n  {\n    field: 'email',\n    headerName: 'Email',\n    flex: 1,\n    editable: true,\n    renderCell: (params) => {\n      const getEmail = params.getValue(params.id, 'email');\n      return (\n        <Typography variant=\"body2\" sx={{ textDecoration: 'underline' }} noWrap>\n          {getEmail}\n        </Typography>\n      );\n    },\n  },\n  {\n    field: 'lastLogin',\n    type: 'dateTime',\n    headerName: 'Last login',\n    width: 200,\n    align: 'right',\n    headerAlign: 'right',\n  },\n  {\n    field: 'rating',\n    type: 'number',\n    headerName: 'Rating',\n    width: 160,\n    disableColumnMenu: true,\n    renderCell: (params) => {\n      const getRating = params.getValue(params.id, 'rating');\n      return <Rating size=\"small\" value={getRating} precision={0.5} readOnly />;\n    },\n  },\n  {\n    field: 'status',\n    type: 'singleSelect',\n    headerName: 'Status',\n    width: 120,\n    valueOptions: ['online', 'away', 'busy'],\n    renderCell: (params) => {\n      const getStatus = params.getValue(params.id, 'status');\n      return RenderStatus(getStatus);\n    },\n  },\n  {\n    field: 'isAdmin',\n    type: 'boolean',\n    width: 120,\n    renderCell: (params) => {\n      const getAdmin = params.getValue(params.id, 'isAdmin');\n      return (\n        <Stack alignItems=\"center\" sx={{ width: 1, textAlign: 'center' }}>\n          {getAdmin ? (\n            <Iconify icon={'eva:checkmark-circle-2-fill'} sx={{ width: 20, height: 20, color: 'primary.main' }} />\n          ) : (\n            '-'\n          )}\n        </Stack>\n      );\n    },\n  },\n  {\n    field: 'performance',\n    type: 'number',\n    headerName: 'Performance',\n    width: 160,\n    renderCell: (params) => {\n      const value = params.getValue(params.id, 'performance');\n      return (\n        <Stack direction=\"row\" alignItems=\"center\" sx={{ px: 2, width: 1, height: 1 }}>\n          <LinearProgress\n            value={value}\n            variant=\"determinate\"\n            color={(value < 30 && 'error') || (value > 30 && value < 70 && 'warning') || 'primary'}\n            sx={{ width: 1, height: 6 }}\n          />\n          <Typography variant=\"caption\" sx={{ width: 90 }}>\n            {fPercent(value)}\n          </Typography>\n        </Stack>\n      );\n    },\n  },\n  {\n    field: 'action',\n    headerName: ' ',\n    width: 80,\n    align: 'right',\n    sortable: false,\n    filterable: false,\n    disableColumnMenu: true,\n    renderCell: (params) => {\n      const selectedID = params.row.id;\n\n      const handleClick = () => {\n        console.log('selectedID', selectedID);\n      };\n\n      return (\n        <IconButton onClick={handleClick}>\n          <Iconify icon={'eva:more-vertical-fill'} sx={{ width: 20, height: 20 }} />\n        </IconButton>\n      );\n    },\n  },\n];\n\n// ----------------------------------------------------------------------\n\nRatingInputValue.propTypes = {\n  applyValue: PropTypes.func,\n  item: PropTypes.shape({\n    value: PropTypes.number,\n  }),\n};\n\nfunction RatingInputValue({ item, applyValue }) {\n  return (\n    <Box sx={{ p: 1, height: 1, alignItems: 'flex-end', display: 'flex' }}>\n      <Rating\n        size=\"small\"\n        precision={0.5}\n        placeholder=\"Filter value\"\n        value={Number(item.value)}\n        onChange={(event, newValue) => {\n          applyValue({ ...item, value: newValue });\n        }}\n      />\n    </Box>\n  );\n}\n\nexport default function DataGridCustom() {\n  const [selectionModel, setSelectionModel] = useState([]);\n\n  if (columns.length > 0) {\n    const ratingColumn = columns.find((column) => column.field === 'rating');\n    const ratingColIndex = columns.findIndex((col) => col.field === 'rating');\n\n    const ratingFilterOperators = getGridNumericColumnOperators().map((operator) => ({\n      ...operator,\n      InputComponent: RatingInputValue,\n    }));\n    columns[ratingColIndex] = {\n      ...ratingColumn,\n      filterOperators: ratingFilterOperators,\n    };\n  }\n\n  const selected = _dataGrid.filter((row) => selectionModel.includes(row.id));\n\n  console.log('selected', selected);\n\n  return (\n    <>\n      <DataGrid\n        checkboxSelection\n        disableSelectionOnClick\n        rows={_dataGrid}\n        columns={columns}\n        pagination\n        onSelectionModelChange={(newSelectionModel) => {\n          setSelectionModel(newSelectionModel);\n        }}\n        components={{\n          Toolbar: GridToolbar,\n        }}\n      />\n    </>\n  );\n}\n","// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Container, Stack, Card, CardHeader } from '@mui/material';\n// routes\nimport { PATH_PAGE } from '../../../../routes/paths';\n// components\nimport Page from '../../../../components/Page';\nimport HeaderBreadcrumbs from '../../../../components/HeaderBreadcrumbs';\n//\nimport DataGridBasic from './DataGridBasic';\nimport DataGridCustom from './DataGridCustom';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function DataGridComponent() {\n  return (\n    <Page title=\"Components: DataGrid\">\n      <RootStyle>\n        <Box\n          sx={{\n            pt: 6,\n            pb: 1,\n            mb: 10,\n            bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n          }}\n        >\n          <Container>\n            <HeaderBreadcrumbs\n              heading=\"DataGrid\"\n              links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'DataGrid' }]}\n              moreLink=\"https://material-ui.com/components/data-grid\"\n            />\n          </Container>\n        </Box>\n\n        <Container>\n          <Stack spacing={5}>\n            <Card>\n              <CardHeader title=\"Basic\" sx={{ mb: 2 }} />\n              <Box sx={{ height: 390 }}>\n                <DataGridBasic />\n              </Box>\n            </Card>\n\n            <Card>\n              <CardHeader title=\"Custom\" sx={{ mb: 2 }} />\n              <Box sx={{ height: 720 }}>\n                <DataGridCustom />\n              </Box>\n            </Card>\n          </Stack>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}