{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","pages/overview/mui/table/BasicTable.js","pages/overview/mui/table/collapsible-table/CollapsibleTableRow.js","pages/overview/mui/table/collapsible-table/index.js","pages/overview/mui/table/sorting-selecting/SortingSelectingHead.js","pages/overview/mui/table/sorting-selecting/SortingSelectingToolbar.js","pages/overview/mui/table/sorting-selecting/index.js","pages/overview/mui/table/GroupingFixedHeader.js","pages/overview/mui/table/index.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","last","name","listDefault","map","link","LinkItem","listActiveLast","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","component","width","height","borderRadius","bgcolor","href","icon","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","createData","calories","fat","carbs","protein","BASIC_TABLE","BasicTable","Scrollbar","TableContainer","minWidth","Table","TableHead","TableRow","TableCell","align","TableBody","row","scope","CollapsibleTableRow","props","useState","open","setOpen","IconButton","size","onClick","Iconify","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","history","historyRow","date","customerId","amount","Math","round","price","COLLAPSIBLE_TABLE","CollapsibleTable","visuallyHidden","border","clip","padding","position","SortingSelectingHead","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","Checkbox","indeterminate","checked","onChange","event","inputProps","headCell","numeric","disablePadding","sortDirection","id","TableSortLabel","active","direction","label","RootStyle","styled","Toolbar","justifyContent","theme","spacing","SortingSelectingToolbar","isLight","useTheme","palette","mode","Tooltip","title","SORTING_SELECTING_TABLE","TABLE_HEAD","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","index","sort","SortingSelecting","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","max","length","property","newSelecteds","n","slice","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","tabIndex","TablePagination","rowsPerPageOptions","count","onPageChange","e","onRowsPerPageChange","parseInt","value","px","py","top","md","FormControlLabel","control","Switch","code","population","density","GROUPING_TABLE","COLUMNS","format","toLocaleString","toFixed","GroupingFixedHeader","maxHeight","stickyHeader","background","paper","column","newPage","TableComponent","Page","pt","pb","Container","PATH_PAGE","components","Stack","Card","CardHeader"],"mappings":"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","file":"static/js/124.9f03579d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { last } from 'lodash';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = last(links)?.name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","// @mui\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer } from '@mui/material';\n// components\nimport Scrollbar from '../../../../components/Scrollbar';\n\n// ----------------------------------------------------------------------\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst BASIC_TABLE = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\n// ----------------------------------------------------------------------\n\nexport default function BasicTable() {\n  return (\n    <Scrollbar>\n      <TableContainer sx={{ minWidth: 800, mt: 3 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Dessert (100g serving)</TableCell>\n              <TableCell align=\"right\">Calories</TableCell>\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {BASIC_TABLE.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.calories}</TableCell>\n                <TableCell align=\"right\">{row.fat}</TableCell>\n                <TableCell align=\"right\">{row.carbs}</TableCell>\n                <TableCell align=\"right\">{row.protein}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Scrollbar>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n// @mui\nimport { Box, Table, Collapse, TableRow, TableHead, TableBody, TableCell, Typography, IconButton } from '@mui/material';\n// components\nimport Iconify from '../../../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nCollapsibleTableRow.propTypes = {\n  row: PropTypes.shape({\n    calories: PropTypes.number.isRequired,\n    carbs: PropTypes.number.isRequired,\n    fat: PropTypes.number.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        customerId: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    protein: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default function CollapsibleTableRow(props) {\n  const { row } = props;\n\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <TableRow>\n        <TableCell>\n          <IconButton size=\"small\" onClick={() => setOpen(!open)}>\n            <Iconify icon={open ? 'eva:arrow-ios-upward-fill' : 'eva:arrow-ios-downward-fill'} />\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"right\">{row.calories}</TableCell>\n        <TableCell align=\"right\">{row.fat}</TableCell>\n        <TableCell align=\"right\">{row.carbs}</TableCell>\n        <TableCell align=\"right\">{row.protein}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                History\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Customer</TableCell>\n                    <TableCell align=\"right\">Amount</TableCell>\n                    <TableCell align=\"right\">Total price ($)</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.history.map((historyRow) => (\n                    <TableRow key={historyRow.date}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {historyRow.date}\n                      </TableCell>\n                      <TableCell>{historyRow.customerId}</TableCell>\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\n                      <TableCell align=\"right\">{Math.round(historyRow.amount * row.price * 100) / 100}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\n","// @mui\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer } from '@mui/material';\n// components\nimport Scrollbar from '../../../../../components/Scrollbar';\n//\nimport CollapsibleTableRow from './CollapsibleTableRow';\n\n// ----------------------------------------------------------------------\n\nexport function createData(name, calories, fat, carbs, protein, price) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n    price,\n    history: [\n      {\n        date: '2020-01-05',\n        customerId: '11091700',\n        amount: 3,\n      },\n      {\n        date: '2020-01-02',\n        customerId: 'Anonymous',\n        amount: 1,\n      },\n    ],\n  };\n}\n\nconst COLLAPSIBLE_TABLE = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\n];\n\nexport default function CollapsibleTable() {\n  return (\n    <Scrollbar>\n      <TableContainer sx={{ minWidth: 800, mt: 3 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell>Dessert (100g serving)</TableCell>\n              <TableCell align=\"right\">Calories</TableCell>\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {COLLAPSIBLE_TABLE.map((row) => (\n              <CollapsibleTableRow key={row.name} row={row} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Scrollbar>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst visuallyHidden = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  height: '1px',\n  margin: -1,\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  width: '1px',\n};\n\nSortingSelectingHead.propTypes = {\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  headLabel: PropTypes.array.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n};\n\nexport default function SortingSelectingHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick,\n}) {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={(event) => onSelectAllClick(event.target.checked)}\n            inputProps={{\n              'aria-label': 'select all desserts',\n            }}\n          />\n        </TableCell>\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={() => onRequestSort(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={{ ...visuallyHidden }}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Toolbar, Tooltip, Typography, IconButton } from '@mui/material';\n// components\nimport Iconify from '../../../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3),\n}));\n\n// ----------------------------------------------------------------------\n\nSortingSelectingToolbar.propTypes = {\n  numSelected: PropTypes.number,\n};\n\nexport default function SortingSelectingToolbar({ numSelected }) {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n\n  return (\n    <RootStyle\n      sx={{\n        ...(numSelected > 0 && {\n          color: isLight ? 'primary.main' : 'text.primary',\n          bgcolor: isLight ? 'primary.lighter' : 'primary.dark',\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Sorting & Selecting\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <Iconify icon={'eva:trash-2-outline'} />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <Iconify icon={'ic:round-filter-list'} />\n          </IconButton>\n        </Tooltip>\n      )}\n    </RootStyle>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Box,\n  Table,\n  Switch,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  FormControlLabel,\n} from '@mui/material';\n// components\nimport Scrollbar from '../../../../../components/Scrollbar';\n//\nimport SortingSelectingHead from './SortingSelectingHead';\nimport SortingSelectingToolbar from './SortingSelectingToolbar';\n\n// ----------------------------------------------------------------------\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst SORTING_SELECTING_TABLE = [\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  createData('KitKat', 518, 26.0, 65, 7.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0),\n  createData('Marshmallow', 318, 0, 81, 2.0),\n  createData('Nougat', 360, 19.0, 9, 37.0),\n  createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\nconst TABLE_HEAD = [\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: true,\n    label: 'Dessert (100g serving)',\n  },\n  {\n    id: 'calories',\n    numeric: true,\n    disablePadding: false,\n    label: 'Calories',\n  },\n  {\n    id: 'fat',\n    numeric: true,\n    disablePadding: false,\n    label: 'Fat (g)',\n  },\n  {\n    id: 'carbs',\n    numeric: true,\n    disablePadding: false,\n    label: 'Carbs (g)',\n  },\n  {\n    id: 'protein',\n    numeric: true,\n    disablePadding: false,\n    label: 'Protein (g)',\n  },\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function SortingSelecting() {\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('calories');\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [dense, setDense] = useState(false);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (checked) => {\n    if (checked) {\n      const newSelecteds = SORTING_SELECTING_TABLE.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty SORTING_SELECTING_TABLE.\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - SORTING_SELECTING_TABLE.length) : 0;\n\n  return (\n    <div>\n      <SortingSelectingToolbar numSelected={selected.length} />\n\n      <Scrollbar>\n        <TableContainer sx={{ minWidth: 800 }}>\n          <Table size={dense ? 'small' : 'medium'}>\n            <SortingSelectingHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              rowCount={SORTING_SELECTING_TABLE.length}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {stableSort(SORTING_SELECTING_TABLE, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={() => handleClick(row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox checked={isItemSelected} />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n\n      <Box sx={{ position: 'relative' }}>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={SORTING_SELECTING_TABLE.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={(e, page) => handleChangePage(page)}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n        <Box\n          sx={{\n            px: 3,\n            py: 1.5,\n            top: 0,\n            position: { md: 'absolute' },\n          }}\n        >\n          <FormControlLabel\n            control={<Switch checked={dense} onChange={(event) => setDense(event.target.checked)} />}\n            label=\"Dense padding\"\n          />\n        </Box>\n      </Box>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer, TablePagination } from '@mui/material';\n// components\nimport Scrollbar from '../../../../components/Scrollbar';\n\n// ----------------------------------------------------------------------\n\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return { name, code, population, size, density };\n}\n\nconst GROUPING_TABLE = [\n  createData('India', 'IN', 1324171354, 3287263),\n  createData('China', 'CN', 1403500365, 9596961),\n  createData('Italy', 'IT', 60483973, 301340),\n  createData('United States', 'US', 327167434, 9833520),\n  createData('Canada', 'CA', 37602103, 9984670),\n  createData('Australia', 'AU', 25475400, 7692024),\n  createData('Germany', 'DE', 83019200, 357578),\n  createData('Ireland', 'IE', 4857000, 70273),\n  createData('Mexico', 'MX', 126577691, 1972550),\n  createData('Japan', 'JP', 126317000, 377973),\n  createData('France', 'FR', 67022000, 640679),\n  createData('United Kingdom', 'GB', 67545757, 242495),\n  createData('Russia', 'RU', 146793744, 17098246),\n  createData('Nigeria', 'NG', 200962417, 923768),\n  createData('Brazil', 'BR', 210147125, 8515767),\n];\n\nconst COLUMNS = [\n  { id: 'name', label: 'Name', minWidth: 170 },\n  { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\n  {\n    id: 'population',\n    label: 'Population',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'size',\n    label: 'Size\\u00a0(km\\u00b2)',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'density',\n    label: 'Density',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toFixed(2),\n  },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function GroupingFixedHeader() {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <>\n      <Scrollbar>\n        <TableContainer sx={{ minWidth: 800, maxHeight: 400 }}>\n          <Table stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell\n                  align=\"center\"\n                  colSpan={2}\n                  sx={{\n                    background: (theme) => theme.palette.background.paper,\n                  }}\n                >\n                  Country\n                </TableCell>\n                <TableCell align=\"center\" colSpan={3} sx={{ background: (theme) => theme.palette.background.paper }}>\n                  Details\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                {COLUMNS.map((column) => (\n                  <TableCell key={column.id} align={column.align} style={{ top: 56, minWidth: column.minWidth }}>\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {GROUPING_TABLE.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                  {COLUMNS.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n\n      <TablePagination\n        page={page}\n        component=\"div\"\n        count={GROUPING_TABLE.length}\n        rowsPerPage={rowsPerPage}\n        onPageChange={handleChangePage}\n        rowsPerPageOptions={[10, 25, 100]}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </>\n  );\n}\n","// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Card, Container, CardHeader, Stack } from '@mui/material';\n// routes\nimport { PATH_PAGE } from '../../../../routes/paths';\n// components\nimport Page from '../../../../components/Page';\nimport HeaderBreadcrumbs from '../../../../components/HeaderBreadcrumbs';\n//\nimport BasicTable from './BasicTable';\nimport CollapsibleTable from './collapsible-table';\nimport SortingSelecting from './sorting-selecting';\nimport GroupingFixedHeader from './GroupingFixedHeader';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15),\n}));\n\nexport default function TableComponent() {\n  return (\n    <Page title=\"Components: Table\">\n      <RootStyle>\n        <Box\n          sx={{\n            pt: 6,\n            pb: 1,\n            mb: 10,\n            bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n          }}\n        >\n          <Container>\n            <HeaderBreadcrumbs\n              heading=\"Table\"\n              links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Table' }]}\n              moreLink=\"https://mui.com/components/tables\"\n            />\n          </Container>\n        </Box>\n\n        <Container>\n          <Stack spacing={3}>\n            <Card>\n              <CardHeader title=\"Basic Table\" />\n              <BasicTable />\n            </Card>\n\n            <Card>\n              <SortingSelecting />\n            </Card>\n\n            <Card>\n              <CardHeader title=\"Grouping & FixedHeader\" />\n              <GroupingFixedHeader />\n            </Card>\n\n            <Card>\n              <CardHeader title=\"Collapsible Table\" />\n              <CollapsibleTable />\n            </Card>\n          </Stack>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}