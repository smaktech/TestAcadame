{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","utils/formatNumber.js","sections/@dashboard/user/cards/UserCard.js","pages/dashboard/UserCards.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","last","name","listDefault","map","link","LinkItem","listActiveLast","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","component","width","height","borderRadius","bgcolor","href","icon","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","fCurrency","number","numeral","format","Number","isInteger","fPercent","fNumber","fShortenNumber","replace","fData","OverlayStyle","styled","theme","cssStyles","bgBlur","blur","palette","primary","darker","top","zIndex","content","position","UserCard","user","cover","follower","totalPost","avatarUrl","following","Card","textAlign","Box","SvgIconStyle","src","left","right","bottom","mx","Avatar","alt","Image","ratio","Typography","Stack","SocialsButton","initialColor","my","Divider","borderStyle","py","gridTemplateColumns","UserCards","themeStretch","useSettings","Page","title","Container","PATH_DASHBOARD","root","gap","xs","sm","md","_userCards","id"],"mappings":"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","file":"static/js/85.0ef554b6.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { last } from 'lodash';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = last(links)?.name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\n}\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Card, Avatar, Divider, Typography, Stack } from '@mui/material';\n// utils\nimport cssStyles from '../../../../utils/cssStyles';\nimport { fShortenNumber } from '../../../../utils/formatNumber';\n// components\nimport Image from '../../../../components/Image';\nimport SocialsButton from '../../../../components/SocialsButton';\nimport SvgIconStyle from '../../../../components/SvgIconStyle';\n\n// ----------------------------------------------------------------------\n\nconst OverlayStyle = styled('div')(({ theme }) => ({\n  ...cssStyles().bgBlur({ blur: 2, color: theme.palette.primary.darker }),\n  top: 0,\n  zIndex: 8,\n  content: \"''\",\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n}));\n\n// ----------------------------------------------------------------------\n\nUserCard.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default function UserCard({ user }) {\n  const { name, cover, position, follower, totalPost, avatarUrl, following } = user;\n\n  return (\n    <Card sx={{ textAlign: 'center' }}>\n      <Box sx={{ position: 'relative' }}>\n        <SvgIconStyle\n          src=\"https://minimal-assets-api.vercel.app/assets/icons/shape-avatar.svg\"\n          sx={{\n            width: 144,\n            height: 62,\n            zIndex: 10,\n            left: 0,\n            right: 0,\n            bottom: -26,\n            mx: 'auto',\n            position: 'absolute',\n            color: 'background.paper',\n          }}\n        />\n        <Avatar\n          alt={name}\n          src={avatarUrl}\n          sx={{\n            width: 64,\n            height: 64,\n            zIndex: 11,\n            left: 0,\n            right: 0,\n            bottom: -32,\n            mx: 'auto',\n            position: 'absolute',\n          }}\n        />\n        <OverlayStyle />\n        <Image src={cover} alt={cover} ratio=\"16/9\" />\n      </Box>\n\n      <Typography variant=\"subtitle1\" sx={{ mt: 6 }}>\n        {name}\n      </Typography>\n\n      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n        {position}\n      </Typography>\n\n      <Stack alignItems=\"center\">\n        <SocialsButton initialColor sx={{ my: 2.5 }} />\n      </Stack>\n\n      <Divider sx={{ borderStyle: 'dashed' }} />\n\n      <Box sx={{ py: 3, display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)' }}>\n        <div>\n          <Typography variant=\"caption\" component=\"div\" sx={{ mb: 0.75, color: 'text.disabled' }}>\n            Follower\n          </Typography>\n          <Typography variant=\"subtitle1\">{fShortenNumber(follower)}</Typography>\n        </div>\n\n        <div>\n          <Typography variant=\"caption\" component=\"div\" sx={{ mb: 0.75, color: 'text.disabled' }}>\n            Following\n          </Typography>\n          <Typography variant=\"subtitle1\">{fShortenNumber(following)}</Typography>\n        </div>\n\n        <div>\n          <Typography variant=\"caption\" component=\"div\" sx={{ mb: 0.75, color: 'text.disabled' }}>\n            Total Post\n          </Typography>\n          <Typography variant=\"subtitle1\">{fShortenNumber(totalPost)}</Typography>\n        </div>\n      </Box>\n    </Card>\n  );\n}\n","// @mui\nimport { Container, Box } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// _mock_\nimport { _userCards } from '../../_mock';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\n// sections\nimport { UserCard } from '../../sections/@dashboard/user/cards';\n\n// ----------------------------------------------------------------------\n\nexport default function UserCards() {\n  const { themeStretch } = useSettings();\n\n  return (\n    <Page title=\"User: Cards\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"User Cards\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'User', href: PATH_DASHBOARD.user.root },\n            { name: 'Cards' },\n          ]}\n        />\n\n        <Box\n          sx={{\n            display: 'grid',\n            gap: 3,\n            gridTemplateColumns: {\n              xs: 'repeat(1, 1fr)',\n              sm: 'repeat(2, 1fr)',\n              md: 'repeat(3, 1fr)',\n            },\n          }}\n        >\n          {_userCards.map((user) => (\n            <UserCard key={user.id} user={user} />\n          ))}\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}