{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","utils/formatNumber.js","../../src/index.ts","components/upload/UploadMultiFile.js","components/upload/UploadSingleFile.js","components/upload/UploadAvatar.js","sections/@dashboard/user/UserNewForm.js","pages/dashboard/UserCreate.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","last","name","listDefault","map","link","LinkItem","listActiveLast","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","component","width","height","borderRadius","bgcolor","href","icon","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","fCurrency","number","numeral","format","Number","isInteger","fPercent","fNumber","fShortenNumber","replace","fData","DropZoneStyle","styled","theme","outline","textAlign","flexDirection","justifyContent","padding","spacing","shape","backgroundColor","palette","background","neutral","border","grey","opacity","cursor","breakpoints","up","UploadMultiFile","error","showPreview","files","onRemove","onRemoveAll","hasFile","length","useDropzone","getRootProps","getInputProps","isDragActive","isDragReject","fileRejections","ShowRejectionItems","Paper","py","px","borderColor","alpha","main","file","errors","path","size","Box","my","Typography","e","message","code","p","ml","md","textDecoration","List","disablePadding","AnimatePresence","key","preview","getFileData","ListItem","m","div","varFade","inRight","position","Image","src","ratio","top","right","IconButton","onClick","Iconify","divider","ListItemIcon","ListItemText","primary","secondary","primaryTypographyProps","secondaryTypographyProps","ListItemSecondaryAction","edge","Stack","direction","Button","transition","transitions","create","UploadSingleFile","multiple","alt","objectFit","RootStyle","margin","zIndex","PlaceholderStyle","text","easing","easeInOut","duration","shorter","UploadAvatar","caption","className","capitalCaseTransform","input","toLowerCase","capitalCase","options","delimiter","transform","UserNewForm","isEdit","currentUser","navigate","useNavigate","enqueueSnackbar","useSnackbar","NewUserSchema","Yup","required","email","phoneNumber","address","country","company","state","city","role","avatarUrl","formik","useFormik","enableReinitialize","initialValues","zipCode","isVerified","status","validationSchema","onSubmit","values","a","setSubmitting","resetForm","setErrors","Promise","resolve","setTimeout","PATH_DASHBOARD","user","list","console","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","handleDrop","useCallback","acceptedFiles","URL","createObjectURL","value","noValidate","autoComplete","Grid","container","item","xs","Card","Label","textTransform","accept","maxSize","onDrop","Boolean","mx","FormHelperText","FormControlLabel","labelPlacement","control","Switch","onChange","event","checked","label","sm","TextField","fullWidth","helperText","select","placeholder","SelectProps","native","countries","option","LoadingButton","type","loading","UserCreate","themeStretch","useSettings","pathname","useLocation","useParams","includes","_userList","find","paramCase","Page","title","Container","root"],"mappings":"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","file":"static/js/39.1b5b011d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { last } from 'lodash';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = last(links)?.name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\n}\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function capitalCaseTransform(input: string) {\n  return upperCaseFirst(input.toLowerCase());\n}\n\nexport function capitalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: capitalCaseTransform,\n    ...options,\n  });\n}\n","import PropTypes from 'prop-types';\nimport { isString } from 'lodash';\nimport { useDropzone } from 'react-dropzone';\nimport { m, AnimatePresence } from 'framer-motion';\n// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport {\n  Box,\n  List,\n  Stack,\n  Paper,\n  Button,\n  ListItem,\n  Typography,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@mui/material';\n// utils\nimport { fData } from '../../utils/formatNumber';\n// assets\nimport { UploadIllustration } from '../../assets';\n//\nimport Image from '../Image';\nimport Iconify from '../Iconify';\nimport { varFade } from '../animate';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  textAlign: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 1),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': { opacity: 0.72, cursor: 'pointer' },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' },\n}));\n\n// ----------------------------------------------------------------------\n\nconst getFileData = (file) => {\n  if (typeof file === 'string') {\n    return {\n      key: file,\n    };\n  }\n  return {\n    key: file.name,\n    name: file.name,\n    size: file.size,\n    preview: file.preview,\n  };\n};\n\nUploadMultiFile.propTypes = {\n  error: PropTypes.bool,\n  showPreview: PropTypes.bool,\n  files: PropTypes.array,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  sx: PropTypes.object,\n};\n\nexport default function UploadMultiFile({ error, showPreview = false, files, onRemove, onRemoveAll, sx, ...other }) {\n  const hasFile = files.length > 0;\n\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    ...other,\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter',\n          }),\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n\n      <List disablePadding sx={{ ...(hasFile && { my: 3 }) }}>\n        <AnimatePresence>\n          {files.map((file) => {\n            const { key, name, size, preview } = getFileData(file);\n\n            if (showPreview) {\n              return (\n                <ListItem\n                  key={key}\n                  component={m.div}\n                  {...varFade().inRight}\n                  sx={{\n                    p: 0,\n                    m: 0.5,\n                    width: 80,\n                    height: 80,\n                    borderRadius: 1.5,\n                    overflow: 'hidden',\n                    position: 'relative',\n                    display: 'inline-flex',\n                  }}\n                >\n                  <Image src={isString(file) ? file : preview} ratio=\"1/1\" />\n                  <Box sx={{ top: 6, right: 6, position: 'absolute' }}>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => onRemove(file)}\n                      sx={{\n                        p: '2px',\n                        color: 'common.white',\n                        bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\n                        '&:hover': {\n                          bgcolor: (theme) => alpha(theme.palette.grey[900], 0.48),\n                        },\n                      }}\n                    >\n                      <Iconify icon={'eva:close-fill'} />\n                    </IconButton>\n                  </Box>\n                </ListItem>\n              );\n            }\n\n            return (\n              <ListItem\n                key={key}\n                component={m.div}\n                {...varFade().inRight}\n                sx={{\n                  my: 1,\n                  py: 0.75,\n                  px: 2,\n                  borderRadius: 1,\n                  border: (theme) => `solid 1px ${theme.palette.divider}`,\n                  bgcolor: 'background.paper',\n                }}\n              >\n                <ListItemIcon>\n                  <Iconify icon={'eva:file-fill'} width={28} height={28} />\n                </ListItemIcon>\n                <ListItemText\n                  primary={isString(file) ? file : name}\n                  secondary={isString(file) ? '' : fData(size || 0)}\n                  primaryTypographyProps={{ variant: 'subtitle2' }}\n                  secondaryTypographyProps={{ variant: 'caption' }}\n                />\n                <ListItemSecondaryAction>\n                  <IconButton edge=\"end\" size=\"small\" onClick={() => onRemove(file)}>\n                    <Iconify icon={'eva:close-fill'} />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </AnimatePresence>\n      </List>\n\n      {hasFile && (\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\n          <Button onClick={onRemoveAll} sx={{ mr: 1.5 }}>\n            Remove all\n          </Button>\n          <Button variant=\"contained\">Upload files</Button>\n        </Stack>\n      )}\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { isString } from 'lodash';\nimport { useDropzone } from 'react-dropzone';\n// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Typography, Paper } from '@mui/material';\n// utils\nimport { fData } from '../../utils/formatNumber';\n// assets\nimport { UploadIllustration } from '../../assets';\n//\nimport Image from '../Image';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  textAlign: 'center',\n  position: 'relative',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 0),\n  borderRadius: theme.shape.borderRadius,\n  transition: theme.transitions.create('padding'),\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': {\n    opacity: 0.72,\n    cursor: 'pointer',\n  },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' },\n}));\n\n// ----------------------------------------------------------------------\n\nUploadSingleFile.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  sx: PropTypes.object,\n};\n\nexport default function UploadSingleFile({ error = false, file, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other,\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter',\n          }),\n          ...(file && { padding: '12% 0' }),\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n\n        {file && (\n          <Image\n            alt=\"file preview\"\n            src={isString(file) ? file : file.preview}\n            sx={{\n              top: 8,\n              borderRadius: 1,\n              objectFit: 'cover',\n              position: 'absolute',\n              width: 'calc(100% - 24px)',\n              height: 'calc(100% - 24px)',\n            }}\n          />\n        )}\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { isString } from 'lodash';\nimport { useDropzone } from 'react-dropzone';\n// @mui\nimport { Box, Typography, Paper } from '@mui/material';\nimport { alpha, styled } from '@mui/material/styles';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport Image from '../Image';\nimport Iconify from '../Iconify';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: 'auto',\n  borderRadius: '50%',\n  padding: theme.spacing(1),\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n}));\n\nconst DropZoneStyle = styled('div')({\n  zIndex: 0,\n  width: '100%',\n  height: '100%',\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  borderRadius: '50%',\n  position: 'relative',\n  alignItems: 'center',\n  justifyContent: 'center',\n  '& > *': { width: '100%', height: '100%' },\n  '&:hover': {\n    cursor: 'pointer',\n    '& .placeholder': {\n      zIndex: 9,\n    },\n  },\n});\n\nconst PlaceholderStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  position: 'absolute',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  color: theme.palette.text.secondary,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create('opacity', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&:hover': { opacity: 0.72 },\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  caption: PropTypes.node,\n  sx: PropTypes.object,\n};\n\nexport default function UploadAvatar({ error, file, caption, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other,\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        my: 2,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <>\n      <RootStyle sx={sx}>\n        <DropZoneStyle\n          {...getRootProps()}\n          sx={{\n            ...(isDragActive && { opacity: 0.72 }),\n            ...((isDragReject || error) && {\n              color: 'error.main',\n              borderColor: 'error.light',\n              bgcolor: 'error.lighter',\n            }),\n          }}\n        >\n          <input {...getInputProps()} />\n\n          {file && <Image alt=\"avatar\" src={isString(file) ? file : file.preview} sx={{ zIndex: 8 }} />}\n\n          <PlaceholderStyle\n            className=\"placeholder\"\n            sx={{\n              ...(file && {\n                opacity: 0,\n                color: 'common.white',\n                bgcolor: 'grey.900',\n                '&:hover': { opacity: 0.72 },\n              }),\n            }}\n          >\n            <Iconify icon={'ic:round-add-a-photo'} sx={{ width: 24, height: 24, mb: 1 }} />\n            <Typography variant=\"caption\">{file ? 'Update photo' : 'Upload photo'}</Typography>\n          </PlaceholderStyle>\n        </DropZoneStyle>\n      </RootStyle>\n\n      {caption}\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </>\n  );\n}\n","import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useCallback } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// @mui\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Card, Grid, Stack, Switch, TextField, Typography, FormHelperText, FormControlLabel } from '@mui/material';\n// utils\nimport { fData } from '../../../utils/formatNumber';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// _mock\nimport { countries } from '../../../_mock';\n// components\nimport Label from '../../../components/Label';\nimport { UploadAvatar } from '../../../components/upload';\n\n// ----------------------------------------------------------------------\n\nUserNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentUser: PropTypes.object,\n};\n\nexport default function UserNewForm({ isEdit, currentUser }) {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const NewUserSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().required('Email is required').email(),\n    phoneNumber: Yup.string().required('Phone number is required'),\n    address: Yup.string().required('Address is required'),\n    country: Yup.string().required('country is required'),\n    company: Yup.string().required('Company is required'),\n    state: Yup.string().required('State is required'),\n    city: Yup.string().required('City is required'),\n    role: Yup.string().required('Role Number is required'),\n    avatarUrl: Yup.mixed().required('Avatar is required'),\n  });\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      name: currentUser?.name || '',\n      email: currentUser?.email || '',\n      phoneNumber: currentUser?.phoneNumber || '',\n      address: currentUser?.address || '',\n      country: currentUser?.country || '',\n      state: currentUser?.state || '',\n      city: currentUser?.city || '',\n      zipCode: currentUser?.zipCode || '',\n      avatarUrl: currentUser?.avatarUrl || null,\n      isVerified: currentUser?.isVerified || true,\n      status: currentUser?.status,\n      company: currentUser?.company || '',\n      role: currentUser?.role || '',\n    },\n    validationSchema: NewUserSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      try {\n        await new Promise((resolve) => setTimeout(resolve, 500));\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n        navigate(PATH_DASHBOARD.user.list);\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    },\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      if (file) {\n        setFieldValue('avatarUrl', {\n          ...file,\n          preview: URL.createObjectURL(file),\n        });\n      }\n    },\n    [setFieldValue]\n  );\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <Card sx={{ py: 10, px: 3 }}>\n              {isEdit && (\n                <Label\n                  color={values.status !== 'active' ? 'error' : 'success'}\n                  sx={{ textTransform: 'uppercase', position: 'absolute', top: 24, right: 24 }}\n                >\n                  {values.status}\n                </Label>\n              )}\n\n              <Box sx={{ mb: 5 }}>\n                <UploadAvatar\n                  accept=\"image/*\"\n                  file={values.avatarUrl}\n                  maxSize={3145728}\n                  onDrop={handleDrop}\n                  error={Boolean(touched.avatarUrl && errors.avatarUrl)}\n                  caption={\n                    <Typography\n                      variant=\"caption\"\n                      sx={{\n                        mt: 2,\n                        mx: 'auto',\n                        display: 'block',\n                        textAlign: 'center',\n                        color: 'text.secondary',\n                      }}\n                    >\n                      Allowed *.jpeg, *.jpg, *.png, *.gif\n                      <br /> max size of {fData(3145728)}\n                    </Typography>\n                  }\n                />\n                <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\n                  {touched.avatarUrl && errors.avatarUrl}\n                </FormHelperText>\n              </Box>\n\n              {isEdit && (\n                <FormControlLabel\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      onChange={(event) => setFieldValue('status', event.target.checked ? 'banned' : 'active')}\n                      checked={values.status !== 'active'}\n                    />\n                  }\n                  label={\n                    <>\n                      <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                        Banned\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                        Apply disable account\n                      </Typography>\n                    </>\n                  }\n                  sx={{ mx: 0, mb: 3, width: 1, justifyContent: 'space-between' }}\n                />\n              )}\n\n              <FormControlLabel\n                labelPlacement=\"start\"\n                control={<Switch {...getFieldProps('isVerified')} checked={values.isVerified} />}\n                label={\n                  <>\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                      Email Verified\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                      Disabling this will automatically send the user a verification email\n                    </Typography>\n                  </>\n                }\n                sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\n              />\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Full Name\"\n                    {...getFieldProps('name')}\n                    error={Boolean(touched.name && errors.name)}\n                    helperText={touched.name && errors.name}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Email Address\"\n                    {...getFieldProps('email')}\n                    error={Boolean(touched.email && errors.email)}\n                    helperText={touched.email && errors.email}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Phone Number\"\n                    {...getFieldProps('phoneNumber')}\n                    error={Boolean(touched.phoneNumber && errors.phoneNumber)}\n                    helperText={touched.phoneNumber && errors.phoneNumber}\n                  />\n                  <TextField\n                    select\n                    fullWidth\n                    label=\"Country\"\n                    placeholder=\"Country\"\n                    {...getFieldProps('country')}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.country && errors.country)}\n                    helperText={touched.country && errors.country}\n                  >\n                    <option value=\"\" />\n                    {countries.map((option) => (\n                      <option key={option.code} value={option.label}>\n                        {option.label}\n                      </option>\n                    ))}\n                  </TextField>\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"State/Region\"\n                    {...getFieldProps('state')}\n                    error={Boolean(touched.state && errors.state)}\n                    helperText={touched.state && errors.state}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"City\"\n                    {...getFieldProps('city')}\n                    error={Boolean(touched.city && errors.city)}\n                    helperText={touched.city && errors.city}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Address\"\n                    {...getFieldProps('address')}\n                    error={Boolean(touched.address && errors.address)}\n                    helperText={touched.address && errors.address}\n                  />\n                  <TextField fullWidth label=\"Zip/Code\" {...getFieldProps('zipCode')} />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Company\"\n                    {...getFieldProps('company')}\n                    error={Boolean(touched.company && errors.company)}\n                    helperText={touched.company && errors.company}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Role\"\n                    {...getFieldProps('role')}\n                    error={Boolean(touched.role && errors.role)}\n                    helperText={touched.role && errors.role}\n                  />\n                </Stack>\n\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                    {!isEdit ? 'Create User' : 'Save Changes'}\n                  </LoadingButton>\n                </Box>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import { paramCase, capitalCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// @mui\nimport { Container } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// _mock_\nimport { _userList } from '../../_mock';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\n// sections\nimport UserNewForm from '../../sections/@dashboard/user/UserNewForm';\n\n// ----------------------------------------------------------------------\n\nexport default function UserCreate() {\n  const { themeStretch } = useSettings();\n  const { pathname } = useLocation();\n  const { name = '' } = useParams();\n  const isEdit = pathname.includes('edit');\n\n  const currentUser = _userList.find((user) => paramCase(user.name) === name);\n\n  return (\n    <Page title=\"User: Create a new user\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Create a new user' : 'Edit user'}\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'User', href: PATH_DASHBOARD.user.list },\n            { name: !isEdit ? 'New user' : capitalCase(name) },\n          ]}\n        />\n\n        <UserNewForm isEdit={isEdit} currentUser={currentUser} />\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}